{
  "lastUpdate": "2025-10-06T00:08:14.747Z",
  "data": [
    {
      "id": "01k6v0bn0dwjqzbz870fkp2v4p",
      "title": "fi-le.net,",
      "url": "https://fi-le.net/oss/",
      "savedAt": "2025-10-05T20:17:39.341000+00:00",
      "description": "fi-le.net, the Fiefdom of Files",
      "tags": [
        "cs/ai"
      ]
    },
    {
      "id": "01k6ttdkr2xps4ttesy781fkyj",
      "title": "Getting silly with C, part ~(~1<<1)",
      "url": "https://lcamtuf.substack.com/p/getting-silly-with-c-part-11",
      "savedAt": "2025-10-05T18:33:52.130000+00:00",
      "description": "It's vibe coding. Relax, everyone is doing it.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ttd4g1tvrjmesk4wqtrmdx",
      "title": "The Syndrome of the Ultra-fit",
      "url": "https://desmolysium.com/the-syndrome-of-the-ultra-fit/?utm_source=rss&utm_medium=rss&utm_campaign=the-syndrome-of-the-ultra-fit",
      "savedAt": "2025-10-05T18:33:36.513000+00:00",
      "description": "I recently coached a client. From the outside, he appeared to be very fit. He had chiseled six-pack abs, exercised every day, and was very health-conscious. However, for the past couple of years, he had issues with energy levels and recovery. He also felt quite weak most of the time and his blood pressure (around […]",
      "tags": [
        "biohack",
        "for-later"
      ]
    },
    {
      "id": "01k6ttbs76npjtzv0mwtr3q6wk",
      "title": "Weird CPU architectures, the MOV only CPU",
      "url": "https://justanotherelectronicsblog.com/?p=771",
      "savedAt": "2025-10-05T18:32:52.198000+00:00",
      "description": "A CPU can be built using only a Move instruction by memory-mapping all components like the ALU and program counter. This design, called Transport Triggered Architecture (TTA), moves data to perform calculations instead of using traditional arithmetic operations. Although simple and quirky, such a CPU can run programs like calculating Fibonacci numbers but is not very fast or popular.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ttbbahphjyxq428ry93vey",
      "title": "UTF-8 is a Brilliant Design",
      "url": "https://iamvishnu.com/posts/utf8-is-brilliant-design",
      "savedAt": "2025-10-05T18:32:37.968000+00:00",
      "description": "UTF-8 is a smart, variable-width encoding that represents every Unicode character using one to four bytes. The first 128 codes match ASCII, and multi-byte characters use specific leading-bit patterns with 10-prefixed continuation bytes to form code points. This makes UTF-8 both backward compatible with ASCII and scalable for millions of characters.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ttaahftbg759yngphjxc59",
      "title": "Fail Fast",
      "url": "https://martinfowler.com/ieeeSoftware/failFast.pdf",
      "savedAt": "2025-10-05T18:32:04.398000+00:00",
      "description": "The article discusses the concept of \"failing fast\" in software development, which involves building software to immediately and visibly fail when a problem occurs, rather than continuing to operate and failing slowly in strange ways later on. The technique involves using assertions, which are tiny pieces of code that check a condition and fail if the condition isn't met. Assertions are useful in flushing out problems in the seams of the system, but they should not be used for every single variable assignment. The article also recommends creating a global exception handler to gracefully handle unexpected exceptions and bring them to the developers' attention.",
      "tags": [
        "cs",
        "for-later"
      ]
    },
    {
      "id": "01k6tt9wmwm3rvgbp847t37dmj",
      "title": "It Takes Two to Contract",
      "url": "https://tigerbeetle.com/blog/2023-12-27-it-takes-two-to-contract/",
      "savedAt": "2025-10-05T18:31:50.172000+00:00",
      "description": "Design by contract (DbC) involves using types and assertions to catch bugs and limit their consequences. While syntactic mechanisms are not necessary for effective use of DbC, writing more assertions can be beneficial. In object-oriented languages with inheritance, DbC provides first-class support for weakening preconditions and strengthening postconditions. Having assertions in both the call site and definition site improves readability and helps ensure assumptions are met. Pairing assertions provides robustness, defense in depth, and the ability to reason about the correctness of function calls. Assertions can also be used to check invariants in consensus protocols and ensure the equivalence of different code paths.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k6tt9fr87897afsf8m3vndkw",
      "title": "« A Beginner's Guide to Extending Emacs",
      "url": "https://blog.tjll.net/a-beginners-guide-to-extending-emacs/",
      "savedAt": "2025-10-05T18:31:36.968000+00:00",
      "description": "The blog post by Tyler Langlois is a beginner's guide to extending Emacs, focusing on how to create custom completion functions in Emacs Lisp (elisp). It explains using regular expressions to gather completion candidates and integrating them with Emacs' completion system. The guide emphasizes experimenting with functions within Emacs to learn and develop effective completion backends.",
      "tags": [
        "for-later",
        "tools/emacs"
      ]
    },
    {
      "id": "01k6tt8svz34rzne0pffy3whf1",
      "title": "Type Branding in Typescript",
      "url": "https://azraelsec.sh/2025/09/06/Typescript-Branding/",
      "savedAt": "2025-10-05T18:31:14.559000+00:00",
      "description": "TypeScript is structurally typed, so types with the same shape are interchangeable. Branded types add a phantom unique property to make a type nominal. This gives stronger type safety and prevents mixing incompatible values at compile time.",
      "tags": [
        "for-later",
        "type-theory",
        "cs/programming-languages/javascript"
      ]
    },
    {
      "id": "01k6tt7xp2xbxaxt6a8qhaswde",
      "title": "Why We're Building Stategraph: Terraform State as a Distributed Systems Problem",
      "url": "https://stategraph.dev/blog/why-stategraph",
      "savedAt": "2025-10-05T18:30:45.697000+00:00",
      "description": "Terraform state is a distributed systems problem masquerading as file storage. Graph state fixes the bottlenecks.",
      "tags": [
        "cs/devops",
        "for-later"
      ]
    },
    {
      "id": "01k6tt76sb6mhsahz69ej181vn",
      "title": "Many Hard Leetcode Problems are Easy Constraint Problems",
      "url": "https://buttondown.com/hillelwayne/archive/many-hard-leetcode-problems-are-easy-constraint/",
      "savedAt": "2025-10-05T18:30:22.251000+00:00",
      "description": "Use the right tool for the job.",
      "tags": [
        "for-later",
        "cs/algorithms"
      ]
    },
    {
      "id": "01k6tt5rd6jqt8mdjm0xkcr2vk",
      "title": "Is GitHub Actions suitable for running benchmarks?",
      "url": "https://labs.quansight.org/blog/2021/08/github-actions-benchmarks",
      "savedAt": "2025-10-05T18:29:34.757000+00:00",
      "description": "GitHub Actions can be used for reliable relative benchmarking by comparing two commits in the same CI job, which helps reduce measurement noise. The benchmarking process may take time, but it can effectively track performance changes over time, showing sensitivity to significant regressions. While some optimizations can speed up the process, maintaining accuracy is crucial, so the default settings that run multiple passes are recommended.",
      "tags": [
        "for-later",
        "infrastructure"
      ]
    },
    {
      "id": "01k6tt57zabrjj5wtd95hny2np",
      "title": "We have outgrown the Process model",
      "url": "https://sidhion.com/blog/process_model_outgrown/",
      "savedAt": "2025-10-05T18:29:17.930000+00:00",
      "description": "The Process model runs programs in isolated environments, which limits how they use system resources and share work. This model struggles with modern needs like continuous running, state persistence, and networking. Changing it is hard because current processors and operating systems are built around these old ideas.",
      "tags": [
        "for-later",
        "computer-history"
      ]
    },
    {
      "id": "01k6tt4dxdsjypry4qa2dagcsh",
      "title": "Folks, we have the best π",
      "url": "https://lcamtuf.substack.com/p/folks-we-have-the-best",
      "savedAt": "2025-10-05T18:28:51.245000+00:00",
      "description": "And some novel ideas for bicycle wheel design.",
      "tags": [
        "math",
        "for-later"
      ]
    },
    {
      "id": "01k6tt44fk7sg80gczq5kcfj8z",
      "title": "Algebraic Types are not Scary, Actually",
      "url": "https://blog.aiono.dev/posts/algebraic-types-are-not-scary,-actually.html",
      "savedAt": "2025-10-05T18:28:41.587000+00:00",
      "description": "Algebraic types are simple concepts that combine types like sets using addition and multiplication. Sum types let a value be from one type or another, helping handle cases like errors or nulls safely. Using algebraic types makes programming clearer and can reduce bugs compared to traditional methods.",
      "tags": [
        "for-later",
        "type-theory"
      ]
    },
    {
      "id": "01k6tt3reewamqgq3cabhr7nax",
      "title": "Beyond Orthogonality: How Language Models Pack Billions of Concepts into 12,000 Dimensions",
      "url": "https://nickyoder.com/johnson-lindenstrauss/",
      "savedAt": "2025-10-05T18:28:29.262000+00:00",
      "description": "High-dimensional spaces can pack enormous numbers of nearly-orthogonal vectors, so 12,288 dimensions can represent billions of concepts. The Johnson-Lindenstrauss lemma explains why low-dimensional projections can still preserve distances between points. GPU experiments found optimizer pitfalls but show practical embedding capacity far exceeds real-world needs.",
      "tags": [
        "cs/ai",
        "for-later"
      ]
    },
    {
      "id": "01k6tt2zme409kn185t42crmyc",
      "title": "Claude Can (Sometimes) Prove It",
      "url": "https://www.galois.com/articles/claude-can-sometimes-prove-it",
      "savedAt": "2025-10-05T18:28:03.854000+00:00",
      "description": "Claude Code can often write complex Lean proofs.  \nIt still needs a human guide and makes costly mistakes.  \nThis suggests AI could make theorem proving widely accessible, but agents aren’t yet autonomous.",
      "tags": [
        "math",
        "for-later"
      ]
    },
    {
      "id": "01k6tszg61qh4794sn6qghzpyr",
      "title": "Mathematical induction",
      "url": "https://www.lesswrong.com/w/mathematical-induction",
      "savedAt": "2025-10-05T18:26:09.728000+00:00",
      "description": "The principle of mathematical induction is a proof technique in which a statement, P(n), is proven about a set of natural numbers n. It may be best understood as treating the statements like dominoes: a statement P(n) is true if the n-th domino is knocked down. We must knock down a first domino, or prove that a base case P(m) is true. Next we must make sure the dominoes are close enough together to fall, or that the inductive step holds; in other words, we prove that if k≥m and P(k) is true, P(k+1) is true. Then since P(m) is true, P(m+1) is true; and since P(m+1) is true, P(m+2) is true, and so on.\n\n\nAn example\nWe'll do an example to build our intuition before giving the proper definition of the principle. We'll provide yet another proof that 1+2+⋯+n=n(n+1)2 for all integers n≥1. First, let's check the base case, where n=1: 1=1(1+1)2=22=1. This is (fairly obviously) true, so we can move forward with the inductive step. The inductive step includes an assumption, namely that the statement is true for some integer k that is larger than the base integer. For our example, if k≥1, we assume that 1+2+⋯+k=k(k+1)2 and try to prove that 1+2+⋯+k+(k+1)=(k+1)([k+1]+1)2. Take our assumption and add k+1 to both sides: 1+2+⋯+k+(k+1)=k(k+1)2+k+1. Now the left-hand sides of what we know and what we want are the same. Hopefully the right-hand side will shake out to be the same. Get common denominators so that the right-hand side of the above equation is k(k+1)2+2(k+1)2=(k+2)(k+1)2=(k+1)([k+1]+1)2. Therefore, 1+2+⋯+k+(k+1)=(k+1)([k+1]+1)2 as desired.\n\nLet P(n) be the statement for n≥1 that the sum of all integers between 1 and n is n(n+1)/2. At the beginning we showed that the base case, P(1), is true. Next we showed the inductive step, that if k≥1 and P(k) is true, then P(k+1) is true. This means that since P(1) is true, P(2) is true; and since P(2) is true, P(3) is true; etc., so that P(n) is true for all integers n≥1.\n\n\nDefinition for the natural numbers\nWe are ready to properly de",
      "tags": [
        "math",
        "for-later"
      ]
    },
    {
      "id": "01k6tsyvfpvk5dpwj1rre04gcr",
      "title": "Why argument structure is important",
      "url": "https://www.lesswrong.com/w/why-argument-structure-is-important",
      "savedAt": "2025-10-05T18:25:48.534000+00:00",
      "description": "Tldr;\n\nArbital should put design and engineering effort into better ways to structure discussions, such as defining terms, adding evidence for or against a claim, declaring cruxes, proposing tests, and posting challenges (e.g. “how might we…”). These structures will improve the quality of discussion and can plug together for collaborative truth-seeking.\n\n----------------------------------------\n\nProblem\n\nI see three structures of community-created content out on the Interwebs today:\n\n * Blogs and articles (long-ish form usually written by one author, permanent but sinks out of awareness quickly.)\n * Discussions that flow quickly (threaded discussions like reddit or Q&A sites like StackExchange), and\n * Wikis (permanent but appearing static and the evolution is hidden).\n\nWhat’s missing is multi-user collaboration about a permanent topic, seeking to arrive at a high-quality, trusted, and agreed upon statement of truth.\n\nReasoned disagreements driven by data, insights, and rationale help the group to test and refine the accuracy of arguments and decisions. Hashing out a complex problem like this demands diverse viewpoints and sources of knowledge.\n\nBut coming to that agreement is hard because you have to keep track of a complex and nested web of points and counterpoints, some that really matter and some that are nit-picks.\n\nWhich leaves people within a group feeling either that their point was missed and ignored and a bad decision was made, or that the group takes too long to come to agreement.\n\nProposal\n\nA truth-seeking platform can help groups:\n\n * focus on specific claims or questions,\n * track how they want to decide (decomposing cases and flagging crux arguments)\n * track evidence for and against different claims,\n * support nested evidence about whether each piece of evidence is true or not.\n\nSome claims will not be decided absolutely but will have evidence weighted more on one side or another.\n\nSoftware can integrate the quality of the evidence (perhaps measured",
      "tags": [
        "for-later",
        "philosophy"
      ]
    },
    {
      "id": "01k6tswa0ddxfdr783t2w5dv3s",
      "title": "Five Ways To Prioritize Better",
      "url": "https://www.lesswrong.com/posts/RaxaXBNmStYe289gC/five-ways-to-prioritize-better",
      "savedAt": "2025-10-05T18:24:25.100000+00:00",
      "description": "Prioritization is about choosing the most important actions to achieve your goals effectively. By identifying high-value tasks and addressing uncertainties first, you can save time and increase your impact. Focus on what actions will best lead you to your goals and adjust your approach based on feedback.",
      "tags": [
        "for-later",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "01k6tsvcvx9f42zhnz1wfmr2xk",
      "title": "Laziness death spirals — LessWrong",
      "url": "https://www.lesswrong.com/posts/JBR6AF9Gusv4u6Fwo/laziness-death-spirals",
      "savedAt": "2025-10-05T18:23:55.261000+00:00",
      "description": "I’ve claimed that Willpower compounds and that small wins in the present make it easier to get bigger wins in the future. Unfortunately, procrastinat…",
      "tags": [
        "for-later",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "01k6tssg9qp86zsqvjk8v8d8cj",
      "title": "My Algorithm for Beating Procrastination",
      "url": "https://www.lesswrong.com/posts/Ty2tjPwv8uyPK9vrz/my-algorithm-for-beating-procrastination",
      "savedAt": "2025-10-05T18:22:55.014000+00:00",
      "description": "Part of the sequence: The Science of Winning at Life …",
      "tags": [
        "for-later",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "01k6tsnp1vq6nhe27ay82b4wks",
      "title": "Full list of what made people more hard-working",
      "url": "https://www.lesswrong.com/posts/yX7Lfjbfyj2CwMGyH/list-of-how-people-have-become-more-hard-working",
      "savedAt": "2025-10-05T18:20:48.059000+00:00",
      "description": "I've recently asked how people have become more hard-working. I compiled the answers across the EA Forum and LessWrong (and some private messages) in…",
      "tags": [
        "for-later",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "01k6tsmxhxay5mbehyxypvh98y",
      "title": "Akrasia is confusion about what you want",
      "url": "https://www.lesswrong.com/posts/XmqqkfY8XAJ6LkwdP/akrasia-is-confusion-about-what-you-want",
      "savedAt": "2025-10-05T18:20:22.973000+00:00",
      "description": "Akrasia happens when you feel confused about what you truly want, causing you to act against your own intentions. This confusion comes from identifying too much with certain desires instead of accepting all your preferences equally. To overcome akrasia, try to stop clinging to a fixed idea of yourself and accept your mixed feelings without judgment.",
      "tags": [
        "for-later",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "01k6tsh6848jbftf4r7tt216h9",
      "title": "Subagents, akrasia, and coherence in humans",
      "url": "https://www.lesswrong.com/posts/oJwJzeZ6ar2Hr7KAX/subagents-akrasia-and-coherence-in-humans",
      "savedAt": "2025-10-05T18:18:20.804000+00:00",
      "description": "In the document \"Subagents, akrasia, and coherence in humans,\" the author discusses the concept of subagents within the mind and how they can lead to incoherent behavior. The presence of protector subagents is highlighted as a method for maintaining coherence within the mind. The document delves into the role of habits and conditioned responses in behavior, exploring the mechanisms behind behavioral change and the conflict between goal-directed and habitual modes of control. The author also touches on the complexity of human self-control and the factors influencing goal-directed versus habitual decision-making.",
      "tags": [
        "for-later",
        "productivity",
        "self-improvement"
      ]
    },
    {
      "id": "01k6tsgnke4kxwqdh81pxtczgy",
      "title": "#08 - B+Tree Data Structure (CMU Intro to Database Systems)",
      "url": "https://www.youtube.com/watch?v=u7ii_Lvm9rM",
      "savedAt": "2025-10-05T18:18:03.758000+00:00",
      "description": "Andy Pavlo (https://www.cs.cmu.edu/~pavlo/)\nSlides: https://15445.courses.cs.cmu.edu/fall2025/slides/08-indexes1.pdf\nNotes: https://15445.courses.cs.cmu.edu/fall2025/notes/08-indexes1.pdf\n\n15-445/645 Intro to Database Systems (Fall 2025)\nCarnegie Mellon University\nhttps://15445.courses.cs.cmu.edu/fall2025/",
      "tags": [
        "for-later",
        "cs/database"
      ]
    },
    {
      "id": "01k6tsg9184a7aktejsmpw3x5y",
      "title": "Building and operating a pretty big storage system called S3",
      "url": "https://www.allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html",
      "savedAt": "2025-10-05T18:17:50.888000+00:00",
      "description": "S3 is a living system that spans hardware, software, teams, and customers.  \nIts massive scale forces choices like spreading data across millions of hard drives and using erasure coding.  \nRunning S3 also needed organizational changes—team ownership, fail-fast practices, and stronger checks—to keep the service reliable.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k6tsfyx1v8kqx0ead7917330",
      "title": "Adventures in CPU contention",
      "url": "https://andre.arko.net/2025/09/23/adventures-in-cpu-contention/",
      "savedAt": "2025-10-05T18:17:40.513000+00:00",
      "description": "A change to use fdatasync made the jj test suite far slower on SSDs but much faster on a ramdisk.  \nOn macOS adding CPU cores helped only up to a point and then sometimes made things worse.  \nThe author thinks this is livelock or contention for some shared resource (cache, memory, or IO), not just RAM vs disk.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tsfj0v7xct851ha2xa1baa",
      "title": "How to Be a Leader When the Vibes Are Off",
      "url": "https://chaoticgood.management/how-to-be-a-leader-when-the-vibes-are-off/",
      "savedAt": "2025-10-05T18:17:27.323000+00:00",
      "description": "...and the vibes are definitely off\n\n\n\nIt feels different in tech right now. We’re coming off a long era where optimism carried the industry. Something has curdled. AI hype, return-to-office mandates, and continued layoffs have shifted the mood. Managers are quicker to fire, existential dread has replaced the confidence",
      "tags": [
        "career",
        "for-later"
      ]
    },
    {
      "id": "01k6tsf60e1j2bjjc4axs062hz",
      "title": "Fundamental of Virtual Memory",
      "url": "https://nghiant3223.github.io/2025/05/29/fundamental_of_virtual_memory.html",
      "savedAt": "2025-10-05T18:17:15.022000+00:00",
      "description": "Fundamental of Virtual Memory",
      "tags": [
        "hardware",
        "for-later"
      ]
    },
    {
      "id": "01k6tsez7y1bpavsx6hegt18mm",
      "title": "How has mathematics gotten so abstract?",
      "url": "https://lcamtuf.substack.com/p/how-has-mathematics-gotten-so-abstract",
      "savedAt": "2025-10-05T18:17:08.094000+00:00",
      "description": "What's the meaning of \"numbers\" and \"arithmetic operations\"? We consult Georg Cantor's turtles and look at Giuseppe Peano's code.",
      "tags": [
        "math",
        "for-later"
      ]
    },
    {
      "id": "01k6tseq56evyn3ftwtkbk92p5",
      "title": "Priorities",
      "url": "https://archaeologist.dev/artifacts/priorities",
      "savedAt": "2025-10-05T18:16:59.813000+00:00",
      "description": "Story time. I used to live in a rented townhouse across the street from a mansion.",
      "tags": [
        "engineering"
      ]
    },
    {
      "id": "01k6tsb051n5q5ds69myehm2cw",
      "title": "Property-Based Testing of OCaml 5's Runtime System - Midtgaard:OLIVIERFEST25.pdf",
      "url": "https://janmidtgaard.dk/papers/Midtgaard%3AOLIVIERFEST25.pdf",
      "savedAt": "2025-10-05T18:14:57.953000+00:00",
      "description": null,
      "tags": [
        "for-later",
        "cs/functional-programming"
      ]
    },
    {
      "id": "01k6tsasdn7c0a3z81m01fm1kz",
      "title": "Identity Types",
      "url": "https://bartoszmilewski.com/2025/09/22/identity-types/",
      "savedAt": "2025-10-05T18:14:51.061000+00:00",
      "description": "Previously: Models of (Dependent) Type Theory. There is a deep connection between mathematics and programming. Computer programs deal with such mathematical objects as numbers, vectors, monoids, fu…",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts9p5gqjkgx4vh604jc9kd",
      "title": "RNA structure prediction is hard. How much does that matter?",
      "url": "https://www.owlposting.com/p/rna-structure-prediction-is-hard",
      "savedAt": "2025-10-05T18:14:14.960000+00:00",
      "description": "4.8k words, 22 minute reading time",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts86a0a7d9vbqrrz1qcwk9",
      "title": "Does One Have to be a Genius to Do Maths?",
      "url": "https://terrytao.wordpress.com/career-advice/does-one-have-to-be-a-genius-to-do-maths/",
      "savedAt": "2025-10-05T18:13:25.952000+00:00",
      "description": "Better beware of notions like genius and inspiration; they are a sort of magic wand and should be used sparingly by anybody who wants to see things clearly. (José Ortega y Gasset, “Notes on t…",
      "tags": [
        "math",
        "favorites"
      ]
    },
    {
      "id": "01k6ts7m5vnd3875dpk3rbkf28",
      "title": "I built ChatGPT with Minecraft redstone!",
      "url": "https://www.youtube.com/watch?v=VaeI9YgE1o8",
      "savedAt": "2025-10-05T18:13:09.238000+00:00",
      "description": "I built a small language model in Minecraft using no command blocks or datapacks!\n\nThe model has 5,087,280 parameters, trained in Python on the TinyChat dataset of basic English conversations. It has an embedding dimension of 240, vocabulary of 1920 tokens, and consists of 6 layers. The context window size is 64 tokens, which is enough for (very) short conversations. Most weights were quantized to 8 bits, although the embedding and LayerNorm weights are stored at 18 and 24 bits respectively. The quantized weights are linked below; they are split into hundreds of files corresponding to the separate sections of ROM in the build.\n\nThe build occupies a volume of 1020x260x1656 blocks. Due to its immense size, the Distant Horizons mod was used to capture footage of the whole build; this results in distant redstone components looking strange as they are being rendered at a lower level of detail.\n\nIt can produce a response in about 2 hours when the tick rate is increased using MCHPRS (Minecraft High Performance Redstone Server) to about 40,000x speed.\n\n--------------------------------------------------\n\nWorld download (Vanilla, 1.20.4): https://drive.google.com/file/d/1pf1PtSqCLkHPj-vGpdOxRhDcug8rLIl0/view?usp=sharing\nWorld download (MCHPRS): https://drive.google.com/file/d/1GToQikx1VpJSOg5unnnFhJl8onq0DRhY/view?usp=sharing\nEmulator, weights and guide to running the model: https://github.com/sammyuri/craftgpt\nMCHPRS: https://github.com/MCHPR/MCHPRS\n\n--------------------------------------------------\n\nMusic: TheFatRat - Fire\nWatch the official music video: https://tinyurl.com/tfrfire\nListen here: https://thefatrat.ffm.to/fire\nFollow TheFatRat: https://ffm.bio/thefatrat\n\nThank you to my sisters, debbieuri and sofiuri, who were there through thick and thin (but mostly thin).",
      "tags": [
        "cs/ai"
      ]
    },
    {
      "id": "01k6ts74swh6wt96377k79h9wn",
      "title": "Notes on Self-Control",
      "url": "https://www.lesswrong.com/posts/53b9woahSTPQFtB2i/notes-on-self-control",
      "savedAt": "2025-10-05T18:12:51.643000+00:00",
      "description": "This post examines the virtue of self-control. I mostly summarize what others have learned about this virtue, rather than expressing my own opinions…",
      "tags": [
        "for-later",
        "self-improvement"
      ]
    },
    {
      "id": "01k6ts5tgqmaqqk28a36ff3rsh",
      "title": "how AWS S3 serves 1 petabyte per second on top of slow HDDs",
      "url": "https://bigdata.2minutestreaming.com/p/how-aws-s3-scales-with-tens-of-millions-of-hard-drives",
      "savedAt": "2025-10-05T18:12:08.343000+00:00",
      "description": "Learn how Amazon built the backbone of the modern web that scales to 1 PB/s and 150M QPS on commodity hard drives",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts5jp1vwswwma1q201y0e5",
      "title": "Walking around the compiler",
      "url": "https://bernsteinbear.com/blog/walking-around/",
      "savedAt": "2025-10-05T18:12:00.321000+00:00",
      "description": "Walking around outside is good for you.[citation needed] A nice amble through the trees can quiet inner turbulence and make complex engineering problems disappear.",
      "tags": [
        "for-later",
        "cs/compilers"
      ]
    },
    {
      "id": "01k6ts5dwztmeymrrkb655ntrh",
      "title": "Is Life a Form of Computation?",
      "url": "https://thereader.mitpress.mit.edu/is-life-a-form-of-computation/",
      "savedAt": "2025-10-05T18:11:55.423000+00:00",
      "description": "Turing and von Neumann argued that life is a form of computation.  \nBiological systems run distributed, noisy, massively parallel programs—DNA and cells act like computers.  \nWork on cellular automata and neural nets shows computation can produce lifelike growth, repair, and self-replication.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts4vkgbrctxm7cw16medky",
      "title": "Transformers KV Caching Explained",
      "url": "https://medium.com/@joaolages/kv-caching-explained-276520203249",
      "savedAt": "2025-10-05T18:11:36.688000+00:00",
      "description": "KV caching stores past Keys and Values during autoregressive decoding so the model only computes attention for new tokens. This makes attention matrices much smaller and speeds up generation a lot. The trade-off is slightly higher memory use, and most libraries enable KV caching by default.",
      "tags": [
        "cs/ai",
        "for-later"
      ]
    },
    {
      "id": "01k6ts4nfsnb8m61wxagkrnp8s",
      "title": "Testing is better than DSA",
      "url": "https://nedbatchelder.com/blog/202509/testing_is_better_than_dsa.html",
      "savedAt": "2025-10-05T18:11:30.425000+00:00",
      "description": "DSA topics are useful but often over-emphasized for everyday software work. Learning testing and how to write testable code is more valuable for most jobs. Tests improve code quality, design, and make you stand out in hiring.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts495vrvrhkatxz0vcq7th",
      "title": "Tips for Working with Legacy Code",
      "url": "https://www.esveo.com/en/blog/tips-for-working-with-legacy-code/",
      "savedAt": "2025-10-05T18:11:17.819000+00:00",
      "description": "Legacy code is hard to change but important to work with. Using tools like version control and writing tests helps manage it better. Taking breaks and documenting issues makes dealing with legacy code easier over time.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts2zzjq47wa3bbxsf129f1",
      "title": "How to waste CPU like a Professional",
      "url": "https://mostlynerdless.de/blog/2025/09/19/how-to-waste-cpu-like-a-professional/",
      "savedAt": "2025-10-05T18:10:41.097000+00:00",
      "description": "He needed a way to keep a thread busy on the CPU for a fixed time to test a profiler.  \nHe compares seven approaches—time checks, unoptimized loops, compiler attributes, volatile, inline asm, monotonic clock, and alarm signals—and measures kernel vs user time.  \nHe recommends the volatile-variable method because it works across compilers and keeps most work in user space.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts2samrm91g3v1kema35tb",
      "title": "Time Spent on Hardening",
      "url": "https://third-bit.com/2025/09/18/time-spent-on-hardening/",
      "savedAt": "2025-10-05T18:10:28.820000+00:00",
      "description": "We don’t know how much time or code developers spend on error detection and handling versus the happy path. The only clear number found is from 1995, saying it can exceed two-thirds of production code. That lack of direct measurement is surprising given how useful and easy such data would be to collect.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts29fqbb99dce8e9r7wjxd",
      "title": "What is \"good taste\" in software engineering?",
      "url": "https://www.seangoedecke.com/taste/",
      "savedAt": "2025-10-05T18:10:12.598000+00:00",
      "description": "Technical taste is different from skill: it’s what values you prefer in engineering, not how well you code. Good taste means choosing the right tradeoffs for the project; bad taste is being inflexible and forcing your preferences everywhere. You develop taste by working on varied projects and learning which values actually help each situation.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts183byqxzxce78tg9dgn5",
      "title": "The golden ratio as a number base",
      "url": "https://apieceofthepi.substack.com/p/the-golden-ratio-as-a-number-base",
      "savedAt": "2025-10-05T18:09:38.411000+00:00",
      "description": "Fibonacci numbers can uniquely represent every positive integer if you forbid using consecutive Fibonacci terms (Zeckendorf’s theorem). The golden ratio φ gives another base where every real number can be written as a sum of distinct powers of φ, with a similar nonconsecutive uniqueness rule. Recent work links special φ-representations (φ-anti-palindromic numbers) to Lucas numbers and proves a conjecture about doubling exponents producing other integers.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6ts0b8b3g2h2m95ch9138y6",
      "title": "Bayesian Data Analysis",
      "url": "https://sites.stat.columbia.edu/gelman/book/BDA3.pdf",
      "savedAt": "2025-10-05T18:09:08.874000+00:00",
      "description": "Bayesian data analysis uses prior distributions to improve inference, especially with small samples or many parameters. The posterior distribution often becomes normal as more data are collected, centering around the true parameter values. Hierarchical models and simulations help apply these ideas to complex problems.",
      "tags": [
        "for-later",
        "math/statistics"
      ]
    },
    {
      "id": "01k6trz8he1a407kv9j5megy8j",
      "title": "RISC-V Conditional Moves",
      "url": "https://www.corsix.org/content/riscv-conditional-moves",
      "savedAt": "2025-10-05T18:08:33.326000+00:00",
      "description": "RISC-V does not have a direct conditional move instruction like aarch64's csel, and attempts to add similar instructions face design and complexity challenges. Some RISC-V cores fuse short forward branches into conditional moves to improve performance, but this can break the memory consistency model. Therefore, any fusion must keep branch-like behavior to maintain correct program execution.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trmtbdk7bvcc5mp34nvfdw",
      "title": "\"Testing Distributed Systems w/ Deterministic Simulation\" by Will Wilson",
      "url": "https://www.youtube.com/watch?v=4fFDFbi3toc",
      "savedAt": "2025-10-05T18:02:51.117000+00:00",
      "description": "Will Wilson describes using deterministic simulation to test distributed systems. By running many replayable, controlled failures and timing scenarios, teams find bugs faster. Simulations are limited by their models and must be complemented with real-world testing.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k6trmgadvgfj8xedxwhew3js",
      "title": "Inside NVIDIA GPUs: Anatomy of high performance matmul kernels",
      "url": "https://www.aleksagordic.com/blog/matmul",
      "savedAt": "2025-10-05T18:02:40.845000+00:00",
      "description": "Matrix multiply is highly parallel and maps neatly to GPUs using tiled work across SMs, warps, and threads.  \nHopper-era features—tensor cores, async TMA copies, warp-group matmul, and SMEM barriers—move complexity into hardware and simplify kernels.  \nStacking these optimizations boosts throughput massively, from tens of TFLOP/s to hundreds.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trjtzdbvey4kzmtgjpx5vt",
      "title": "50 Things I Know",
      "url": "https://rebeccadai.substack.com/p/50-things-i-know",
      "savedAt": "2025-10-05T18:01:46.220000+00:00",
      "description": "Discipline feels unnatural; life works best when effort feels easy and natural. True growth comes from showing up daily, being curious, and focusing on what truly matters. Wisdom is timeless but must be lived, not just learned.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trj29xe2y8j0srzddxzm9n",
      "title": "dynamically typed languages exist?",
      "url": "https://www.tumblr.com/alwinfy/770727347496370177/why-do-dynamically-typed-languages-exist",
      "savedAt": "2025-10-05T18:01:20.956000+00:00",
      "description": "This is a Tumblr dashboard full of random reblogs and short posts. It jumps between jokes, fandom photos, and weird micro-stories. The tone is casual, chaotic, and playful.",
      "tags": []
    },
    {
      "id": "01k6trhj17d195bddbmn59kke3",
      "title": "Dan Slimmon",
      "url": "https://blog.danslimmon.com/",
      "savedAt": "2025-10-05T18:01:04.295000+00:00",
      "description": "David Graeber calls some paid work \"bullshit jobs\" when it feels pointless even to the worker. The author wonders if ops roles are just duct-tape work fixing messy, unfinished software. He argues ops is often necessary to manage real-world complexity, though some ops jobs can still be pointless.",
      "tags": []
    },
    {
      "id": "01k6trhdk4mqydgr2jctrh23cd",
      "title": "Lecture: Queueing theory on a cocktail napkin",
      "url": "https://blog.danslimmon.com/2025/06/25/lecture-queueing-theory-on-a-cocktail-napkin/",
      "savedAt": "2025-10-05T18:00:59.748000+00:00",
      "description": "Dan Slimmon gave a short lecture called \"Queueing Theory on a Cocktail Napkin.\"  \nHe says applying a bit of queueing theory transformed how he manages software services.  \nHe recommends the talk to anyone responsible for service health.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trfy533b0ea6br90xkryyq",
      "title": "Why TigerBeetle is the most interesting database in the world",
      "url": "https://www.amplifypartners.com/blog-posts/why-tigerbeetle-is-the-most-interesting-database-in-the-world",
      "savedAt": "2025-10-05T18:00:11.170000+00:00",
      "description": "TigerBeetle is a new database built from scratch for fast and reliable financial transactions. It uses modern techniques like deterministic testing, static memory, and fault-tolerant storage to ensure safety and speed. The team also created unique tools and a clear engineering style to make their system strong and easy to understand.",
      "tags": []
    },
    {
      "id": "01k6trfkd76r5r6hxszkvaj58j",
      "title": "Register allocation in the Go compiler",
      "url": "https://vnmakarov.github.io/2024/09/24/register-allocation-in-the-go-compiler.html",
      "savedAt": "2025-10-05T18:00:00.167000+00:00",
      "description": "Go's register allocator runs on SSA and processes basic blocks in CFG preorder.  \nIt resolves Phis by shuffling or copying values so Phis and their operands share the same register or stack slot, spilling or moving values when needed.  \nStack slots are assigned in the same pass and the allocator outputs modified SSA plus a value-location map; it is linear-scan-like, fast, and assumes calls clobber all registers for GC.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trf6ds4jssccd1ypntqj0m",
      "title": "Natural transformations",
      "url": "https://abuseofnotation.github.io/category-theory-illustrated/11_natural_transformations/",
      "savedAt": "2025-10-05T17:59:46.872000+00:00",
      "description": "Natural transformations are mappings between functors that connect categories in a structured way. They help define when two categories are equivalent by preserving the relationships between objects and morphisms. Composing natural transformations involves special rules, leading to advanced concepts like 2-morphisms and 2-categories.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trez3c8jaa5h8y6zq6kfvp",
      "title": "The Business of Sportsbooks is Built on Losers",
      "url": "https://www.dopaminemarkets.com/p/the-business-of-sports-betting-is",
      "savedAt": "2025-10-05T17:59:39.372000+00:00",
      "description": "Sportsbooks like DraftKings and FanDuel make money by attracting casual fans and pushing high-margin bets like parlays. They run on thin margins after heavy taxes, promotions, and advertising, so winning professional bettors (\"sharps\") threaten profitability. To protect profits, sportsbooks quickly identify and limit or ban those skilled bettors.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trethngaqr037jd96n7hpy",
      "title": "How Did Sports Betting Become Legal in the US?",
      "url": "https://www.dopaminemarkets.com/p/how-did-sports-betting-become-legal",
      "savedAt": "2025-10-05T17:59:34.709000+00:00",
      "description": "In 1992 Congress passed PASPA to stop states from legalizing sports betting.  \nNew Jersey fought the law and in 2018 the Supreme Court struck it down, letting states legalize gambling.  \nLobbyists and companies pushed legalization and now most states allow betting — but most users lose money.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trczwmprvqvyj01vs373jf",
      "title": "Development gets better with Age",
      "url": "https://www.allthingsdistributed.com/2025/10/better-with-age.html",
      "savedAt": "2025-10-05T17:58:34.643000+00:00",
      "description": "Getting older makes you a better developer because experience teaches you what works, what fails, and what to watch for. Generative AI is exciting but full of hype, so seasoned builders pause, learn, and apply it where it truly fits. Listen to customers, think deeply, and then build.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trcrj5r818ew48b8cn4kq8",
      "title": "Building the heap: racking 30 petabytes of hard drives for pretraining",
      "url": "https://si.inc/posts/the-heap/",
      "savedAt": "2025-10-05T17:58:27.141000+00:00",
      "description": "A five-person team built a 30 PB storage cluster in downtown San Francisco for under $500k to store 90 million hours of video. They chose local racks, 100Gbps networking, and simple Rust/nginx software to cut costs and control performance. The project saved about 40x versus cloud, but required hands-on work, careful cabling, and tradeoffs in density and tooling.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6trccjme1ba90dfszn5kay4",
      "title": "Type Theory for All: The Goal of Science is to Communicate Ideas",
      "url": "https://wadler.blogspot.com/2025/10/type-theory-for-all-goal-of-science-is.html",
      "savedAt": "2025-10-05T17:58:14.867000+00:00",
      "description": "  Thank you to the crew at Type Theory for All  for their thoughtful and well-prepared interview .",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tr73p1stpqx2nhr2ckzf78",
      "title": "What Every Programmer Should Know About Memory",
      "url": "https://people.freebsd.org/~lstewart/articles/cpumemory.pdf",
      "savedAt": "2025-10-05T17:55:21.921000+00:00",
      "description": "Processors use prefetching to speed up access to memory by loading the next cache line before it is needed. When multiple threads access the same memory, performance can suffer due to limited bandwidth and cache coherency issues. Understanding cache behavior is crucial for optimizing programs, especially in multi-threaded environments.",
      "tags": [
        "hardware",
        "favorites",
        "type/paper"
      ]
    },
    {
      "id": "01k6tr6xb3wqbf2xze14n2x5q2",
      "title": "Talent is Alignment",
      "url": "https://xlii.space/thoughts/talent-is-alignment/",
      "savedAt": "2025-10-05T17:55:15.427000+00:00",
      "description": "Talent comes from spending time doing something you enjoy and feel connected to. Passion and alignment with your craft matter more than natural ability. Anyone can become talented by practicing regularly and loving what they do.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "01k6tr5g17bwffwdxcqfxpjfsx",
      "title": "Hacker Laws",
      "url": "https://hacker-laws.com/",
      "savedAt": "2025-10-05T17:54:29.030000+00:00",
      "description": "Hacker Laws are short rules about inevitable realities in software and organizations. They say structure, complexity, human limits, and leaky abstractions shape how systems behave. The advice is simple: design small, keep things simple, avoid premature work, and use clear abstractions.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tr4wbsbfwafvxsk773akcn",
      "title": "Game Development: History, Industry, and Engine Design",
      "url": "https://spiiin.github.io/blog/490626496/",
      "savedAt": "2025-10-05T17:54:08.888000+00:00",
      "description": "Video game development began as a way to test computer abilities and has grown into a large industry with many new creators and players. Making games involves funding, design, and production, with teams constantly finding new methods and tools. Game engines evolved to help non-programmers create content easily, shaped by hardware, team needs, and game goals.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tr4mzk23kewpg71zq1jrwb",
      "title": "How Functional Programming Shaped (and Twisted) Frontend Development",
      "url": "https://alfy.blog/2025/10/04/how-functional-programming-shaped-modern-frontend.html",
      "savedAt": "2025-10-05T17:54:01.331000+00:00",
      "description": "Frontend development adopted functional programming and rebuilt the web inside JavaScript. This added layers (CSS-in-JS, synthetic events, hydration) that duplicated and slowed native browser features. Some newer tools push back, favoring HTML, CSS, and progressive enhancement.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tr34yyx8amm34vwgv2nq0f",
      "title": "You can't parse XML with regex. Let's do it anyways.",
      "url": "https://sdomi.pl/weblog/26-nobody-here-is-free-of-sin/",
      "savedAt": "2025-10-05T17:53:12.157000+00:00",
      "description": "Parsing XML with regular expressions is very difficult and usually a bad idea because XML is complex. HTML is even harder to parse with regex because it allows broken and unclosed tags. Using a real parser is the best way to handle XML and HTML properly.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tr2j27paht2b0z5ya8edeh",
      "title": "The Software Essays that Shaped Me",
      "url": "https://refactoringenglish.com/blog/software-essays-that-shaped-me/",
      "savedAt": "2025-10-05T17:52:52.807000+00:00",
      "description": "A few essays and blog posts changed how the author thinks about software. They taught that good tools, clear choices, and respect for developers matter more than trendy tech. Plain, boring solutions and understanding essential complexity win in the long run.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6tp9fgk40sxvccwenbbm3xq",
      "title": "GitHub - ivanyu/awesome-deterministic-simulation-testing: A curated list of awesome deterministic simulation testing resources 😎",
      "url": "https://github.com/ivanyu/awesome-deterministic-simulation-testing",
      "savedAt": "2025-10-05T17:21:42.419000+00:00",
      "description": "This GitHub page lists helpful resources for deterministic simulation testing, a method to improve software reliability. It includes case studies, blogs, and tools like Antithesis and MadSim. These resources focus on testing distributed systems to find and fix problems more easily.",
      "tags": []
    },
    {
      "id": "01k6tp7qgdwwjjqxszrb0ctd9e",
      "title": "So, You Want to Learn More About Deterministic Simulation Testing?",
      "url": "https://pierrezemb.fr/posts/learn-about-dst/",
      "savedAt": "2025-10-05T17:20:45.069000+00:00",
      "description": "I attended BugBash 2025 where experts discussed deterministic simulation testing (DST) for building reliable software. DST runs many repeatable, failure-heavy simulations to find bugs before production, which helped FoundationDB achieve strong robustness. The author uses and recommends DST resources and invites more references and feedback.",
      "tags": [
        "cs/distsys",
        "cs/testing"
      ]
    },
    {
      "id": "01k6tn24dknwhk4snpf9drszf9",
      "title": "Go Data Structures: Interfaces",
      "url": "https://research.swtch.com/interfaces",
      "savedAt": "2025-10-05T17:00:13.107000+00:00",
      "description": "Go's interfaces allow for flexible programming by combining static type checking with dynamic method calls, enabling features like duck typing. This means that the compiler can catch errors while still allowing methods to be called on types that implement them without explicit declarations. The implementation uses method tables that are created at runtime, improving performance while maintaining type safety.",
      "tags": [
        "cs/programming-languages/go"
      ]
    },
    {
      "id": "01k6tmfptc219efzmq0v35r6an",
      "title": "Work is Not School: Surviving Institutional Stupidity",
      "url": "https://www.leadingsapiens.com/surviving-institutional-stupidity/",
      "savedAt": "2025-10-05T16:50:09.356000+00:00",
      "description": "Work is not school: organizations run on messy human judgment, not pure merit. Assume stupidity over malice, learn the informal rules, and shape how others see your work. Build influence, diversify your sources of meaning, and play the long game.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "01k6fycdfbk8k8zsqrbv3wv5r6",
      "title": "Type Theory & Functional Programming",
      "url": "https://www.cs.cornell.edu/courses/cs6110/2015sp/textbook/Simon%20Thompson%20textbook.pdf",
      "savedAt": "2025-10-01T13:11:28.491000+00:00",
      "description": "I'm sorry, there is no content provided for me to summarize. Please provide me with the necessary information.",
      "tags": [
        "books",
        "for-later",
        "cs/functional-programming"
      ]
    },
    {
      "id": "01k6ep8mb0cjjxhev0khb10bhg",
      "title": "Inside vLLM: Anatomy of a High-Throughput LLM Inference System",
      "url": "https://www.aleksagordic.com/blog/vllm",
      "savedAt": "2025-10-01T01:30:21.408000+00:00",
      "description": "vLLM is a high-throughput LLM inference system built around an engine that schedules requests, manages a paged KV-cache, and runs efficient GPU execution. It adds features like prefix caching, speculative decoding, guided decoding, and structured output to speed up serving and reduce memory use. The system scales from single-GPU to multi-GPU and distributed serving with async I/O and multiprocessing for high throughput.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6bas3vwv5pdx209gt1wnma7",
      "title": "Distributed consensus",
      "url": "https://shachaf.net/w/consensus",
      "savedAt": "2025-09-29T18:11:55.386000+00:00",
      "description": "Distributed consensus requires interacting with at least two computers to ensure that a value is written safely, even if one computer is down. To avoid conflicts when multiple clients try to write different values, a locking mechanism is proposed, where clients must \"lock\" the system before writing. This system allows for consistent reads and writes by using lock IDs to manage and resolve potential conflicts.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k6b9s1kk71kfn6d3e17msmxb",
      "title": "Everything you know is wrong",
      "url": "https://lawrencecpaulson.github.io//2025/09/20/Wrong.html",
      "savedAt": "2025-09-29T17:54:24.499000+00:00",
      "description": "Over fifty years many confident beliefs about AI and computing turned out to be wrong. Symbolic ideas like expert systems, Prolog, and program synthesis often failed, though DPLL/SMT and tools like Isabelle later proved useful. The lesson is that trends shift and practical, persistent work often wins.",
      "tags": [
        "type-theory",
        "computer-history"
      ]
    },
    {
      "id": "01k6b47x3dfa91wz4yf3j49rzf",
      "title": "GPT-2 Neural Network Poetry",
      "url": "https://gwern.net/gpt-2#transformer-tutorial",
      "savedAt": "2025-09-29T16:17:39.949000+00:00",
      "description": "The author fine-tuned GPT-2-117M on two poetry datasets, first PG and then a smaller PF.  \nPF gave a much lower loss, suggesting modern poetry is easier for GPT-2 to model.  \nThe prefix-finetuned model often makes better poem completions than base GPT-2-117M, though some older works (e.g., Howl) fare worse.",
      "tags": [
        "llm",
        "cs/ai"
      ]
    },
    {
      "id": "01k6b3jf1zyhqhd26g2szerg19",
      "title": "How to Beat Procrastination",
      "url": "https://www.lesswrong.com/posts/RWo4LwFzpHNQCTcYt/how-to-beat-procrastination",
      "savedAt": "2025-09-29T16:05:57.439000+00:00",
      "description": "Procrastination is often linked to impulsiveness and is influenced by how we perceive the rewards of tasks. To overcome procrastination, focus on increasing your optimism about success, making tasks more enjoyable, and setting clear goals. Understanding the procrastination equation can help you manage your motivation and reduce delays.",
      "tags": [
        "productivity"
      ]
    },
    {
      "id": "01k6b0q6hrbtvkmg0br3vbabwe",
      "title": "Prompt Engineering Guide",
      "url": "https://www.promptingguide.ai/",
      "savedAt": "2025-09-29T15:16:06.839000+00:00",
      "description": "Prompt engineering is a new field for creating and improving prompts for large language models.  \nIt helps researchers and developers boost model performance, safety, and tool integration.  \nThis guide collects current papers, techniques, tutorials, and courses to teach those skills.",
      "tags": [
        "llm",
        "cs/ai"
      ]
    },
    {
      "id": "01k652pncwy6pg04fkyjdjpbww",
      "title": "Gödel’s Incompleteness Theorems",
      "url": "https://plato.stanford.edu/entries/goedel-incompleteness/",
      "savedAt": "2025-09-27T07:55:19.836000+00:00",
      "description": "Gödel’s incompleteness theorems show that in any consistent formal system that includes basic arithmetic, there are statements that cannot be proven true or false. The first theorem proves that such undecidable statements exist, while the second theorem addresses the limits of proving the system's own consistency. These theorems have significant implications in logic, mathematics, and philosophy.",
      "tags": [
        "math"
      ]
    },
    {
      "id": "01k64zw0x3gs98w8tytxp4nqyc",
      "title": "Context Engineering for AI Agents: Lessons from Building Manus",
      "url": "https://manus.im/blog/Context-Engineering-for-AI-Agents-Lessons-from-Building-Manus",
      "savedAt": "2025-09-27T07:05:49.731000+00:00",
      "description": "Manus built agents by engineering context instead of retraining models.  \nThey maximize speed and cost savings by boosting KV-cache hit rate with stable, append-only prompts and by masking tool choices rather than changing them.  \nThey use the filesystem as restorable memory, keep errors in the trace to learn, and add small variation to avoid decision drift.",
      "tags": [
        "llm",
        "cs/ai"
      ]
    },
    {
      "id": "01k64tgvx9yep3gwc4qwewz5an",
      "title": "How to Lead in a Room Full of Experts",
      "url": "https://idiallo.com/blog/how-to-lead-in-a-room-full-of-experts",
      "savedAt": "2025-09-27T05:32:21.289000+00:00",
      "description": "You don't have to be the smartest person in the room.  \nYour job is to translate between teams, keep the goal clear, and make space for experts to do their best work.  \nAdmit what you don't know, explain decisions, and shield the team from needless complexity.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "01k64fa89skmfjtmx7qwfhjxj3",
      "title": "A Very Early History of Algebraic Data Types",
      "url": "https://www.hillelwayne.com/post/algdt-history/",
      "savedAt": "2025-09-27T02:16:30.264000+00:00",
      "description": "McCarthy and Hoare framed types as Cartesian products and discriminated unions (tagged sums).  \nFunctional languages like HOPE and ML added +/# notation, pattern matching, and exhaustiveness checks.  \nThe phrase \"algebraic data type\" came later (e.g., Miranda), but the core ideas were known early.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k5x0k42sx28tqxrvnchznt4x",
      "title": "The FLP theorem",
      "url": "https://shachaf.net/w/flp",
      "savedAt": "2025-09-24T04:44:31.193000+00:00",
      "description": "The FLP theorem shows that in an asynchronous system with one faulty process, consensus can never be guaranteed to finish in a set time. This happens because message delays and delivery order can always prevent the system from deciding. Real systems use clocks and other tricks to work well despite this theoretical limit.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k5sxyh1snmn6tdf714qnvxzd",
      "title": "STYLE.md at main · tigerbeetle/tigerbeetle",
      "url": "https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/TIGER_STYLE.md",
      "savedAt": "2025-09-23T00:00:35.897000+00:00",
      "description": "Write simple, clear code with minimal abstractions and small functions so behavior is easy to understand.  \nAssert assumptions early and often, handle all errors, and keep variables and scope minimal to catch bugs fast.  \nName things well, document why decisions were made, and prefer explicit control flow and predictable performance.",
      "tags": []
    },
    {
      "id": "01k5p6x25c50mqs01fst44hmyg",
      "title": "• Napkin (v1.6)",
      "url": "https://web.evanchen.cc/napkin.html",
      "savedAt": "2025-09-21T13:20:07.340000+00:00",
      "description": "Napkin v1.6 by Evan Chen is a concise, mostly self-contained introduction to higher mathematics for advanced undergraduates and beginning grad students.  \nIt gives bird’s-eye views with precise definitions and theorem statements but fewer full proofs, and many chapters still need problems or solutions.  \nThe draft and per-part PDFs are on the website and GitHub, and readers can contribute or view community human-readable and Lean4 solutions via issues or pull requests.",
      "tags": [
        "math",
        "books"
      ]
    },
    {
      "id": "01k5naxw0wwy3s1wmvg4tc3pt6",
      "title": "Advanced Testing and Determinism",
      "url": "https://lewiscampbell.tech/blog/250604.html",
      "savedAt": "2025-09-21T05:11:13.692000+00:00",
      "description": "Separate deterministic code from non-deterministic code.  \nUse property-based tests and deterministic simulations with seeded inputs to test deterministic parts.  \nKeep end-to-end tests as sanity checks because they are fragile and miss rare, environment-driven bugs.",
      "tags": [
        "cs/distsys",
        "cs/testing"
      ]
    },
    {
      "id": "01k5n3cd59kqsg5py7ggr1st4v",
      "title": "Basic Type System Terminology",
      "url": "https://lewiscampbell.tech/blog/250817.html",
      "savedAt": "2025-09-21T02:59:21.385000+00:00",
      "description": "Type systems use precise terms, but many people confuse them. Static typing checks types from source code before running, while dynamic typing checks types at runtime. Strong vs weak is about implicit conversions; dynamic ≠ untyped and strong ≠ static.",
      "tags": [
        "cs/type-system"
      ]
    },
    {
      "id": "01k5kyxdkh579bhw3swppq0ecq",
      "title": "Ongoing Tradeoffs, and Incidents as Landmarks",
      "url": "https://ferd.ca/ongoing-tradeoffs-and-incidents-as-landmarks.html",
      "savedAt": "2025-09-20T16:22:01.585000+00:00",
      "description": "Incidents help us see how work really happens and reveal ongoing tradeoffs in organizations. They act as landmarks that show if our current path and priorities are working or need change. Using incidents this way means learning from them beyond just fixing problems, involving all levels of the organization in understanding and improving decisions.",
      "tags": [
        "engineering",
        "systems-theory"
      ]
    },
    {
      "id": "01k5g9n64zvv60ap7bxzzw5331",
      "title": "Functors, Applicatives, And Monads In Pictures",
      "url": "https://www.adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html",
      "savedAt": "2025-09-19T06:12:48.415000+00:00",
      "description": "This text explains the concepts of Functors, Applicatives, and Monads in programming, particularly in Haskell. Functors allow you to apply functions to values wrapped in contexts, Applicatives extend this to applying wrapped functions to wrapped values, and Monads introduce a way to apply functions that return wrapped values. The Maybe type is used as an example, demonstrating how it acts as a Functor, Applicative, and Monad.",
      "tags": [
        "cs/functional-programming"
      ]
    },
    {
      "id": "01k5d96qr67e0rkm28tqnks3p0",
      "title": "Hypervisor 101 in Rust",
      "url": "https://tandasat.github.io/Hypervisor-101-in-Rust/introduction/the-goals-of-this-course.html",
      "savedAt": "2025-09-18T02:07:11.622000+00:00",
      "description": null,
      "tags": [
        "cs/vm",
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k55m9f9z29gthvgw2z30ckhx",
      "title": "My Thoughts on Renting Versus Buying",
      "url": "https://milesbarr.me/posts/my-thoughts-on-renting-versus-buying/",
      "savedAt": "2025-09-15T02:47:00.159000+00:00",
      "description": "The choice to rent or buy is driven more by behavior, emotion, and lifestyle than by math.  \nRenting gives flexibility, mobility, and often better financial upside for people who save and invest.  \nBuying can force savings and makes sense for those who value stability or need mortgage discipline.",
      "tags": [
        "investments"
      ]
    },
    {
      "id": "01k54z4an5vh3487azbfv8zfjw",
      "title": "Writing an operating system kernel from scratch",
      "url": "https://popovicu.com/posts/writing-an-operating-system-kernel-from-scratch/",
      "savedAt": "2025-09-14T20:37:11.461000+00:00",
      "description": "This project builds a tiny RISC-V unikernel that bundles kernel and user code into one binary.  \nIt runs statically defined, never-ending user threads, each with its own registers and stack.  \nThe supervisor kernel uses timer interrupts and syscalls to save/restore state, time-share threads, and seed initial arguments on each thread's stack.",
      "tags": [
        "for-later",
        "cs/operating-system"
      ]
    },
    {
      "id": "01k522sk0mfdy8j9r4pjeh026w",
      "title": "Magical systems thinking",
      "url": "https://worksinprogress.co/issue/magical-systems-thinking/",
      "savedAt": "2025-09-13T17:43:30.580000+00:00",
      "description": "Working complex systems almost always evolve from simple systems that already work. Big designed fixes often fail because the system kicks back and creates new problems. Start small: build simple working alternatives and let them grow instead of hoping analysis will solve everything.",
      "tags": [
        "favorites",
        "systems-theory"
      ]
    },
    {
      "id": "01k51my9mf7ytgz1breg1pgb1s",
      "title": "How Container Filesystem Works: Building a Docker-like Container From Scratch",
      "url": "https://labs.iximiuz.com/tutorials/container-filesystem-from-scratch",
      "savedAt": "2025-09-13T13:41:24.751000+00:00",
      "description": "Containers isolate filesystems mainly with the mount namespace and mount propagation settings, while PID, cgroup, UTS, and network namespaces add extra isolation.  \nUsing unshare plus bind mounts, pivot_root, and mounting /proc lets you create a Docker-like container with standard Linux commands.  \nReal runtimes also set up cgroups, harden and mask pseudofilesystems, and use bind mounts to share host files.",
      "tags": [
        "cs/devops",
        "for-later"
      ]
    },
    {
      "id": "01k50tztyh6sz67vbmqjq62m50",
      "title": "Becoming the person who does the thing",
      "url": "https://www.fredrivett.com/2025/09/10/becoming-the-person-who-does-the-thing/",
      "savedAt": "2025-09-13T06:07:52.273000+00:00",
      "description": "Your beliefs shape who you are.  \nSmall daily actions are votes for the person you want to become.  \nThe author began with tiny workouts and now goes to the gym every weekday.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "01k4xsdh8yaq9vvb6fnx0hw0zg",
      "title": "Getting Started with Randomised Testing",
      "url": "https://lewiscampbell.tech/blog/250805.html",
      "savedAt": "2025-09-12T01:42:40.669000+00:00",
      "description": "Randomised testing, especially Property-Based Testing (PBT), helps find bugs that example-based tests miss by checking code against many random inputs. The author shows how PBT revealed flaws in a simple shopping cart, leading to better validation and safer code. Using PBT makes developers more confident and helps catch problems before users do.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xsd0wrhe8tn0wwnyb72jjw",
      "title": "Pragmatism in Programming Proverbs",
      "url": "https://www.gingerbill.org/article/2020/05/31/progamming-pragmatist-proverbs/",
      "savedAt": "2025-09-12T01:42:23.896000+00:00",
      "description": "The text discusses the importance of pragmatism in programming and provides key principles to follow. It emphasizes focusing on solving specific problems effectively and efficiently. The author also highlights the significance of understanding the purpose and function of a program, rather than getting caught up in unnecessary complexity.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xscb3gyrxtrf1tx569shfn",
      "title": "Ramblings",
      "url": "https://stephango.com/ramblings",
      "savedAt": "2025-09-12T01:42:01.584000+00:00",
      "description": "Remote teams of 2-10 people can use personal “ramblings” channels to share thoughts without cluttering group chats. These channels help team members stay connected with short, informal updates and encourage creativity. Ramblings reduce interruptions and support social bonding, especially when no meetings are scheduled.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xs983r4rwxh6yqtx1d9pn2",
      "title": "LLM Inflation",
      "url": "https://tratt.net/laurie/blog/2025/llm_inflation.html",
      "savedAt": "2025-09-12T01:40:20.216000+00:00",
      "description": "Data compression used to save space and time, but now people use large language models (LLMs) to make short texts longer and long texts shorter. This back-and-forth, called \"LLM inflation,\" can hide unclear thinking and waste time. The author suggests we should notice this and try to be clearer in our communication.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xs8wed0ggwd79cqyz66ef2",
      "title": "We shouldn’t have needed lockfiles",
      "url": "https://tonsky.me/blog/lockfiles/",
      "savedAt": "2025-09-12T01:40:08.269000+00:00",
      "description": "Pin top-level versions and the transitive tree is fixed. Version ranges make builds depend on time, so people invented lockfiles that add complexity. Maven shows deterministic conflict resolution (root wins) works without lockfiles.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xs51xwzwj1xp5z3849xaps",
      "title": "GPT-4.1 Prompting Guide",
      "url": "https://cookbook.openai.com/examples/gpt4-1_prompting_guide",
      "savedAt": "2025-09-12T01:38:02.812000+00:00",
      "description": "GPT-4.1 is more capable and follows instructions more literally, making it highly steerable. Give clear, specific prompts with examples, use the tools field for tool definitions, and optionally ask the model to plan between tool calls. Organize context and instructions carefully, audit failures, and iterate prompts to reduce errors and hallucinations.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xs4b1k6w5vkv6q9xshs019",
      "title": "GPT-4",
      "url": "https://www.promptingguide.ai/models/gpt-4",
      "savedAt": "2025-09-12T01:37:39.379000+00:00",
      "description": "GPT-4 is a powerful multimodal model that achieves near-human performance on many benchmarks. GPT-4 Turbo adds a 128K context window, better instruction following, JSON mode, function calling, and preview vision. It enables many applications but can still hallucinate and has a data cutoff, so use it cautiously.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrzb95ft5bhzw289ec2tgz",
      "title": "Architecture by Fashion, Not Fundamentals - kellabyte",
      "url": "https://substack.com/inbox/post/173391778",
      "savedAt": "2025-09-12T01:34:55.781000+00:00",
      "description": "Backend development focuses too much on trendy architectures and ignores fundamental computer science like algorithms and data structures. This causes slow, inefficient systems that waste resources and frustrate users. The best approach combines solid fundamentals with good design patterns to build fast, maintainable software.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrwea5jc0a10rkhz008s1z",
      "title": "How Tool Complexity Impacts AI Agents Selection Accuracy",
      "url": "https://achan2013.medium.com/how-tool-complexity-impacts-ai-agents-selection-accuracy-a3b6280ddce5",
      "savedAt": "2025-09-12T01:33:20.581000+00:00",
      "description": "More tools and complex interfaces make AI tool selection less accurate.  \nClear descriptions and simpler, structured parameters help agents choose correctly.  \nHierarchical routing with sub-agents and dynamic activation further improves accuracy.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrvhc6agmj53r0ezecghnd",
      "title": "Evaluating Tool Selection",
      "url": "https://docs.langwatch.ai/cookbooks/tool-selection",
      "savedAt": "2025-09-12T01:32:50.950000+00:00",
      "description": "This guide shows how to evaluate LLM tool selection using precision and recall. Models often choose the right tool (high precision) but miss needed tools (low recall) in multi-tool tasks. Tracking these metrics by query and tool reveals weaknesses and guides improvements.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrtvnbqfsy81cj8j7krgz6",
      "title": "ToolACE: Winning the Points of LLM Function Calling",
      "url": "https://arxiv.org/html/2409.00920v1",
      "savedAt": "2025-09-12T01:32:28.715000+00:00",
      "description": "ToolACE is an automated pipeline and dataset for teaching LLMs to call functions across thousands of real-world APIs.  \nIt synthesizes diverse, complex dialogs and API formats (nested, parallel, dependent calls) with multi-agent generation and strict quality checks.  \nModels trained on ToolACE outperform others on function-calling tasks while keeping normal general abilities.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrrzbrtk74vmdrcy49t7tc",
      "title": "LangChain’s best practices for tool calling",
      "url": "https://www.useparagon.com/learn/rag-best-practices-optimizing-tool-calling/",
      "savedAt": "2025-09-12T01:31:26.968000+00:00",
      "description": "Tool calling is powerful but often inaccurate and hard to debug.  \nThey tested LLMs, prompts, routing, tool counts, and descriptions and found o3-2025-04-16 performed best.  \nPrompts and descriptions had small overall impact but helped complex multi-tool chains, and more exhaustive testing is needed.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrrqe9cgs95dqa0q2519jh",
      "title": "LLM Evaluation Metrics: The Ultimate LLM Evaluation Guide",
      "url": "https://www.confident-ai.com/blog/llm-evaluation-metrics-everything-you-need-for-llm-evaluation",
      "savedAt": "2025-09-12T01:31:18.857000+00:00",
      "description": "It is no secret that evaluating the outputs of Large Language Models (LLMs) is essential for anyone building robust LLM applications.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xrqrty72sbfq082h9mvhd7",
      "title": "Fine-tuning With Tool Calling",
      "url": "https://www.stephendiehl.com/posts/fine_tuning_tools/",
      "savedAt": "2025-09-12T01:30:47.518000+00:00",
      "description": "Personal Blog",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqf1nxt9z9rhja32evjxhq",
      "title": "IEEE Xplore Full-Text PDF:",
      "url": "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=11119124",
      "savedAt": "2025-09-12T01:08:33.085000+00:00",
      "description": null,
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqe700rjjyjqfp10gdrqkr",
      "title": "How My Blog Handles Math and Images in HTML, Atom, and Email in 2025",
      "url": "https://emptysqua.re/blog/math-images-rss-hugo/",
      "savedAt": "2025-09-12T01:08:05.760000+00:00",
      "description": "I use Hugo to publish technical posts with math and SVG diagrams and want them to look great on the web, Atom feeds, and email. Because feeds and email clients lack SVG and math support, my publish script renders math to SVG and makes PNG fallbacks with hashed filenames. The result is a fast but fragile stack of Hugo templates and Python scripts that kludge around feed and email limitations.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqe1ct36j4hn5nrxkcswb6",
      "title": "Sometimes Software is Done, or Why Hugo Why",
      "url": "https://commaok.xyz/post/on_hugo/",
      "savedAt": "2025-09-12T01:08:00.026000+00:00",
      "description": "The author initially loved using the software Hugo for its speed and simplicity in solving a real problem. However, ongoing updates have made Hugo bigger, more complicated, and prone to breaking backwards compatibility, leading to frustration and wasted time for the author. Ultimately, the author is considering alternatives and values the importance of backwards compatibility in software development.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqdtdr98ny7mbsj3gv6bz5",
      "title": "Unexpected sudo hang under VPN kill-switch",
      "url": "https://anagogistis.com/posts/sudo-hang/",
      "savedAt": "2025-09-12T01:07:52.888000+00:00",
      "description": "My personal blog",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqdgp0y3jx434yztc7c75c",
      "title": "Thinking about coding",
      "url": "https://www.robinsloan.com/lab/thinking-about-coding/",
      "savedAt": "2025-09-12T01:07:42.912000+00:00",
      "description": "I now spend as much time thinking about code as actually coding. After thinking on walks and in a notebook, I finally coded the idea and it worked in one session. Thinking away from the computer is a powerful alternative to the \"dive in\" approach.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqda2w07k40952qqvzdbch",
      "title": "Vibe Coding Terminal Editor",
      "url": "https://matklad.github.io/2025/08/31/vibe-coding-terminal-editor.html",
      "savedAt": "2025-09-12T01:07:36.156000+00:00",
      "description": "The author built a VS Code terminal-editor that makes shell output a normal, editable text buffer. He learned to plan with plan.md/spec.md, let the LLM iterate on small tasks, and use fast end-to-end tests to close the loop. LLMs speed tool-building but don’t solve hard system problems or long-term maintenance.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqd5dxnawnjkv85me82am0",
      "title": "Ads Are a Positional Good",
      "url": "https://matklad.github.io/2025/08/30/ads-are-a-positional-good.html",
      "savedAt": "2025-09-12T01:07:31.389000+00:00",
      "description": "Ads are positional goods: their value comes from beating rivals, not from creating new demand.  \nCompanies spend as much as they can to stay a bit ahead, turning ads into an arms race.  \nThat wastes attention and redirects money to ad platforms instead of better products or customers.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqctb0rqsckbk44f2m77qe",
      "title": "Knowledge and Common Knowledge in a Distributed Environment, Part 2",
      "url": "https://emptysqua.re/blog/review-common-knowledge-part-2/",
      "savedAt": "2025-09-12T01:07:20.032000+00:00",
      "description": "Two generals cannot reliably coordinate an attack in an asynchronous system because messages can be lost or delayed.  \nKnowledge is defined by which global states an agent cannot distinguish from its local history.  \nThis explains why Raft nodes may not achieve common knowledge and why extra assumptions (like reliable clocks) are needed for guaranteed coordination.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k4xqcmdasyerpdvjavk6bbkb",
      "title": "The Loudness Wars",
      "url": "https://fasterthanli.me/articles/the-science-of-loudness",
      "savedAt": "2025-09-12T01:07:13.962000+00:00",
      "description": "Decibels are a logarithmic ratio used to report sound pressure (dB SPL) and digital levels (dBFS).  \nVU/RMS meters miss short peaks, so engineers used heavy compression to make music sound louder.  \nThe industry now uses LUFS/LKFS and platform targets (e.g. YouTube −14 LUFS) to measure perceived loudness and normalize playback.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqce33859txye8mmdh5qmg",
      "title": "More casual-posting",
      "url": "https://fasterthanli.me/articles/summer-fasterthanlime-update",
      "savedAt": "2025-09-12T01:07:07.491000+00:00",
      "description": "Amos is changing his publishing model to stop long paywalls and locked article/video releases. Early-access versions will go to supporters when ready, with a private RSS feed and a Discord for them. The public RSS will only show articles you can read, and previously exclusive content is now unlocked.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqc5js32ja0z182bcevabm",
      "title": "LLMs as Parts of Systems",
      "url": "https://brooker.co.za/blog/2025/08/12/llms-as-components",
      "savedAt": "2025-09-12T01:06:58.776000+00:00",
      "description": "Large language models (LLMs) work best when combined with other tools in a system. Such systems can solve problems more efficiently and reliably than LLMs alone. This approach leverages the strengths of both LLMs and traditional computing methods.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqam8sryackb0p2z5c2fha",
      "title": "6 surprising things about life in SF",
      "url": "https://wilhelm.substack.com/p/6-surprising-things-about-life-in?utm_medium=web",
      "savedAt": "2025-09-12T01:06:08.281000+00:00",
      "description": "San Francisco feels small and calm, and you often run into people.  \nThe tap water is great and the outdoors — parks, rides and swims — are epic and cheap or free.  \nEveryday life is nerdy and chatty: tech culture, friendly strangers, and quirky service norms.",
      "tags": [
        "urbanism",
        "interesting"
      ]
    },
    {
      "id": "01k4xqadpaqgkywyeavwbxacrv",
      "title": "Rust Atomics and Locks",
      "url": "https://marabos.nl/atomics/",
      "savedAt": "2025-09-12T01:06:01.546000+00:00",
      "description": "This book by Mara Bos explores Rust programming language's concurrency features, including atomics, locks, and memory ordering. Readers will gain a practical understanding of low-level concurrency in Rust, covering topics like mutexes and condition variables. The book provides insights on implementing correct concurrency code and building custom locking and synchronization mechanisms.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xqa23j9gg0fqdsk3a05ssb",
      "title": "Thoughts on (Amazonian) Leadership",
      "url": "https://www.daemonology.net/blog/2025-09-01-Thoughts-on-Amazonian-Leadership.html",
      "savedAt": "2025-09-12T01:05:49.681000+00:00",
      "description": "Amazon's Leadership Principles are sensible but often applied poorly.  \n\"Customer obsession\" has pushed AWS to build what customers ask for instead of the core building blocks they need.  \nAmazon should break silos, act for the broader ecosystem, and enforce higher standards to protect customer trust.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xq9ssc2abmggbn2r2xj8s4",
      "title": "Don’t Build Multi-Agents",
      "url": "https://cognition.ai/blog/dont-build-multi-agents",
      "savedAt": "2025-09-12T01:05:41.164000+00:00",
      "description": "Walden Yan argues against using multi-agent architectures for building AI agents, emphasizing the importance of context engineering for reliability. He suggests that sharing context and avoiding conflicting decisions are crucial to prevent errors in task execution. As AI technology evolves, he believes that focusing on single-threaded agents may yield better results until collaboration between agents can be improved.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xq9k34dryqftcvpzhf77p8",
      "title": "Of Rats and Ratchets",
      "url": "https://matklad.github.io/2024/01/03/of-rats-and-ratchets.html",
      "savedAt": "2025-09-12T01:05:34.308000+00:00",
      "description": "The essay compares short-term software fixes to chasing rats in an abandoned house. True fixes seal the holes: add simple, incremental checks (ratchets) that prevent regressions. For things you can’t automate, write down small, truthful team rules in the repository.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xq9cb94wg5c941232qbtw8",
      "title": "You can try to like stuff",
      "url": "https://dynomight.net/liking/",
      "savedAt": "2025-09-12T01:05:27.401000+00:00",
      "description": "it offers lessons on your nature",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnwsfwwm78p8808pcc7qhj",
      "title": "A CPU is a compiler",
      "url": "https://outerproduct.net/boring/2023-03-22_cpu-compiler-gc-ohmy.html",
      "savedAt": "2025-09-12T00:41:06.300000+00:00",
      "description": "Strictly speaking, a CPU is an interpreter; it is certainly not a compiler and, unless you can come up with a second implementation of physics, the standard tricks to turn it into one won’t work either.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnw4b7pwppdh150t7v7dwe",
      "title": "A Random Walk in 10 Dimensions",
      "url": "https://galileo-unbound.blog/2021/06/28/a-random-walk-in-10-dimensions/",
      "savedAt": "2025-09-12T00:40:44.646000+00:00",
      "description": "The geometry of random walks in high dimensions provides the power behind deep learning and may be the secret to intelligence.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnvxa3gwj4ecwe9zyv2np5",
      "title": "How many dimensions is this?",
      "url": "https://lcamtuf.substack.com/p/how-many-dimensions-is-this",
      "savedAt": "2025-09-12T00:40:37.442000+00:00",
      "description": "A degree in mathematics might not save you from stacking boxes for a living.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnvkrfxfdytc24b3tskfqq",
      "title": "Your Biggest Customer Might Be Your Biggest Bottleneck",
      "url": "https://densumesh.dev/blog/fair-queue/",
      "savedAt": "2025-09-12T00:40:27.663000+00:00",
      "description": "A large customer overloaded the system, causing delays for others. Traditional queues serve jobs in order, which lets big jobs block smaller ones. The solution is fair queueing, which shares processing time evenly among all customers.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnvdqghkbgzx1hp4wp2gya",
      "title": "How we made Kagi Assistant load twice as fast",
      "url": "https://jacobwinters.com/kagi-assistant-optimization/",
      "savedAt": "2025-09-12T00:40:21.488000+00:00",
      "description": "Kagi Assistant loaded slowly because the client waited for multiple AJAX requests after the page HTML arrived.  \nThey embedded some data in the markup, streamed the first HTML chunk early, and enlarged the DB connection pool so parallel queries didn’t block.  \nThose changes cut round trips and TTFB and made the app load about twice as fast.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnv43enrg5sb5daaz4m1zn",
      "title": "Debugging nixpkgs Package Build",
      "url": "https://entropicthoughts.com/debugging-nixpkgs-package-build",
      "savedAt": "2025-09-12T00:40:11.630000+00:00",
      "description": "The author is teaching their five-year-old to use computers and wants to find a simple text editor. They learned how to debug building a new editor package in nixpkgs using the nix develop command step-by-step. They still face challenges with environment differences but can now test editors like LE more easily.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnsdk1crss79x58rgg1ff2",
      "title": "wal3: A Write-Ahead Log for Chroma, Built on Object Storage",
      "url": "https://trychroma.com/engineering/wal3",
      "savedAt": "2025-09-12T00:39:15.808000+00:00",
      "description": "wal3 is a write-ahead log built on object storage that stores data durably and proves it is correct. It uses S3 conditional writes, a lock-free algorithm, and an O(1) setsum checksum for appends and trims. Dual implementations cross-check data and checksum so garbage collection is safe and per-collection scaling is simple.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnry6pan201hazvzgfqz1g",
      "title": "What Is the Fourier Transform?",
      "url": "https://www.quantamagazine.org/what-is-the-fourier-transform-20250903/",
      "savedAt": "2025-09-12T00:39:00.054000+00:00",
      "description": "The Fourier transform is a math tool that breaks down complex waves into simple frequencies. It helps us understand sounds, images, and signals by showing their basic parts. This discovery changed math and science and is used in many technologies today.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnrmbxjwqj2t6ee400q7e6",
      "title": "Evolving The OCaml Programming Language",
      "url": "https://kcsrk.info/slides/Evolution_Ashoka_2025.pdf",
      "savedAt": "2025-09-12T00:38:49.981000+00:00",
      "description": null,
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnr4ywzw4a2fnvfwwra0vg",
      "title": "Models of (Dependent) Type Theory",
      "url": "https://bartoszmilewski.com/2025/09/05/models-of-dependent-type-theory/",
      "savedAt": "2025-09-12T00:38:34.204000+00:00",
      "description": "Previously: (Weak) Factorization Systems. It’s been known since Lambek that typed lambda calculus can be modeled in a cartesian closed category, CCC. Cartesian means that you can form product…",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnqxe115az907t6sfszgka",
      "title": "Pratt Parsers: Expression Parsing Made Easy",
      "url": "https://journal.stuffwithstuff.com/2011/03/19/pratt-parsers-expression-parsing-made-easy/",
      "savedAt": "2025-09-12T00:38:26.497000+00:00",
      "description": "Every now and then, I stumble onto some algorithm or idea that’s so clever and such a perfect solution to a problem that I feel like I got smarter or gained a new superpower just by learning it.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnqp2wh0rqvc563cp0zcxk",
      "title": "Demystifying Pratt Parsers",
      "url": "https://martin.janiczek.cz/2023/07/03/demystifying-pratt-parsers.html",
      "savedAt": "2025-09-12T00:38:18.971000+00:00",
      "description": "Pratt parsers are an algorithm for solving the operator precedence problem in parsing expressions. They handle the ambiguity of operators by assigning precedence values to each operator and using a recursive algorithm to parse the expression tree. The Pratt parser first parses the prefix expression, then loops through the tokens, combining them into an expression based on their precedence. The algorithm is implemented in Elm in a concise and minimal way, allowing for easy understanding and porting to other languages.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnq862pm9kf9ynxajfjvhx",
      "title": "The day Return became Enter",
      "url": "https://aresluna.org/the-day-return-became-enter/",
      "savedAt": "2025-09-12T00:38:04.738000+00:00",
      "description": "The carriage return began as a mechanical lever on old typewriters and became a Return key as machines grew electric. Teletypes and word processors split Return from Line Feed, and early computers sometimes merged or renamed them as Enter. Today’s keyboards keep QWERTY shapes but the old mechanical functions are mostly handled by software.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnnzqt1besqp5m47sz545w",
      "title": "Logical Duals in Software Engineering",
      "url": "https://buttondown.com/hillelwayne/archive/logical-duals-in-software-engineering/",
      "savedAt": "2025-09-12T00:37:23.322000+00:00",
      "description": "Logical duals are operators where F(x) = not G(not x).  \nThat makes exists vs. for-all interchangeable: to prove all x satisfy P, search for an x that violates P.  \nThis trick powers SMT solvers, model checkers, planners, database triggers, and appears in reversals and inverted maps.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnnp998edpjhdd8sywk7g5",
      "title": "Unintended consequences",
      "url": "https://www.sicpers.info/2025/08/unintended-consequences/",
      "savedAt": "2025-09-12T00:37:13.641000+00:00",
      "description": "I did a PhD while working full time and it drained my spare time and stamina. My fitness tracker warned my VO2 max was very low and linked it to serious health risks. Short HIIT sessions and lunchtime walks raised my score and reminded me to put my health first.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnne4tj3padqnsatbxqks7",
      "title": "Sometimes CPU cores are odd",
      "url": "https://anubis.techaro.lol/blog/2025/cpu-core-odd/",
      "savedAt": "2025-09-12T00:37:05.306000+00:00",
      "description": "Anubis sometimes returned \"invalid response\" because it computed a fractional worker count on odd‑core devices. That produced non‑integer nonces which the server rejected. The fix was to truncate the thread count (Math.trunc) and stop assuming core counts are even.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnn39a6cf3en8wgx6espd9",
      "title": "Burrito Monads, Arrow Kitchens, and Freyd Category Recipes",
      "url": "https://golem.ph.utexas.edu/category/2025/08/burrito_monads_arrow_kitchens.html",
      "savedAt": "2025-09-12T00:36:54.186000+00:00",
      "description": "Monads wrap single values in computational contexts, like burritos in tortillas, while Arrows generalize this to coordinate multiple inputs and complex processes, like managing a whole kitchen. Although Arrows were thought to be the same as Freyd categories, research shows they are more general and correspond to closed indexed Freyd categories. This understanding helps improve programming language design, especially in areas like quantum computing where managing multiple inputs is important.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnmsvhe8gbh0588c5v0me4",
      "title": "Anything can be a message queue if you use it wrongly enough",
      "url": "https://xeiaso.net/blog/anything-message-queue/",
      "savedAt": "2025-09-12T00:36:44.529000+00:00",
      "description": "The piece explores using S3 as a message queue to tunnel IPv6 packets and dodge AWS Managed NAT Gateway egress charges. The author built Hoshino to create a TUN device that writes packets to S3 and reads them back. Per-packet S3 request costs and TCP overhead make the idea far more expensive and impractical.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnmj8xjpxyaxsqxfjxxk5k",
      "title": "Do the simplest thing that could possibly work",
      "url": "https://www.seangoedecke.com/the-simplest-thing-that-could-possibly-work/",
      "savedAt": "2025-09-12T00:36:36.765000+00:00",
      "description": "When designing software, do the simplest thing that could possibly work.  \nSimple solutions often beat over-engineered ones because they have fewer moving parts and are easier to maintain.  \nAdd complexity only when real requirements force it, and watch for inflexibility or scaling limits.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnkg270me7emmq55wes0c7",
      "title": "Game Theory at Work: When to Talk and When to Shut Up",
      "url": "https://swaits.com/game-theory-at-work-and-when-to-shutup/",
      "savedAt": "2025-09-12T00:36:01.735000+00:00",
      "description": "Game theory helps you decide when to speak and when to stay quiet at work. Speak up when the benefit outweighs the risk, like fixing a project, and stay quiet on politics or gossip. Every choice shapes your reputation, so pause and make your words count.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnjt24exwdj9pphcyjy08y",
      "title": "SQLite commits are not durable under default settings",
      "url": "https://avi.im/blag/2025/sqlite-fsync/",
      "savedAt": "2025-09-12T00:35:39.204000+00:00",
      "description": "SQLite’s default rollback journal mode with synchronous=FULL does not guarantee the last committed transaction survives an OS or power crash.  \nTrue durability requires EXTRA in delete mode or using WAL with synchronous=FULL (and fullfsync on macOS).  \nCheck your SQLite build and PRAGMA settings because many builds (and macOS defaults) use settings that can lose recent commits.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnjmgdbjm8k44afhq9053f",
      "title": "Mike Mai’s Typography Manual",
      "url": "https://mikemai.net/typography-manual/",
      "savedAt": "2025-09-12T00:35:33.517000+00:00",
      "description": "Mike Mai's Typography Manual emphasizes the importance of using one font effectively, especially exploring all its weights for design consistency. The manual also suggests using traditional point sizes for typography scale and redefining sizes for CJK characters. Lastly, it highlights the use of serif fonts for italics, proper dash types, and the importance of spacing and alignment for clear and professional typography.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnj9qdge6ewx3g8fpf4xy8",
      "title": "Materialized views are obviously useful",
      "url": "https://sophiebits.com/2025/08/22/materialized-views-are-obviously-useful",
      "savedAt": "2025-09-12T00:35:22.476000+00:00",
      "description": "Keeping derived counts in sync is tedious and error-prone. Materialized views (incremental view maintenance) let you declare a query and have the database keep results up-to-date automatically. This removes fragile application code and should become a standard database feature.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnhyk3fhssc26h13x9zyqe",
      "title": "A Guide to Gen AI / LLM Vibecoding for Expert Programmers",
      "url": "https://www.stochasticlifestyle.com/a-guide-to-gen-ai-llm-vibecoding-for-expert-programmers/",
      "savedAt": "2025-09-12T00:35:11.075000+00:00",
      "description": "Vibe coding uses LLMs as junior coders to handle easy, boring work.  \nIt only helps when an expert who knows the code well assigns tasks and rigorously reviews or discards results.  \nIf you hate managing or must solve deep problems yourself, don’t bother.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnh9menpfttgfb6t4f2vvk",
      "title": "Language Models as Thespians",
      "url": "https://jstrieb.github.io/posts/llm-thespians/",
      "savedAt": "2025-09-12T00:34:49.614000+00:00",
      "description": "Large Language Models (LLMs) act like actors who perform roles by mimicking human language, aiming to sound believable rather than always true. Giving LLMs a clear persona helps guide their responses and improves their output quality. This actor analogy helps people understand LLM behavior and encourages better use and communication about AI capabilities.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnh3h81fnkswvt6tvhbfgh",
      "title": "Without the futex, it's futile",
      "url": "https://h4x0r.org/futex/",
      "savedAt": "2025-09-12T00:34:43.367000+00:00",
      "description": "A futex helps manage locks by separating locking from waiting, reducing costly system calls. Mutexes often use spinning first and only wait with a futex if contention is high. Recursive mutexes track ownership and nesting to avoid errors when locking and unlocking multiple times.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnfrzb748h12er7y9p1g0d",
      "title": "Discrete Distributions",
      "url": "https://buttondown.com/jaffray/archive/discrete-distributions/",
      "savedAt": "2025-09-12T00:33:59.787000+00:00",
      "description": "Represent the distribution as cumulative probabilities and sample by binary-searching a tree.  \nWhen outcomes have different probabilities, an unbalanced tree minimizes average steps.  \nA Huffman-style greedy algorithm builds such an optimal tree in O(n log n) time instead of O(n^2).",
      "tags": []
    },
    {
      "id": "01k4xnfjkhtrc7pf54me2df9ap",
      "title": "Bypassing no-go theorems",
      "url": "https://fexpr.blogspot.com/2013/07/bypassing-no-go-theorems.html",
      "savedAt": "2025-09-12T00:33:53.265000+00:00",
      "description": "A no-go theorem is a formal proof that a certain kind of theory cannot work, but people often give such theorems broader informal meanings than their technical results. The author examines famous examples (Gödel, Russell, Church, Curry, Wand) and shows you can sometimes bypass a no-go result by changing how axioms are used or by embedding logic in computation so paradoxes cause nontermination instead of inconsistency. Some bypasses are simple once seen, though others (notably Gödel’s) remain hard and worth exploring.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnevn5k6axre18bndq1wq8",
      "title": "Raft does not Guarantee Liveness in the face of Network Faults",
      "url": "https://decentralizedthoughts.github.io/2020-12-12-raft-liveness-full-omission/",
      "savedAt": "2025-09-12T00:33:29.765000+00:00",
      "description": "Raft consensus algorithm's liveness guarantees in network failures are being questioned after a Cloudflare outage. Raft, as originally described, does not ensure stable leadership in all network failure scenarios. Implementing PreVote and CheckQuorum can address liveness issues, ensuring a stable leader is elected and maintained.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnep1ky1vptygdvs3pr5s9",
      "title": "Beyond Booleans",
      "url": "https://overreacted.io/beyond-booleans/",
      "savedAt": "2025-09-12T00:33:24.019000+00:00",
      "description": "In Lean, propositions are types (Props) and proofs are values of those types.  \nTypechecking is how Lean verifies proofs, so proving 2+2=4 means producing a value of the 2+2=4 type.  \nUnlike simple booleans, Lean records which facts are proved and makes impossible-to-prove statements (like 2+2=5) unconstructible unless you cheat.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xneg50cncwv85b8b7e7952",
      "title": "Faster Index I/O with NVMe SSDs",
      "url": "https://www.marginalia.nu/log/a_123_index_io/",
      "savedAt": "2025-09-12T00:33:17.984000+00:00",
      "description": "Rewriting the B‑trees to use direct (unbuffered) reads sped up and stabilized index I/O on NVMe SSDs. Reading larger aligned blocks (up to about 128 KB) gives much higher throughput than many tiny random reads. Async tools like io_uring can boost throughput but cause jitter at high queue depths, so careful benchmarking and tuning are needed.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xncrawwkf4ww3cydb9xf4v",
      "title": "View Change Protocols And Reconfiguration",
      "url": "https://www.cs.princeton.edu/courses/archive/fall17/cos418/docs/L11-reconfig.pdf",
      "savedAt": "2025-09-12T00:32:20.828000+00:00",
      "description": null,
      "tags": []
    },
    {
      "id": "01k4xnc0ccnx40x4chx484hj1h",
      "title": "Designing Software in the Large",
      "url": "https://dafoster.net/articles/2025/07/22/designing-software-in-the-large/",
      "savedAt": "2025-09-12T00:31:56.300000+00:00",
      "description": "Complexity in software makes it hard to understand and change code. To reduce complexity, keep modules focused and interfaces small, and write clear, consistent code. Always aim to prevent complexity from growing by designing carefully, not just rushing to add features.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xnaj0ej64gdavn3rvq8gkh",
      "title": "Jepsen 18: Serializable Mom by Kyle Kingsbury",
      "url": "https://www.youtube.com/watch?v=dpTxWePmW5Y",
      "savedAt": "2025-09-12T00:31:08.814000+00:00",
      "description": "Distributed systems are fundamentally concurrent and need clear semantics for operations. Bugs in transactions, replication, or write-ahead logs can cause crashes or data loss. Thorough testing, clear documentation, and careful error handling are required to build reliable systems.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn9ybmpjrr6e2t1fkd0jx2",
      "title": "Patterns vs. \"Patterns\"",
      "url": "https://perl.plover.com/classes/design/samples/slide012a.html",
      "savedAt": "2025-09-12T00:30:48.692000+00:00",
      "description": null,
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn8qy4zc4z6sde62fjbsf3",
      "title": "Don't write bugs",
      "url": "https://www.teamten.com/lawrence/programming/dont-write-bugs.html",
      "savedAt": "2025-09-12T00:30:09.348000+00:00",
      "description": "Bugs don't happen by themselves; programmers put them there and can choose not to. Practice and learn from common mistakes to avoid them. Re-read small blocks of code often (about every 3–6 lines).",
      "tags": [
        "cs",
        "favorites"
      ]
    },
    {
      "id": "01k4xn8j1hhs202fmq5kzx3k9g",
      "title": "Look Out For Bugs",
      "url": "https://matklad.github.io/2025/09/04/look-for-bugs.html",
      "savedAt": "2025-09-12T00:30:03.312000+00:00",
      "description": "You can find many real bugs just by carefully reading code. Build a mental model by following control flow and tracking key state. Make time for slow, system-wide reading to prevent subtle errors.",
      "tags": [
        "cs",
        "favorites"
      ]
    },
    {
      "id": "01k4xn892cnvwf7p18gkhpyc03",
      "title": "Formality on demand",
      "url": "https://www.inkandswitch.com/ink/notes/formality-on-demand/",
      "savedAt": "2025-09-12T00:29:54.124000+00:00",
      "description": "Premature formality can cause problems when using computers. It is better to start with loose ideas and add structure later. This approach is called Formality on demand or Gradual enrichment.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn82sezenq8m00gcfg2az6",
      "title": "Oldest recorded transaction",
      "url": "https://avi.im/blag/2025/oldest-txn/",
      "savedAt": "2025-09-12T00:29:47.694000+00:00",
      "description": "The oldest recorded transaction dates back to 3100 BC on a Sumer tablet. Modern databases like Postgres and SQLite can store dates only as far back as 4713 BC, but MySQL supports dates from 1000 AD. This raises challenges for storing very old dates in digital systems.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn7ppy6nrdkmvadwrp10v1",
      "title": "The Angels and Demons of Nondeterminism",
      "url": "https://buttondown.com/hillelwayne/archive/the-angels-and-demons-of-nondeterminism/",
      "savedAt": "2025-09-12T00:29:35.325000+00:00",
      "description": "Nondeterminism means many possible paths; demonic picks the worst and angelic picks the best. Angelic nondeterminism models existence queries and underpins NP, so it’s a useful abstraction for regexes, SQL, and SAT. Real machines are deterministic, so we must care about implementations and optimizations when we need worst-case guarantees, counts, or probabilities.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn7dvah8866061xvq25yz2",
      "title": "Normalization of deviance",
      "url": "https://danluu.com/wat/",
      "savedAt": "2025-09-12T00:29:26.249000+00:00",
      "description": "Normalization of deviance happens when bad work habits become normal and accepted over time. This can cause big problems because people stop questioning risky or inefficient practices. To fix it, companies need strong leadership, clear rules, and a culture where employees feel safe to speak up.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn6z2cg28y23cg13sppfc8",
      "title": "Stop writing CLI validation. Parse it right the first time.",
      "url": "https://hackers.pub/@hongminhee/2025/stop-writing-cli-validation-parse-it-right-the-first-time",
      "savedAt": "2025-09-12T00:29:11.116000+00:00",
      "description": "The author built Optique to stop writing repetitive CLI validation code by parsing arguments correctly from the start. Optique uses parser combinators and TypeScript to ensure options are valid and related rules are enforced automatically. This approach saves time, reduces bugs, and makes CLI code easier to change and trust.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn6j5fbq6s0qyf7g2y65kd",
      "title": "2 thoughts on “The problems that accountability can’t fix”",
      "url": "https://surfingcomplexity.blog/2025/08/23/the-problems-that-accountability-cant-fix/",
      "savedAt": "2025-09-12T00:28:57.903000+00:00",
      "description": "Accountability helps but fails for coordination problems and flawed risk models.  \nThe OceanGate Titan disaster shows a CEO with \"skin in the game\" still took lethal risks because he lacked expertise and misjudged risk.  \nFixes include cross-checks and independent safety authorities so people can say \"this is unsafe\" without double binds.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn69gq1vcngg5vzyz6qgqc",
      "title": "Strong Eventual Consistency - The Big Idea behind CRDTs",
      "url": "https://lewiscampbell.tech/blog/250908.html",
      "savedAt": "2025-09-12T00:28:49.047000+00:00",
      "description": "CRDTs are data structures that let replicas be edited independently and merged automatically. Strong Eventual Consistency means replicas match as soon as updates are processed, not sometime later. This gives low latency, extreme fault tolerance, and offline-friendly geo-replicated databases.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k4xn63gh6n8kr73c71hrt81m",
      "title": "Deliberate Abstraction",
      "url": "https://entropicthoughts.com/deliberate-abstraction",
      "savedAt": "2025-09-12T00:28:42.897000+00:00",
      "description": "Modules help hide changing design choices so programs can adapt without big rewrites. Inside-out design builds from a simple core and adds features later, making software flexible and modular. Good abstraction controls complexity but must be planned to avoid hard-to-change code.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn5x54q2axzh37r68h8jdn",
      "title": "How I solved a distributed queue problem after 15 years",
      "url": "https://www.dbos.dev/blog/durable-queues",
      "savedAt": "2025-09-12T00:28:36.388000+00:00",
      "description": "Reddit ran almost everything through task queues, but crashes and broker outages could lose work. Durable queues checkpoint workflows in a database (like Postgres) so jobs can resume from the last completed step. They add reliability and observability but reduce throughput, so use them for lower-volume, business-critical tasks.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn5p8kd5f468dtcfew23py",
      "title": "The story of how RSS beat Microsoft",
      "url": "https://buttondown.com/blog/rss-vs-ice",
      "savedAt": "2025-09-12T00:28:29.331000+00:00",
      "description": "Big companies like Microsoft pushed ICE, a complex commercial syndication standard.  \nRSS stayed simple, open, and grassroots, so anyone could make feeds and aggregators.  \nThat simplicity let RSS win while ICE faded away.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn4cbesnac0abnjc7rdxez",
      "title": "Building A Database On S3",
      "url": "https://people.csail.mit.edu/kraska/pub/sigmod08-s3.pdf",
      "savedAt": "2025-09-12T00:27:46.414000+00:00",
      "description": "Building a Database on S3: The paper explores the opportunities and limitations of using S3 as a storage system for general-purpose database applications that involve small objects and frequent updates. The paper presents read, write, and commit protocols, as well as cost, performance, and consistency properties of such a storage system. The authors demonstrate how small objects can be implemented using S3, and how a B-tree can be implemented on top of it. They also present protocols to implement different levels of consistency using S3.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn465x0pm5rxe0v4sj7wwn",
      "title": "Hypervisor in 1,000 Lines ​",
      "url": "https://1000hv.seiya.me/en/",
      "savedAt": "2025-09-12T00:27:40.093000+00:00",
      "description": "This book teaches you to build a minimal type-1 RISC‑V hypervisor in about 1,000 lines of Rust. It can boot Linux-based operating systems and uses Rust crates to skip unneeded low-level work. All code is on GitHub and the book and examples are freely licensed (CC BY 4.0, MIT).",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn3we5t969c04fgwj8p8mx",
      "title": "From Unit Tests to Whole Universe Tests (with Will Wilson)",
      "url": "https://www.youtube.com/watch?v=_xJ4maWhSNU",
      "savedAt": "2025-09-12T00:27:30.117000+00:00",
      "description": "Complex systems fail from interactions unit tests miss.  \nA deterministic hypervisor runs a fake production, records everything, and replays it to search for bugs.  \nThat makes reproducing and fixing timing and concurrency bugs fast.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn3n0qr4wt31mrma135tq2",
      "title": "A break from programming languages",
      "url": "https://lexi-lambda.github.io/blog/2025/05/29/a-break-from-programming-languages/",
      "savedAt": "2025-09-12T00:27:22.519000+00:00",
      "description": "I have loved programming languages for years, but they are very hard and progress is slow.  \nProgrammers' conservatism and social factors block many good ideas.  \nMy work felt niche (mostly Haskell) and unrewarding, so I am closing this chapter.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4xn3ev3r9q6xym8pnw10te0",
      "title": "Defeating Nondeterminism in LLM Inference",
      "url": "https://thinkingmachines.ai/blog/defeating-nondeterminism-in-llm-inference/",
      "savedAt": "2025-09-12T00:27:16.194000+00:00",
      "description": "People often blame concurrency and floating-point math for nondeterminism.  \nThe real problem is when reduction strategies change with batch size, breaking \"batch invariance.\"  \nEnsuring batch-invariant kernels (keep each reduction per batch element or use fixed split sizes) makes inference deterministic, though it can reduce peak performance.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k4vhvsx67e68j8kpvh3pdgby",
      "title": "My Quarterly System Health Check-in: Beyond The Dashboard",
      "url": "https://blog.nilenso.com/blog/2025/09/05/my-quarterly-system-health-check-in-beyond-the-dashboard/",
      "savedAt": "2025-09-11T04:52:10.789000+00:00",
      "description": "Hold a 2–4 hour monthly or quarterly system health review to check progress against strategy. Ask simple, informal questions across simplicity, delivery, reliability, performance and organisation to go beyond dashboards. Listen to engineers, diagnose root problems, and prioritise real fixes over raw metrics.",
      "tags": [
        "engineering"
      ]
    },
    {
      "id": "01k4twdh3h5ad0515w2jvtgem1",
      "title": "How To Automate Anything. A Guide to Parts Every Maker Should Know How To Use.",
      "url": "https://www.youtube.com/watch?v=S6GpV431nww",
      "savedAt": "2025-09-10T22:37:22.929000+00:00",
      "description": "A relay or contactor lets a low‑power signal switch high‑power circuits to automate devices. Use proper power supplies and parts rated for the current, and add sensors or limit switches to control it. Put relays near the load and wire them correctly for safe, reliable operation.",
      "tags": []
    },
    {
      "id": "01k4sr70kqnvmewy1pah5xm811",
      "title": "Knowledge and Common Knowledge in a Distributed Environment, Part 1",
      "url": "https://emptysqua.re/blog/review-common-knowledge-part-1/",
      "savedAt": "2025-09-10T12:04:40.694000+00:00",
      "description": "A public announcement can create common knowledge and change what agents can prove. Repeated questions in the muddy-children puzzle raise knowledge levels until the muddy children know they are muddy on the kth round. The same hierarchy matters in distributed systems like Raft: without acknowledgments facts never become common knowledge and so cannot be safely committed.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k4qjdgqhfq9sqs8hw99dnhxj",
      "title": "jantimon/react-hydration-rules: Comprehensive guide documenting React hydration and Suspense fallback behaviors during SSR",
      "url": "https://github.com/jantimon/react-hydration-rules",
      "savedAt": "2025-09-09T15:44:53.488000+00:00",
      "description": "This guide shows when React hydration makes server-rendered content flash to Suspense fallbacks. Normal state updates during hydration trigger fallbacks, but startTransition prevents most of them. Exceptions: rendering isPending can still trigger fallbacks, and useSyncExternalStore updates always do.",
      "tags": []
    },
    {
      "id": "01k4pcfsj81e0qgt5veg3cw72d",
      "title": "Elements of Rust - Core Types and Traits",
      "url": "https://rustcurious.com/elements/",
      "savedAt": "2025-09-09T04:42:02.184000+00:00",
      "description": "This is a clickable visual guide to the Rust type system. It focuses on lang_items, the built-in types and traits that support language syntax rather than library types like Vec, String, or HashMap. The platform-independent core enables no_std and embedded code that runs without a heap.",
      "tags": [
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k47vj2jfsrp41pk918t35cyg",
      "title": "GitHub - the-litte-book-of/linear-algebra: There is hardly any theory which is more elementary than linear algebra, in spite of the fact that generations of professors and textbook writers have obscured its simplicity by preposterous calculations with matrices. —Jean Dieudonne",
      "url": "https://github.com/the-litte-book-of/linear-algebra",
      "savedAt": "2025-09-03T13:16:49.103000+00:00",
      "description": "Linear algebra starts with scalars and vectors and builds vector spaces and bases.  \nMatrices encode linear operations and help solve systems of equations.  \nLinear transformations link algebra and geometry and power graphics, computation, and data.",
      "tags": []
    },
    {
      "id": "01k41ac9m5sw6882355nt9dgr8",
      "title": "Big O",
      "url": "https://samwho.dev/big-o/",
      "savedAt": "2025-09-01T00:21:07.333000+00:00",
      "description": "Big O shows how running time grows as input size increases.  \nCommon classes are O(1) constant, O(log n) logarithmic, O(n) linear, and O(n^2) quadratic.  \nChoosing better algorithms or data structures (formulas, binary search, maps) makes code faster.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k41abnz9kz3vgsxc4e9p13xk",
      "title": "Bits and pieces",
      "url": "https://blog.brunobonacci.com/2018/07/15/viewstamped-replication-explained/",
      "savedAt": "2025-09-01T00:20:47.209000+00:00",
      "description": "The primary assigns an op-num, logs the request, and sends PREPARE to all replicas. Replicas send PREPARE-OK and after a quorum the primary sends COMMIT so all apply operations up to the commit-num. If the primary fails, replicas deterministically pick a new primary, bring it up to date, and resume.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k3sp9hntysvb1gfqvdgeq1b3",
      "title": "You no longer need JavaScript",
      "url": "https://lyra.horse/blog/2025/08/you-dont-need-js/",
      "savedAt": "2025-08-29T01:15:24.730000+00:00",
      "description": "Modern HTML and CSS can replace JavaScript for many tasks.  \nDevelopers often underestimate CSS because they skip learning its new powerful features.  \nCSS is faster, more accessible, and expressive, though JavaScript is still sometimes necessary.",
      "tags": [
        "web"
      ]
    },
    {
      "id": "01k3j0hhk43q11cwema97dmgk2",
      "title": "BUGGIFY",
      "url": "https://transactional.blog/simulation/buggify",
      "savedAt": "2025-08-26T01:40:37.092000+00:00",
      "description": "FoundationDB uses a deterministic simulator plus an in-code fault injector called BUGGIFY to find rare, high-level bugs. BUGGIFY is compiled into the production binary but only runs in simulation; each use is enabled per run and usually fires with about 25% probability. Engineers sprinkle BUGGIFY to force error paths, add delays, randomize knobs, and then reduce destructive faults later so the system can recover.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k3j0en7t3ggqfh6v51arm8ek",
      "title": "Secret Management on NixOS with sops-nix",
      "url": "https://michael.stapelberg.ch/posts/2025-08-24-secret-management-with-sops-nix/",
      "savedAt": "2025-08-26T01:39:02.522000+00:00",
      "description": "The article explains how to securely manage secrets in NixOS using sops-nix by encrypting secrets in git and decrypting them at runtime. It shows how to integrate sops with NixOS, use existing SSH keys for encryption, and configure secrets for system services. This approach keeps secrets safe while allowing easy sharing and deployment of system configurations.",
      "tags": [
        "tools/nix"
      ]
    },
    {
      "id": "01k3j0c70nec8k800p6nv7mrga",
      "title": "Circuit Simulator Applet",
      "url": "https://www.falstad.com/circuit/",
      "savedAt": "2025-08-26T01:37:42.421000+00:00",
      "description": "This is an interactive electronic circuit simulator from falstad.com. The animated view shows voltages and currents and lets you click switches or edit components. It includes many example circuits and multiple versions (Java, JavaScript, standalone).",
      "tags": [
        "hardware"
      ]
    },
    {
      "id": "01k3ghrsfa4arskjv24s05cbhh",
      "title": "Optimizing our way through Metroid",
      "url": "https://antithesis.com/blog/2025/metroid/",
      "savedAt": "2025-08-25T12:03:11.466000+00:00",
      "description": "The Antithesis platform learned to solve the challenge of needing missiles to open a door in Metroid by tracking missile counts while exploring the game. They improved their testing by optimizing state exploration, making the process faster and smarter. This new approach helped them beat the game and discover bugs more effectively.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k3ggdbh37csv806wz7ataa4t",
      "title": "\"| > \"",
      "url": "https://gwern.net/everything",
      "savedAt": "2025-08-25T11:39:28.162000+00:00",
      "description": "Many null hypotheses in psychology are implausible and practically never true.  \nWith enough data they will be rejected, so simple significance tests are uninformative.  \nResearchers should build and test substantive models instead.",
      "tags": [
        "math/statistics"
      ]
    },
    {
      "id": "01k3br3z9cey3zes54hff1690d",
      "title": "Consistency Models",
      "url": "https://jepsen.io/consistency/models",
      "savedAt": "2025-08-23T15:17:57.164000+00:00",
      "description": "Consistency models describe which sequences of operations are allowed in concurrent and distributed systems. They form a hierarchy: strong models (like strict serializability and linearizability) imply weaker ones (like sequential or causal consistency). Network asynchrony and availability trade-offs mean stronger models are often impossible or less available in real systems.",
      "tags": [
        "for-later",
        "cs/distsys",
        "cs/database"
      ]
    },
    {
      "id": "01k32mn2nwfybyfeag8txyft0h",
      "title": "How to Think About GPUs",
      "url": "https://jax-ml.github.io/scaling-book/gpus/",
      "savedAt": "2025-08-20T02:24:13.499000+00:00",
      "description": "GPU nodes are typically 8 GPUs, with an H100 GPU egress ≈450 GB/s (B200/GB200 can reach ≈900 GB/s).  \nInside a node communication is fast, but beyond the node effective node egress falls to ≈400 GB/s, so collectives cost roughly B / W_node_egress.  \nThis drives LLM scaling: you need large local batch sizes and multiple nodes, and in‑network reductions can halve collective costs.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k2yhapxz5hyf98cv59gmcdmr",
      "title": "NixOS & Flakes Book",
      "url": "https://nixos-and-flakes.thiscute.world/introduction/installation",
      "savedAt": "2025-08-18T12:09:10.334000+00:00",
      "description": "This book focuses on using NixOS and Flakes. It skips installation details for Nix on macOS, Linux, or WSL. For installs visit https://nixos.org/download.html; macOS users can try ryan4yin/nix-darwin-kickstarter.",
      "tags": [
        "tools/nix"
      ]
    },
    {
      "id": "01k2wrqj96vdamksyyvq79z9fg",
      "title": "Consensus algorithms at scale: Part 1 - Introduction",
      "url": "https://planetscale.com/blog/consensus-algorithms-at-scale-part-1",
      "savedAt": "2025-08-17T19:40:02.726000+00:00",
      "description": "The introduction to the article \"Consensus algorithms at scale: Part 1\" highlights the complexity of consensus algorithms in theory and practice, emphasizing the evolving nature of the problems they address. It discusses key requirements like distributed durability, availability, and automation in consensus systems, posing questions about whether existing solutions like Paxos or Raft would emerge if starting from these requirements. The text points out the need for systems to adapt to changing cloud provider topologies and pricing structures, suggesting a more flexible approach like Vitess, which allows for customization without compromising essential aspects. The article promises to delve into dissecting consensus algorithms, building new principles using flexible algorithms, and ultimately achieving objectives in Vitess, all from an engineering perspective based on experience rather than formal proof.",
      "tags": []
    },
    {
      "id": "01k2vxky6pm44cqyx7mrf8f4zj",
      "title": "Typechecker Zoo",
      "url": "https://sdiehl.github.io/typechecker-zoo/foundations/type-systems.html",
      "savedAt": "2025-08-17T11:46:12.310000+00:00",
      "description": "Type systems are rules that assign types to program parts and check that a program is well-typed.  \nType checking builds derivation trees from inference rules and contexts to prove programs follow those rules.  \nModern type systems blur types and terms so types can express logic, letting programs serve as machine-checked proofs.",
      "tags": [
        "type-theory",
        "cs/pl-theory"
      ]
    },
    {
      "id": "01k2n9q6kd6rnn0sgte9wjzqjh",
      "title": "The Patterns",
      "url": "https://patternlanguage.cc/",
      "savedAt": "2025-08-14T22:03:01.101000+00:00",
      "description": "This text introduces patterns for shaping groups of buildings and individual buildings in three dimensions. It guides individuals or small groups on designing and building layouts, emphasizing the importance of site positioning, building layout, pathways, light, space, and private rooms. The text also highlights the significance of establishing a structural philosophy before detailing structural elements in building construction.",
      "tags": [
        "society",
        "engineering"
      ]
    },
    {
      "id": "01k2n7aadtd6cpc51kbf1jxe4j",
      "title": "Type inference for plain data",
      "url": "https://www.haskellforall.com/2025/08/type-inference-for-plain-data.html",
      "savedAt": "2025-08-14T21:21:01.882000+00:00",
      "description": "Type inference is simpler for plain data types using monoid laws and unification rules with mempty as the Never type. The unification operator (<>) combines types by making fields optional or merging matching fields, ensuring supertype relationships. Associativity and other laws hold for basic types like String, Number, Bool, Array, and Object, supporting consistent type unification.",
      "tags": [
        "for-later",
        "type-theory"
      ]
    },
    {
      "id": "01k2m53tz01380hsctevax36wk",
      "title": "iPhone DevOps - ultimate edition",
      "url": "https://clearsky.dev/blog/iphone-devops-ssh/",
      "savedAt": "2025-08-14T11:23:17.856000+00:00",
      "description": "The author enjoys coding on an iPhone using apps like Pythonista, Secure ShellFish, Textastic, and Working Copy. They run code on a remote Linux server and sync files between their phone and server smoothly. This setup costs some money but works well as a portable, single-handed development environment.",
      "tags": [
        "cs/devops"
      ]
    },
    {
      "id": "01k2jv6xtjr5edrrgk0ymtq15d",
      "title": "OOMProf - Profiling on the Brink",
      "url": "https://www.polarsignals.com/blog/posts/2025/08/13/oomprof",
      "savedAt": "2025-08-13T23:10:58.897000+00:00",
      "description": "OOMProf is a tool that helps developers understand why their Go programs are killed by the Linux OOM killer. It captures detailed memory allocation data right when the program runs out of memory. This makes debugging out-of-memory crashes easier and more precise.",
      "tags": []
    },
    {
      "id": "01k2f4jec6j7a94qee7synmvc9",
      "title": "What even is distributed systems",
      "url": "https://notes.eatonphil.com/2025-08-09-what-even-is-distributed-systems.html",
      "savedAt": "2025-08-12T12:37:35.750000+00:00",
      "description": "Distributed systems study how processes interact, creating challenges in correctness, reliability, and performance. A great way to learn is by reading \"Designing Data Intensive Applications\" and following the MIT Distributed Systems course. Practice by implementing common protocols and join communities like the Software Internals Discord to discuss and ask questions.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k2d4pvbd7demqvm0e92qf78s",
      "title": "Viewstamped Replication: The Less-Famous Consensus Protocol",
      "url": "https://brooker.co.za/blog/2014/05/19/vr.html",
      "savedAt": "2025-08-11T18:01:31.245000+00:00",
      "description": "Viewstamped Replication is an older, less-known consensus protocol that works differently from the popular Paxos and Raft. It uses passive replication, where only the primary replica executes operations and shares updates with others. Despite its advantages and clear explanations, it remains overlooked compared to Paxos and Raft.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01k28jm6w620sa4vdnjeb45yw0",
      "title": "A CT scanner reveals surprises inside the 386 processor's ceramic package",
      "url": "https://www.righto.com/2025/08/intel-386-package-ct-scan.html",
      "savedAt": "2025-08-09T23:28:32.646000+00:00",
      "description": "A 3-D CT scan revealed the Intel 386 processor has a complex six-layer ceramic package with 132 gold-plated pins. The chip uses separate power and ground networks for I/O and CPU logic to improve performance and noise reduction. The scan helped map the hidden connections between the die's pads and the external pins, clarifying the chip's internal wiring.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k27bmjaym1vgg4nvxhq4s6pp",
      "title": "Lobsters Interview with Hwayne",
      "url": "https://lobste.rs/s/bc53lh",
      "savedAt": "2025-08-09T12:07:09.917000+00:00",
      "description": "Hwayne discovered programming as a career pivot and focuses on making Formal Methods (FM) accessible and practical for developers. He values writing and teaching to clarify complex topics like logic and believes FM helps improve engineering work when engineers are motivated. He also emphasizes that software engineering involves creating mental models beyond just writing code.",
      "tags": []
    },
    {
      "id": "01k278bqheh7r8761vp7n6e2bp",
      "title": "Over engineering my homelab so I don't pay cloud providers",
      "url": "https://ergaster.org/posts/2025/08/04-overegineering-homelab/",
      "savedAt": "2025-08-09T11:09:54.606000+00:00",
      "description": "The author set up a Proxmox hypervisor on a home server to avoid paying cloud providers. They automated the installation and configuration using Ansible, OpenTofu, and cloud-init. This setup includes disk encryption and easy VM deployment for flexible and secure home lab management.",
      "tags": [
        "homelab",
        "for-later"
      ]
    },
    {
      "id": "01k25mwm9rvmcc7x030ff5b1qb",
      "title": "Why You Should Build Durable Workflows With Postgres",
      "url": "https://www.dbos.dev/blog/why-postgres-durable-execution",
      "savedAt": "2025-08-08T20:10:22.391000+00:00",
      "description": "Postgres is a great choice for building durable workflows because it handles concurrency well, supports powerful queries, and ensures tasks run exactly once. Its locking features reduce bottlenecks when multiple workers process tasks at the same time. Postgres also helps monitor workflows easily and makes sure database steps complete fully or not at all.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k20hwt4vyygcq4mq2vnaqbeq",
      "title": "Cognitive Decline Can Be Slowed Down With Lifestyle Changes, From Diet to Exercise and Social Time, New Study Suggests",
      "url": "https://www.smithsonianmag.com/smart-news/cognitive-decline-can-be-slowed-down-with-lifestyle-changes-from-diet-to-exercise-and-social-time-new-study-suggests-180987077/",
      "savedAt": "2025-08-06T20:41:50.491000+00:00",
      "description": "A study shows that regular exercise, healthy diet, and social engagement can slow cognitive decline in older adults. People who followed a structured lifestyle program had better thinking skills than those who chose their own plan. Researchers believe support and guidance help people stick to healthy habits and improve brain health.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k20h5qqxce4bqk17wnate51t",
      "title": "Implementing Viewstamped Replication protocol",
      "url": "https://distributed-computing-musings.com/2023/10/implementing-viewstamped-replication-protocol/",
      "savedAt": "2025-08-06T20:29:14.364000+00:00",
      "description": "Viewstamped Replication (VR) is a protocol that keeps data safe by making sure all nodes in a cluster apply operations in the same order, even if some nodes fail. It chooses a new leader quickly using a simple round-robin method when the current leader fails, and failed nodes can catch up by getting missed updates. VR is simpler than other consensus protocols and can be improved with optimizations like storing logs on disk and batching requests.",
      "tags": [
        "favorites",
        "cs/distsys"
      ]
    },
    {
      "id": "01k20bfdwajdpavpt10x1vsnwh",
      "title": "How to Scale Proteomics",
      "url": "https://www.asimov.press/p/proteomics",
      "savedAt": "2025-08-06T18:49:40.490000+00:00",
      "description": "Proteomics studies proteins in cells but is slow and limited to few cells at a time. PTI is creating better barcodes, faster machines, and smart software to study thousands of cells quickly. This could help detect diseases like Alzheimer’s early by analyzing many brain cells’ proteins.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k201xcwz2a0sez5kz43405e9",
      "title": "Build Your Own Lisp Learn C and build your own programming language in 1000 lines of code!",
      "url": "https://www.buildyourownlisp.com/",
      "savedAt": "2025-08-06T16:02:32.479000+00:00",
      "description": "Learn C and build your own programming language with this book. Discover the wonders of Lisps and solve problems with concise code examples. Available for free online or for purchase in print and e-book formats.",
      "tags": [
        "for-later",
        "cs/pl-theory"
      ]
    },
    {
      "id": "01k201hwqk0gacsgpdccfqa06n",
      "title": "Software books I wish I could read",
      "url": "https://buttondown.com/hillelwayne/archive/software-books-i-wish-i-could-read/",
      "savedAt": "2025-08-06T15:56:15.475000+00:00",
      "description": "The author wishes there were more software books that explain complex topics in simple ways, like configurations, data schemas, and practical computer science. They are writing their own book to help others learn easier than they did. The post lists ideas for useful books that don't exist yet but would help many programmers.",
      "tags": [
        "cs",
        "books"
      ]
    },
    {
      "id": "01k1y6h94ssyrzm7k7e8gf2419",
      "title": "Gate-level emulation of an Intel 4004 in 4004 bytes of C",
      "url": "https://nicholas.carlini.com/writing/2025/ioccc-intel-4004-in-4004-bytes-c.html",
      "savedAt": "2025-08-05T22:44:49.433000+00:00",
      "description": "This program emulates the Intel 4004 CPU by decompressing a large circuit description and then simulating its logic gates in C. It uses a compressed, gate-level representation to accurately mimic the processor’s instructions and registers. The emulator runs instructions by recalculating gate outputs, allowing it to execute the 4004’s operations in software efficiently.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1tzqgawse19rzdqwng4zrez",
      "title": "Social Capital: The Compound Interest of Your Engineering Career",
      "url": "https://newsletter.rafapaez.com/p/social-capital-the-career-edge-most",
      "savedAt": "2025-08-04T16:48:10.076000+00:00",
      "description": "Social capital is the trust and relationships engineers build to get support and influence decisions. It grows from small, consistent actions like helping others and communicating clearly. Combining social capital with initiative helps engineers make a bigger impact and advance their careers.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "01k1texa2cr4ce07hxkffn1eh4",
      "title": "Proofs are Programs",
      "url": "https://www.youtube.com/watch?v=AGnTnbR1sSg",
      "savedAt": "2025-08-04T11:54:14.476000+00:00",
      "description": "Proofs in logic can be seen as computer programs, where each proof corresponds to a function with a specific type. This idea, known as the Curry-Howard correspondence, links logic, computation, and type theory. Using lambda calculus, we can write and understand these proof-programs clearly and precisely.",
      "tags": [
        "math/logic",
        "type-theory",
        "math/formal-proof"
      ]
    },
    {
      "id": "01k1t6eafvxzrxhtzm30wdpv3f",
      "title": "Practical Static Analysis for Privacy Bugs",
      "url": "https://blog.brownplt.org/2025/08/03/paralegal.html",
      "savedAt": "2025-08-04T09:26:14.779000+00:00",
      "description": "Privacy bugs are hard to find and fix, but they are very important because of laws like the GDPR. Paralegal is a new tool that helps check privacy rules written in simple English and links them to the actual code. It uses Rust’s type system to analyze programs quickly and accurately, making it useful for real-world software.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1rc9fzkms0yymr5c5796h94",
      "title": "How to reverse engineer an analog chip: the TDA7000 FM radio receiver",
      "url": "https://www.righto.com/2025/08/reverse-engineering-analog-TDA7000.html",
      "savedAt": "2025-08-03T16:29:59.155000+00:00",
      "description": "The TDA7000 FM radio chip uses over 100 bipolar transistors, mainly NPN type, for its circuits. The chip design is complex, with careful layout and unique transistor structures to fit all components on one metal layer. Understanding NPN transistors and their simple circuits helps in reverse engineering this analog chip.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1rbse9xybnvwanykrv7998w",
      "title": "The Making of D.",
      "url": "https://fab.cba.mit.edu/classes/863.19/CBA/people/dsculley/index.html",
      "savedAt": "2025-08-03T16:21:13.148000+00:00",
      "description": "D. Sculley, a Google machine learning researcher, is taking the MIT course \"How to Make Almost Anything\" to learn about fabrication. The course covers many hands-on skills like 3D printing, electronics, and CNC machining over 14 weeks. He hopes to find connections between fabrication and machine learning for future projects.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1rbqhy5aj7r4p508y6a1tg4",
      "title": "How should we learn from bugs?",
      "url": "https://typesanitizer.com/blog/bug-analysis.html",
      "savedAt": "2025-09-12T00:31:33.797000+00:00",
      "description": "Bugs often come from different people writing code in different ways, which can cause unexpected problems. It is hard to fully understand or prevent all bugs because every project and context is different. When dealing with bugs, it helps to stay calm, ask questions, and be kind to yourself and others.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1rbpjptrh8qkgankhxg0h9d",
      "title": "The Math Is Haunted",
      "url": "https://overreacted.io/the-math-is-haunted/",
      "savedAt": "2025-08-03T16:19:39.354000+00:00",
      "description": "Lean is a tool that lets mathematicians write proofs like computer code to check math carefully. You can add axioms, but bad ones like \"2 = 3\" break math and let you prove anything. Removing bad axioms keeps math true and helps build reliable, complex proofs step by step.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1rbp63d8x6qd8apbqcb7jt6",
      "title": "Linear types for programmers",
      "url": "https://twey.io/for-programmers/linear-types/",
      "savedAt": "2025-08-03T16:19:26.445000+00:00",
      "description": "Linear types ensure that values are used exactly once, helping programmers manage resources like memory and file handles safely. They model protocols and state changes, preventing errors such as using a closed file or misordering network requests. Languages like Rust and Haskell use related systems to improve performance, safety, and concurrency.",
      "tags": [
        "type-theory",
        "cs/pl-theory"
      ]
    },
    {
      "id": "01k1ny1gwv48wex9qks3eff96j",
      "title": "Does the Bitter Lesson Have Limits?",
      "url": "https://www.dbreunig.com/2025/08/01/does-the-bitter-lesson-have-limits.html",
      "savedAt": "2025-08-02T17:42:29.019000+00:00",
      "description": "The bitter lesson says AI works best when it learns from lots of data and computation, not human rules. But real-world problems like business are messy and hard to measure, making this lesson less clear. Sometimes, smart human-designed methods can be faster, cheaper, and just as good as big compute.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ny0kcw4c2qj0xfap7vg9kc",
      "title": "HoareHoare Logic, Part I",
      "url": "https://www.cs.cornell.edu/courses/cs4160/2020sp/sf/plf/terse/Hoare.html",
      "savedAt": "2025-08-02T17:41:58.812000+00:00",
      "description": "Hoare logic uses assertions to reason about program correctness with preconditions and postconditions. It defines rules, like assignment and consequence, to prove that commands meet their specifications. Automation tactics help streamline these proofs in formal verification.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1nxq58cf1f6nysnmnzdt65j",
      "title": "The many, many, many JavaScript runtimes of the last decade",
      "url": "https://buttondown.com/whatever_jamie/archive/the-many-many-many-javascript-runtimes-of-the-last-decade/",
      "savedAt": "2025-08-02T17:36:49.420000+00:00",
      "description": "JavaScript runtimes have grown diverse, running on many platforms from tiny devices to desktops and mobile apps. Node.js and browser engines like V8 remain popular, but new engines and frameworks are emerging. Developers want JavaScript everywhere, and its use in native apps continues to expand beyond the web.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1nxhy619akz6w7p99e9jbpy",
      "title": "A Bytecode VM for Arithmetic: The Parser",
      "url": "https://abhinavsarkar.net/posts/arithmetic-bytecode-vm-parser/",
      "savedAt": "2025-08-02T17:33:58.336000+00:00",
      "description": "The post explains how to write a parser in Haskell that converts arithmetic expressions into Abstract Syntax Trees (ASTs). It uses the attoparsec library and supports parsing of let expressions and binary operations with correct precedence. The parser is thoroughly tested for both correct inputs and error cases, showing reliable behavior.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1kw4jay3ab75pxzvhkbfmx4",
      "title": "Lobsters Interview with Icefox",
      "url": "https://lobste.rs/s/2vfx6w/lobsters_interview_with_icefox",
      "savedAt": "2025-08-01T22:30:42.782000+00:00",
      "description": "The author is creating a new systems programming language called Garnet that focuses on minimalism and practical features like borrow checking and bitwise pattern-matching. They believe no perfect language exists, but better tools help programmers build useful systems. Collaboration between researchers and engineers is key to improving programming languages and tools.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "01k1kn92ggp1pgh99q6jcdatgx",
      "title": "What Declarative Languages Are",
      "url": "https://semantic-domain.blogspot.com/2013/07/what-declarative-languages-are.html",
      "savedAt": "2025-08-01T20:30:50.384000+00:00",
      "description": "A declarative language is one whose meaning involves some hidden existential choices, like regular expressions or SQL. These languages have simple, logical meanings but need complex methods to run them efficiently. Features that reveal how they work underneath are usually disliked by programmers.",
      "tags": [
        "cs/pl-theory"
      ]
    },
    {
      "id": "01k1epr413d7mk64y1j88j55h5",
      "title": "„I Am Tired All The Time“ – 13 Reasons Why",
      "url": "https://desmolysium.com/i-am-tired-all-the-time-13-reasons-why/?utm_source=rss&utm_medium=rss&utm_campaign=i-am-tired-all-the-time-13-reasons-why",
      "savedAt": "2025-07-30T22:20:19.875000+00:00",
      "description": "Low energy and fatigue have many causes, including hormone imbalances, poor sleep, nutrient deficiencies, and inflammation. Treating these issues can improve mood and energy, but some people struggle due to genetics. Many common medical tests miss these problems, so understanding the root causes is important.",
      "tags": [
        "biohack",
        "self-improvement"
      ]
    },
    {
      "id": "01k1entevnqzrcf59v1599j0bm",
      "title": "Emacs: The MacOS Bug",
      "url": "https://xlii.space/eng/emacs-the-macos-bug/",
      "savedAt": "2025-07-30T22:04:07.925000+00:00",
      "description": "Emacs on macOS gets slower over time because it repeatedly creates and destroys graphical resources during event handling, causing high memory use. This happens faster on newer, high-DPI Macs and is hard to fix due to deeply rooted code and macOS APIs. The author suggests rewriting parts in Swift to improve performance and memory management in the future.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ennakvvphtydg1hcvjc0ha",
      "title": "Your actions reflect your priorities",
      "url": "https://tombrady.com/posts/your-actions-reflect-your-priorities",
      "savedAt": "2025-07-30T22:01:19.739000+00:00",
      "description": "True satisfaction comes from how you live every day, not just from big achievements. Life has many priorities like health, family, work, and community, and you must balance them wisely. When your actions match your priorities, you live with purpose and inspire others.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "01k1emyghz8dfw5jfmz2zjkz0e",
      "title": "polarizing parsers",
      "url": "https://flak.tedunangst.com/post/polarizing-parsers",
      "savedAt": "2025-07-30T21:48:52.159000+00:00",
      "description": "A vulnerability called request smuggling involves sending confusing HTTP headers that cause servers to interpret requests differently. The author’s Go-based proxy avoids this problem by parsing requests consistently, so the backend sees the same data the proxy does. The real issue is proxies like Akamai’s sending invalid requests, not the HTTP protocol itself.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1emxsqtcn2290v0qsjaydr5",
      "title": "Behind the Scenes: My \"How Computers Really Work\" Series on Computerphile",
      "url": "https://xania.org/202507/computerphile-series?utm_source=feed&utm_medium=rss",
      "savedAt": "2025-07-30T21:48:28.794000+00:00",
      "description": "The author created a Computerphile video series explaining how CPUs work using simple analogies and real props. They record remotely with a special setup and face some technical challenges, but enjoy making the videos with their editor Sean. The series is popular with viewers who want to learn computer basics, and more episodes are planned.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebnjggxmj6wvf1nn8dwk0f",
      "title": "How the Brain Increases Blood Flow on Demand",
      "url": "https://hms.harvard.edu/news/how-brain-increases-blood-flow-demand",
      "savedAt": "2025-07-30T19:06:42.064000+00:00",
      "description": "Scientists discovered how the brain quickly sends blood to active areas using special cells lining blood vessels. These cells talk to each other through tiny channels to signal where more blood is needed. This finding may help us understand brain diseases and improve brain scans like fMRI.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebhjy4rcsmh2tmaf10dwsd",
      "title": "2000 words about arrays and tables",
      "url": "https://buttondown.com/hillelwayne/archive/2000-words-about-arrays-and-tables/",
      "savedAt": "2025-07-30T19:04:31.428000+00:00",
      "description": "Arrays are functions that map number sequences to values, and they can have multiple dimensions like rows and columns. Tables are like arrays but hold mixed types in each row, so they combine struct and array features. This model helps explain why arrays can have many dimensions, but tables usually don't.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebh6wq3vtwpgzcfy3ftxgc",
      "title": "Why We Need to Know LR and Recursive Descent Parsing Techniques",
      "url": "https://tratt.net/laurie/blog/2023/why_we_need_to_know_lr_and_recursive_descent_parsing_techniques.html",
      "savedAt": "2025-07-30T19:04:19.095000+00:00",
      "description": "Recursive descent parsing is easy and flexible but can hide grammar ambiguities and bugs. LR parsing guarantees unambiguous grammars and automatic parser generation, making language syntax clearer. Learning both helps understand real languages and design better, easier-to-parse ones.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebh23qha4v6q5jrwr0r6tw",
      "title": "Writing memory efficient C structs",
      "url": "https://tomscheers.github.io/2025/07/29/writing-memory-efficient-structs-post.html",
      "savedAt": "2025-07-30T19:04:14.199000+00:00",
      "description": "C structs can use extra memory due to padding for alignment. Reordering fields and using smaller data types or bitfields can reduce struct size. Optimizing structs is useful for memory-limited programs but may reduce code readability.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebgvvpfq70rx6kk01cfa84",
      "title": "Writing an OS in Rust",
      "url": "https://os.phil-opp.com/",
      "savedAt": "2025-07-30T19:04:07.798000+00:00",
      "description": "This blog teaches how to build a small operating system using Rust. It covers key topics like kernel creation, memory management, and multitasking with clear tutorials. All code and resources are freely available for readers to follow along.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebcp5nrvvxbtcrwv3styfs",
      "title": "Typechecking Is Undecidable When 'Type' Is A Type",
      "url": "https://dspace.mit.edu/bitstream/handle/1721.1/149366/MIT-LCS-TR-458.pdf?sequence=6",
      "savedAt": "2025-07-30T19:01:50.901000+00:00",
      "description": null,
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebbh8mnxzyze55qjbpw8vy",
      "title": "Learning Basic Electronics By Building FireFlies",
      "url": "https://a64.in/posts/learning-basic-electronics-by-building-fireflies/",
      "savedAt": "2025-07-30T19:01:13.108000+00:00",
      "description": "The author learned basic electronics by building blinking LED circuits called \"fireflies\" that mimic real fireflies. They faced many challenges but used AI, trial and error, and creativity to improve their designs. This hands-on journey gave them joy, purpose, and a love for learning through making.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1ebb7p5grf9yrssa6ggy99b",
      "title": "Simple and fast Rust deriving using macro_rules",
      "url": "https://matx.com/research/rules_derive",
      "savedAt": "2025-07-30T19:01:03.301000+00:00",
      "description": "rules_derive is a Rust library that lets you create custom derive macros easily using macro_rules! instead of complex procedural macros. It simplifies handling all Rust type forms and generics, making derivers short, fast, and composable. This tool speeds up compile times and improves error messages, enabling more accessible and efficient trait derivation.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb9y45dhr71p4dppjmcawm",
      "title": "Learning Is Slower Than You Think — And That’s the Point",
      "url": "https://nisheethvishnoi.substack.com/p/learning-is-slower-than-you-think",
      "savedAt": "2025-07-30T19:00:20.741000+00:00",
      "description": "Learning takes time, effort, and human connection to truly transform us. Schools like Alpha focus on speed and efficiency but risk losing the deeper struggle that builds insight and meaning. Real education is about growing with others, facing challenges, and shaping who we become—not just mastering facts quickly.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb9jv0cc96ey4n274r9gyj",
      "title": "LLM Embeddings Explained: A Visual and Intuitive Guide",
      "url": "https://huggingface.co/spaces/hesamation/primer-llm-embedding",
      "savedAt": "2025-07-30T19:00:09.184000+00:00",
      "description": "This app explains how language models transform text into meaningful representations through embeddings. It provides a visual guide to help you understand traditional and modern language model tech...",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb9e072a76ycqfcn04pseg",
      "title": "consensus",
      "url": "https://graydon2.dreamwidth.org/319018.html",
      "savedAt": "2025-07-30T19:00:04.231000+00:00",
      "description": "Consensus algorithms help computers agree despite failures, delays, or lies. They use promises, voting majorities, and sharing knowledge about others to ensure decisions are reliable and consistent. These methods catch errors or dishonesty and keep the system safe even if some nodes fail or act badly.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb94482pzfsd3v345ww94a",
      "title": "You’re probably using the wrong dictionary",
      "url": "https://jsomers.net/blog/dictionary",
      "savedAt": "2025-07-30T18:59:54.118000+00:00",
      "description": "Many modern dictionaries give short, boring definitions that don’t capture the true meaning of words. The old Webster’s dictionary has richer, more vivid explanations that help you understand words better. Using the right dictionary can make learning words more interesting and meaningful.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb90fx3d1qkbacqq12ynd9",
      "title": "Atomic Habits Summary",
      "url": "https://jamesclear.com/atomic-habits-summary",
      "savedAt": "2025-07-30T18:59:50.396000+00:00",
      "description": "\"Atomic Habits\" by James Clear explains how small daily improvements can lead to significant long-term changes. The book emphasizes the importance of systems over goals and encourages building identity-based habits to create lasting change. It provides a simple four-step framework for developing good habits and breaking bad ones.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb8w7c6akzs3r1dqqq1yhc",
      "title": "Getting decent error reports in Bash when you're using 'set -e'",
      "url": "https://utcc.utoronto.ca/~cks/space/blog/programming/BashGoodSetEReports",
      "savedAt": "2025-07-30T18:59:46.028000+00:00",
      "description": "Using 'set -e' in Bash scripts stops the script on errors but doesn't give detailed error info. By adding a trap for the ERR signal with special variables, you can print the failing command, its exit status, and the line number. This method works well only in Bash, not in other shells like dash or the default /bin/sh on most systems.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb8pk8dcsde9s727f25vqd",
      "title": "Paul Dirac and the religion of mathematical beauty",
      "url": "https://www.youtube.com/watch?v=jPwo1XsKKXg",
      "savedAt": "2025-07-30T18:59:40.264000+00:00",
      "description": "Paul Dirac was a brilliant physicist who believed that the laws of physics are deeply connected to mathematical beauty. He made important discoveries, like predicting antimatter, by following elegant mathematical ideas. Later in life, Dirac became critical of some quantum theories but remained convinced that math reveals the true nature of the universe.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb8h696yr2r0reqqp1ykzc",
      "title": "Heredocs Can Make Your Bash Scripts Self-Documenting",
      "url": "https://holdtherobot.com/blog/heredocs-can-make-your-bash-scripts-self-documenting/",
      "savedAt": "2025-07-30T18:59:34.729000+00:00",
      "description": "Heredocs let you put markdown inside bash scripts to combine documentation and automation in one file. This helps keep information in sync and makes scripts self-explanatory. It is a simple way to write clearer, easier-to-use bash scripts without separate docs.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb89avd38qwn0ha8tk8yyw",
      "title": "Using fortune to reinforce habits",
      "url": "https://www.judy.co.uk/blog/using-fortune-to-reinforce-habits/",
      "savedAt": "2025-07-30T18:59:26.683000+00:00",
      "description": "The author used the fortune tool to remind themselves of new command-line tools by showing messages when opening a terminal. They created a custom file with helpful tips and set it to display automatically. This quick setup helped them build better habits without coding.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb807mkq4vbv83k52xn8wr",
      "title": "Trust Deterministic Execution to Scale & Simplify Your Systems • Frank Yu • YOW! 2023",
      "url": "https://www.youtube.com/watch?v=siEtKc6Sq2Y",
      "savedAt": "2025-07-30T18:59:17.364000+00:00",
      "description": "Deterministic execution helps make complex systems simpler and more reliable by processing inputs in a fixed order. This approach is useful for handling large volumes of data, such as in trading exchanges, ensuring correctness and easy replication. It also allows easier debugging and testing by making system behavior predictable.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1eb7fy7fydgzqywnxber6tf",
      "title": "Verified Assembly 2: Memory, RISC-V, Cuts for Invariants, and Ghost Code",
      "url": "https://www.philipzucker.com/asm_verify2/",
      "savedAt": "2025-07-30T18:59:00.679000+00:00",
      "description": "This work presents a flexible assembly verification system using symbolic execution with support for invariants called \"cuts\" and ghost code. It works with multiple architectures like x86-64 and RISC-V by leveraging pcode for instruction semantics. The system aims to help both manual assembly developers and compiler writers verify code correctness effectively.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k1bfj9vn6m5y3tczav7j9pb8",
      "title": "Advanced Rust macros with derive-deftly",
      "url": "https://diziet.pages.torproject.net/rust-derive-deftly/latest/guide/",
      "savedAt": "2025-07-29T16:17:05.909000+00:00",
      "description": "derive-deftly is a Rust package that helps you create custom derive macros easily without writing low-level code. It lets you generate code like accessor functions automatically, saving time and reducing errors. While powerful, it works only on structs, enums, and unions and cannot modify the original type.",
      "tags": [
        "for-later",
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k16x2xhe4e3sv3sf3d5z2dwy",
      "title": "The Intel 4004 Microprocessor and the Silicon Gate Technology",
      "url": "http://www.intel4004.com/btstrp.htm",
      "savedAt": "2025-07-27T21:37:09.678000+00:00",
      "description": "Federico Faggin invented the bootstrap load, a circuit that boosts output voltage to full supply levels. This technique improved speed and power efficiency in the Intel 4004 microprocessor. He achieved this without extra manufacturing steps by using a deep understanding of device physics.",
      "tags": [
        "hardware",
        "for-later"
      ]
    },
    {
      "id": "01k15ymmw9585h43tskk73vwcv",
      "title": "Development shells with Nix: four quick examples",
      "url": "https://michael.stapelberg.ch/posts/2025-07-27-dev-shells-with-nix-4-quick-examples/",
      "savedAt": "2025-07-27T12:45:04.776000+00:00",
      "description": "Nix lets you create development environments with exact package versions on any Linux system, not just NixOS. You can use simple commands like nix-shell or more advanced setups like flake.nix for reproducibility. Flakes also allow making system-independent shells, ensuring the same environment across different machines.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h3ved1vxgbxn0f3d2facf",
      "title": "RealtimeKit and CPU Scheduling",
      "url": "https://venam.net/blog/unix/2025/03/24/rtkit.html",
      "savedAt": "2025-07-27T08:48:42.957000+00:00",
      "description": "Take a look at your process tree, it's likely that you might notice a new service: rtkit-daemon, the RealtimeKit Daemon. It seems nobody on the internet is talking about it, so let's explain what it's about in this article.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h3hzyvcxxh0zak2bd0psf",
      "title": "How often is the query plan optimal?",
      "url": "https://vondra.me/posts/how-often-is-the-query-plan-optimal/",
      "savedAt": "2025-07-27T08:48:33.278000+00:00",
      "description": "Query optimizers often pick plans that are not the fastest because they rely on imperfect cost and selectivity estimates. Different data patterns and hardware setups affect which scan method is best, but the planner can still make mistakes. Despite its flaws, cost-based planning remains the best way to choose query plans, though improvements are needed for more accuracy.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h3dhdf2r1q1m5rvc640f5",
      "title": "Tail Latency Might Matter More Than You Think",
      "url": "https://brooker.co.za/blog/2021/04/19/latency.html",
      "savedAt": "2025-07-27T08:48:28.717000+00:00",
      "description": "My name is Marc Brooker. I've been writing code, reading code, and living vicariously through computers for as long as I can remember.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h38qx7hmnv27kzbv0mcmv",
      "title": "Why English doesn’t use accents",
      "url": "https://www.deadlanguagesociety.com/p/why-english-doesnt-use-accents",
      "savedAt": "2025-07-27T08:48:23.805000+00:00",
      "description": "And why French is full of them",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h2re8jnr7t2fdvgje4m9b",
      "title": "Programming Extensible Data Types in Rust with CGP - Part 2: Modular Interpreters and Extensible Visitors",
      "url": "https://contextgeneric.dev/blog/extensible-datatypes-part-2/",
      "savedAt": "2025-07-27T08:48:07.112000+00:00",
      "description": "This article shows how to build modular interpreters in Rust using extensible variants and CGP. It explains how to write reusable evaluation and transformation logic for different math expressions. The approach makes adding new operations easy, keeping code flexible and safe.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h2dhs4as65c2nfevpph99",
      "title": "Hacking Coroutines into C",
      "url": "https://wiomoc.de/misc/posts/hacking_coroutines_into_c.html",
      "savedAt": "2025-07-27T08:47:55.961000+00:00",
      "description": "The article explains how C coroutines are created using macros that convert code into state machines for pausing and resuming execution without a call stack. It shows examples like button press recording and non-blocking delays that use saved states and a simple scheduler to run tasks cooperatively. This approach enables writing readable, sequential logic in single-threaded environments with coroutine cancellation and condition variables support.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h1shxf4yyk57tkp4rc01t",
      "title": "We Made Postgres Writes Faster, but it Broke Replication",
      "url": "https://www.paradedb.com/blog/lsm_trees_in_postgres",
      "savedAt": "2025-07-27T08:47:35.485000+00:00",
      "description": "Zero-ETL search and analytics for Postgres",
      "tags": [
        "for-later",
        "cs/database"
      ]
    },
    {
      "id": "01k15h1h191mt7cc325qfgcnb8",
      "title": "Can we test it? Yes, we can! - Mitchell Hashimoto",
      "url": "https://www.youtube.com/watch?v=MqC3tudPH6w",
      "savedAt": "2025-07-27T08:47:26.761000+00:00",
      "description": "As the co-founder of HashiCorp, Mitchell has been instrumental in the development of tools that many of us use daily, like Vagrant, Terraform, Vault, and more. He also helped shape the initial testing strategies for them, gaining hard-won insights into testing complex software along the way.\n\nAt BugBash, where everyone is a testing nerd (or at least wants to be), most of us have come across that one piece of code that cannot be tested. What do you do when the code you so eagerly want to test is not testable?\n\nWhile working on his latest passion project, Ghostty, Mitchell came across this challenge again and again.\n\nFor instance, Ghostty is a GPU rendered terminal emulator that demands GPU testing. In the age of AI, it’s surprising that we don’t yet have a broadly accepted solution for this – at least, not one that’s cracked the first page of google.\n\nSo Mitchell’s talk is his (current best) answer to a deceptively simple question, “How do you make something testable?”\n\nExpanding the boundaries of testing drives the work at Antithesis too. So, the good news/bad news is, there are fewer and fewer reasons to leave any code untested.\n\nhttps://antithesis.com/blog/2025/bugbash_2025/mitchell_hashimoto/",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h188jnznz1ytx33hcfj4t",
      "title": "Tree-Structured Concurrency II: Replacing Background Tasks With Actors — 2025-07-02",
      "url": "https://blog.yoshuawuyts.com/replacing-tasks-with-actors/",
      "savedAt": "2025-07-27T08:47:17.778000+00:00",
      "description": "(Tree-)Structured Concurrency is neat because it greatly simplifies concurrent programs. It greatly reduces, if not outright eliminates the possibility of logical races due to concurrency issues.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h0zv1rwmfvyxf15pyycwc",
      "title": "Sort By Controversial",
      "url": "https://slatestarcodex.com/2018/10/30/sort-by-controversial/",
      "savedAt": "2025-07-27T08:47:09.153000+00:00",
      "description": "Shiri created a program called Scissor to find controversial statements, but it caused big fights among her team. The program revealed hidden conflicts and led to two people being fired for causing trouble. The author warns that such statements can manipulate people and cause serious problems if not handled carefully.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h0q7v3k8m5ze5v5ejh4sk",
      "title": "Gödel's beavers, or the limits of knowledge",
      "url": "https://lcamtuf.substack.com/p/monkeys-typewriters-and-busy-beavers",
      "savedAt": "2025-07-27T08:47:00.346000+00:00",
      "description": "Can you examine infinitely many integers in finite time? Are there numbers you're not allowed to know? Can a monkey beat a beaver in a fair fight?",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15h08wb38anhvaesp1gds6g",
      "title": "Efficiency of a sparse hash table",
      "url": "https://ashutoshpg.blogspot.com/2025/07/efficiency-of-sparse-hash-table.html",
      "savedAt": "2025-07-27T08:46:45.642000+00:00",
      "description": "Choosing the right initial size for a hash table can affect its speed, especially if it fits well in the CPU cache. Tests showed that making the hash table much bigger than needed slows it down in clear steps due to cache effects. Still, small size differences usually do not cause noticeable performance changes in real use.",
      "tags": [
        "for-later",
        "cs/database"
      ]
    },
    {
      "id": "01k15gzz5y5jskj8v39a5g0rvy",
      "title": "Austerity - Wikipedia",
      "url": "https://en.wikipedia.org/wiki/Austerity",
      "savedAt": "2025-07-27T08:46:35.709000+00:00",
      "description": "In economic policy, austerity is a set of political-economic policies that aim to reduce government budget deficits through spending cuts, tax increases, or a combination of both.",
      "tags": [
        "economy",
        "for-later"
      ]
    },
    {
      "id": "01k15gzmyd9h8rx46btm636b7r",
      "title": "How does a screen work?",
      "url": "https://www.makingsoftware.com/chapters/how-a-screen-works",
      "savedAt": "2025-07-27T08:46:25.229000+00:00",
      "description": "From electron guns to tiny electric crystals - digital displays have always been the unsung hero of computing.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gyf2j2cjbhs2xvfh9pgw5",
      "title": "Let's Learn x86-64 Assembly! Part 0 - Setup and First Steps",
      "url": "https://gpfault.net/posts/asm-tut-0.txt.html",
      "savedAt": "2025-07-27T08:45:46.450000+00:00",
      "description": "This document introduces x86-64 assembly, focusing on setup and initial steps. It explains the outdated teaching methods in universities, the difference between assembly language and machine code, the role of assemblers and debuggers, as well as the importance of registers. The text covers memory addressing, the illusion of memory layout in 64-bit Windows, and the relationship between virtual and physical memory addresses. Additionally, it delves into the basics of writing assembly programs, analyzing code, and understanding the PE format and DLL imports for calling WinAPI functions.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gxrw78bgx0m3nv8v4y4gw",
      "title": "Row Polymorphic Programming",
      "url": "https://www.stranger.systems/posts/by-slug/row-polymorphic-programming.html",
      "savedAt": "2025-07-27T08:45:23.719000+00:00",
      "description": "Row polymorphism lets programmers write flexible code that works with records having different sets of fields. It helps handle messy data by allowing types to be based on the actual labels and types of fields in a record. This approach makes it easier to write generic functions without complex macros or manual type definitions.",
      "tags": []
    },
    {
      "id": "01k15gwwwbex4c9ty2c1y4d55m",
      "title": "Strategies for very fast Lexers",
      "url": "https://xnacly.me/posts/2025/fast-lexer-strategies/",
      "savedAt": "2025-07-27T08:44:55.051000+00:00",
      "description": "Making compilation pipelines fast, starting with the tokenizer",
      "tags": [
        "for-later",
        "cs/parsers"
      ]
    },
    {
      "id": "01k15gwhhg0fbkn7ctxrw50bm6",
      "title": "Human Stigmergy",
      "url": "https://aethermug.com/posts/human-stigmergy",
      "savedAt": "2025-07-27T08:44:43.440000+00:00",
      "description": "Termites and ants build huge, complex homes without plans by leaving chemical marks for others to follow. This shows that memory can be stored outside the brain, in the environment itself. People do this too by placing objects as reminders, helping them remember tasks without needing to think hard.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gtz5jyge9rxjwqnjd1f0c",
      "title": "Feynman: Knowing versus Understanding",
      "url": "https://www.youtube.com/watch?v=NM-zWTU7X-k",
      "savedAt": "2025-07-27T08:43:51.858000+00:00",
      "description": "Richard Feynman on the differences of merely knowing how to reason mathematically and understanding how and why things are physically analyzed in the way they are.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gtq27azra4bh2ebsbzcdp",
      "title": "Turing Machines: How Computers Evolved From People",
      "url": "https://www.youtube.com/watch?v=AM3zNOrgj2A",
      "savedAt": "2025-07-27T08:43:43.559000+00:00",
      "description": "Go to https://ground.news/landingV8/purplemindcs?utm_source=purplemindcs&utm_medium=youtube&utm_campaign=july31 for a better way to stay informed. Subscribe for 40% off unlimited access to world-wide coverage through my link.\n\nSupport me on Patreon! https://www.patreon.com/PurpleMindCS \nIf you'd like to aid the success of this channel, this is the best way to do it! Every contribution is sincerely, greatly, appreciated.\n\nThis video is a reupload with a couple of tweaks (mostly to the very beginning).\nIf you watched the previous version, thank you for your support! This updated version offers a better viewing experience.\n\n\nWhat is the definition of a computer? If you search this question on the internet, most answers will reference electronics or various data storage/processing qualities. But the way we model the idea of a “computer” in computer science is completely different -- it's a genius (but seemingly-strange) theoretical device called a Turing Machine, named after Alan Turing who designed it in 1936. What’s weird about Turing machines is that at first glance, they seem entirely unrelated to our usual concept of a computer. They’re extremely rudimentary, consisting of only three basic components and governed by a simple set of rules. And yet, amazingly, Turing machines can actually carry out any algorithm that a modern computer can! The invention of the Turing Machine eventually settled a decades-long debate to define what computation is, and they gave us an entirely new way of understanding not just machines, but even the theoretical limits of our own brains.\n\nIn this video, we break down how a Turing machine works, use it to solve a couple of real algorithmic problems, and finally answer the question of why the simple device became (and still remains) the foundation of computer science.\n\n\nTuring’s paper: https://www.cs.virginia.edu/~robins/Turing_Paper_1936.pdf\n\nBrittle Rille - Reunited by Kevin MacLeod is licensed under a Creative Commons Attribution 4.0...",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gt51z2d6rhrvp3gk6w09y",
      "title": "Making the assumption rule only apply to atoms",
      "url": "https://unstableontology.com/",
      "savedAt": "2025-07-27T08:43:25.119000+00:00",
      "description": "by Jessica Taylor",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gs9hq7hc3zgxd5ggfk5je",
      "title": "Compiler bootstrapping in Nixpkgs",
      "url": "https://blog.obsidian.systems/compiler-bootstrapping-in-nixpkgs/",
      "savedAt": "2025-07-27T08:42:56.951000+00:00",
      "description": "Nixpkgs faced challenges with cross compilation due to complex bootstrapping and multiple compiler builds. Over time, improvements simplified this by unifying toolchains and removing redundant cross packages. The goal is to treat compilers and libraries separately for cleaner, more efficient builds, benefiting current and future languages.",
      "tags": [
        "for-later",
        "tools/nix"
      ]
    },
    {
      "id": "01k15grn4gdtgga24ym6shgkhg",
      "title": "Adding lookbehinds to rust-lang/regex",
      "url": "https://systemf.epfl.ch/blog/rust-regex-lookbehinds/",
      "savedAt": "2025-07-27T08:42:36.047000+00:00",
      "description": "The Rust regex engine now supports unbounded captureless lookbehinds, allowing patterns to check what precedes a match without including it. This feature is more flexible than many other engines, but it does not allow capture groups inside lookbehinds. The implementation improves Rust's regex capabilities and is available in the official repository.",
      "tags": [
        "for-later",
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k15grccvt0g0d7cymt021zzx",
      "title": "NixOS Secrets Management",
      "url": "https://unmovedcentre.com/posts/secrets-management/",
      "savedAt": "2025-07-27T08:42:27.099000+00:00",
      "description": "This is the home of EmergentMind and serves as a central staging area for my creative and professional endeavors.",
      "tags": []
    },
    {
      "id": "01k15gr2g5gjcqzn2fxnn9b57p",
      "title": "Lessons From Creating My First Text Adventure",
      "url": "https://entropicthoughts.com/lessons-from-creating-first-text-adventure",
      "savedAt": "2025-07-27T08:42:16.965000+00:00",
      "description": "Since ParserComp voting has opened, the game is now public, and you can play it in your browser – even on your phone.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gqq181bjgvfttr8apjgre",
      "title": "Programming Extensible Data Types in Rust with CGP - Part 3: Implementing Extensible Records",
      "url": "https://contextgeneric.dev/blog/extensible-datatypes-part-3/",
      "savedAt": "2025-07-27T08:42:05.223000+00:00",
      "description": "CGP uses traits and partial records to build and merge Rust structs flexibly. It defines traits like BuildField and FinalizeBuild to handle fields incrementally and finalize structs. This design supports extensible records and reusable builder patterns in Rust code.",
      "tags": [
        "for-later",
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k15gq90ma2mzx04ccekf94mp",
      "title": "Reverse proxy deep dive",
      "url": "https://medium.com/@mitendra_mahto/cross-posted-from-https-startwithawhy-com-reverseproxy-2024-01-15-reverseproxy-deep-dive-html-c3443dc3e0e5",
      "savedAt": "2025-07-27T08:41:50.868000+00:00",
      "description": "This post was originally published on my personal blog.",
      "tags": [
        "for-later",
        "cs/networking"
      ]
    },
    {
      "id": "01k15gpyyb312p12mvvt7kzt5p",
      "title": "constrained languages are easier to optimize",
      "url": "https://jyn.dev/constrained-languages-are-easier-to-optimize/",
      "savedAt": "2025-07-27T08:41:40.555000+00:00",
      "description": "exposing raw pointers make the optimizer’s job horribly hard. high level languages can constrain your program, making more optimizations sound.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gpez4q9y6x2k15rqey5ab",
      "title": "A Smart Bear » Specificity: A weapon of mass effectiveness",
      "url": "https://longform.asmartbear.com/specificity/",
      "savedAt": "2025-07-27T08:41:24.196000+00:00",
      "description": "Want to write better? Swap generic words for specifics to make your text clear, powerful, engaging, and even funny.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gp834z80nkdnrphdb2ww3",
      "title": "you are in a box",
      "url": "https://jyn.dev/you-are-in-a-box/",
      "savedAt": "2025-07-27T08:41:17.156000+00:00",
      "description": "Programs and tools tend to grow too big because switching between them is hard, trapping users inside a \"box.\" Making tools work well together and lowering these switching costs can help us break free. But right now, most tools keep data locked inside, so we depend heavily on their creators.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gndk52mgwd89vs6s7eax1",
      "title": "RNA Is the Cell’s Emergency Alert System | Quanta Magazine",
      "url": "https://www.quantamagazine.org/rna-is-the-cells-emergency-alert-system-20250714/",
      "savedAt": "2025-07-27T08:40:50.021000+00:00",
      "description": "Cells detect DNA damage quickly through a molecular alarm triggered by mutated RNA and ribosome collisions. This alarm involves a protein called ZAK, which signals when ribosomes stall on damaged RNA, prompting the cell to repair or self-destruct. This rapid response helps prevent harmful effects like cancer or tissue damage.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gmpwe9693gg8ez3z0bnjm",
      "title": "Function Over Form: Why ‘Unbiological’ Neural Networks Are the Truest Simulation of the Brain #",
      "url": "https://dmf-archive.github.io/posts/form-follows-function/",
      "savedAt": "2025-07-27T08:40:26.766000+00:00",
      "description": "Modern AI models, like Transformers, simulate the brain’s core functions by integrating information globally and operating with dynamic sparsity. Unlike biological neuron imitation, these models focus on functional similarity, using backpropagation as a process linked to consciousness and learning. This approach creates efficient, adaptive cognitive engines that surpass traditional biological limits.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gkz2fde6k0xyzvry92vft",
      "title": "placing functions — 2025-07-08",
      "url": "https://blog.yoshuawuyts.com/placing-functions/#prior-art-in-rust",
      "savedAt": "2025-07-27T08:40:02.383000+00:00",
      "description": "Placing functions let Rust construct types directly in their final memory location, avoiding extra copies. They keep function signatures the same, making them easy to add to existing code. This approach also supports nested construction and could improve how Rust handles lifetimes and pinning.",
      "tags": [
        "for-later",
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k15gjmxs5crv9mza2n84se5a",
      "title": "Computational Lambda-Calculus And Monads",
      "url": "https://www.cs.cmu.edu/~crary/819-f09/Moggi89.pdf",
      "savedAt": "2025-07-27T08:39:19.225000+00:00",
      "description": "This paper discusses a new approach to understanding program equivalence using computational lambda-calculus based on category theory and monads. It proposes a formal system that accurately captures the behavior of real programs, including aspects like non-termination and side-effects. The authors aim to create a sound and complete framework for reasoning about program semantics, extending traditional methods to handle more complex languages.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gjb56n7d9vhzk5asxhtb3",
      "title": "Program Synthesis: The λ in the Machine",
      "url": "https://www.stephendiehl.com/posts/program_synthesis/",
      "savedAt": "2025-07-27T08:39:09.222000+00:00",
      "description": "Current AI code generation mainly copies patterns from existing code and may lack true reasoning. Program synthesis aims to build correct programs by combining formal logic and types, offering a more precise and reliable approach. Although challenging and costly, future tools might blend learning and formal methods to create self-verifying, optimized software.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gj0f838wtkzjdvea5a823",
      "title": "The Future of Maths May Be Deeply Weird",
      "url": "https://www.stephendiehl.com/posts/future_math_weird/",
      "savedAt": "2025-07-27T08:38:58.280000+00:00",
      "description": "Mathematics is becoming more social and computer-driven, with tools that can check and create proofs automatically. Future math learning might involve digital textbooks and AI tutors that help students understand proofs step-by-step. While machines may solve complex problems beyond human grasp, math will still be about insight and sharing understanding among people.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15ghn8kpsa395rqnqq6r46j",
      "title": "My Ultimate Self-hosting Setup",
      "url": "https://codecaptured.com/blog/my-ultimate-self-hosting-setup/",
      "savedAt": "2025-07-27T08:38:46.802000+00:00",
      "description": "The author built a self-hosting setup to keep control of their data and services using tools like Tailscale, Authelia, and NixOS. They focus on security, ease of use for family and friends, and avoiding single points of failure. Their setup includes VPN access, single sign-on, and careful management of physical and virtual servers.",
      "tags": [
        "homelab",
        "for-later",
        "infrastructure"
      ]
    },
    {
      "id": "01k15ghfwdq938rn1p73zjs9wr",
      "title": "To be a better programmer, write little proofs in your head",
      "url": "https://the-nerve-blog.ghost.io/to-be-a-better-programmer-write-little-proofs-in-your-head/",
      "savedAt": "2025-07-27T08:38:41.293000+00:00",
      "description": "To write better code, imagine little proofs in your head that show your code works as intended. Use clear rules like pre-conditions, post-conditions, and invariants to help you think clearly. Writing code that is easy to prove correct leads to higher quality and faster programming.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15ggfx4p1wa9z610d3vzkyt",
      "title": "On The Unusual Effectiveness Of Logic In Computer Science",
      "url": "https://www.cs.rice.edu/~vardi/papers/aaas99.jsl.pdf",
      "savedAt": "2025-07-27T08:38:08.548000+00:00",
      "description": null,
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gdpje97t1h41vfp4514sn",
      "title": "Casey Muratori – The Big OOPs: Anatomy of a Thirty-five-year Mistake – BSC 2025",
      "url": "https://www.youtube.com/watch?v=wo84LFzx5nI",
      "savedAt": "2025-07-27T08:36:37.069000+00:00",
      "description": "Casey Muratori explains that object-oriented programming (OOP) was originally meant to mirror real-world models directly in code. Over time, the focus shifted to complex compile-time hierarchies, which often made programming harder. He suggests that simpler, more flexible approaches work better and that history shows OOP ideas evolved through champions and practical use.",
      "tags": [
        "for-later"
      ]
    },
    {
      "id": "01k15gcsspd2k0y2barv43c8ex",
      "title": "Gödel’s Incompleteness Theorems",
      "url": "https://plato.stanford.edu/entries/goedel-incompleteness/sup1.html",
      "savedAt": "2025-07-27T08:36:07.606000+00:00",
      "description": "Gödel numbering assigns unique natural numbers to symbols, formulas, and proofs in a formal system using prime factorization. This method allows complex syntactical properties and operations to be expressed arithmetically and manipulated mechanically. It is a key tool for proving Gödel's incompleteness theorems by encoding and analyzing formal mathematical statements within arithmetic itself.",
      "tags": [
        "math",
        "for-later"
      ]
    },
    {
      "id": "01k15gch8hczh2gd2fb4m9rgr1",
      "title": "Deeper theories of program design",
      "url": "https://typesanitizer.com/blog/deeper-theories.html",
      "savedAt": "2025-07-27T08:35:58.865000+00:00",
      "description": "Windows prevents deleting files that are open, using lock-like rules to avoid conflicts. Unix lets files be deleted while open, acting more like a weak database transaction but causing confusing behaviors. Future filesystems might combine these ideas with built-in transactions for safer, clearer file handling.",
      "tags": []
    },
    {
      "id": "01k15gbzdx9pb66wgt59ew5nwt",
      "title": "Mario is (NP-) Hard",
      "url": "https://www.youtube.com/watch?v=unLPk4H1hto",
      "savedAt": "2025-07-27T08:35:40.605000+00:00",
      "description": "Deciding if Mario can reach the flag in any custom level is very hard, like solving tough math problems. This difficulty connects to a famous question in computer science called P vs NP. If someone finds a quick way to solve Mario's problem, it would change science and technology forever.",
      "tags": [
        "for-later",
        "cs/computation-theory"
      ]
    },
    {
      "id": "01k15gbeby2qgkxgs102t1r5am",
      "title": "What is a Transformer?",
      "url": "https://poloclub.github.io/transformer-explainer/",
      "savedAt": "2025-07-27T08:35:23.134000+00:00",
      "description": "Transformers are deep learning models that predict the next word in text by understanding context through attention mechanisms. They convert words into numerical embeddings, capture relationships between tokens using self-attention, and refine these representations with feed-forward layers. Finally, the model outputs probabilities for each possible next word to generate coherent text.",
      "tags": [
        "llm",
        "cs/ai",
        "for-later"
      ]
    },
    {
      "id": "01k15gb4vs0a4jfxwqnvabf9k0",
      "title": "LL and LR Parsing Demystified",
      "url": "https://blog.reverberate.org/2013/07/ll-and-lr-parsing-demystified.html",
      "savedAt": "2025-07-27T08:35:13.400000+00:00",
      "description": "The text explains LL and LR parsing as different ways to process input tokens and output parse tree traversals. LL parsers use pre-order traversal, while LR parsers use post-order traversal, each with its own advantages in handling grammars and parsing context. Understanding LL vs LR parsing helps in choosing the right parsing strategy for different grammars and parsing requirements.",
      "tags": [
        "for-later",
        "cs/compilers"
      ]
    },
    {
      "id": "01k15g789v414e85we0grb3sdn",
      "title": "Automating Away Claude's Bad Habits with Hooks",
      "url": "https://writeaheadblogg.ing/posts/claude-hooks-auto-fix-trailing-whitespace/",
      "savedAt": "2025-07-27T08:33:05.851000+00:00",
      "description": "Claude Code often leaves unwanted trailing whitespace when writing code. Using Hooks, users can run tools like RuboCop automatically to fix these issues after edits. Hooks help automate code cleanup but need careful security checks since they run with full user permissions.",
      "tags": [
        "llm",
        "for-later"
      ]
    },
    {
      "id": "01k15g6x28hhcxdav7d5nk12c1",
      "title": "Hardest Problem in Computer Science: Centering Things",
      "url": "https://tonsky.me/blog/centering/",
      "savedAt": "2025-07-27T08:32:54.343000+00:00",
      "description": "The text discusses the challenge of centering elements in web design and the common issues faced by developers and designers. It highlights problems with fonts, line height, icons, and offers solutions for better alignment to improve UI design. The author emphasizes the importance of paying attention to details for creating visually appealing user interfaces.",
      "tags": [
        "ui",
        "web",
        "for-later"
      ]
    },
    {
      "id": "01k15g4ps88wdrxkkwc2f6qfq0",
      "title": "A reckless introduction to Hindley-Milner type inference",
      "url": "https://reasonableapproximation.net/2019/05/05/hindley-milner.html",
      "savedAt": "2025-07-27T08:31:42.376000+00:00",
      "description": "Hindley-Milner (HM) is a type system that enables automatic type inference, making programs safer by preventing many runtime errors. Languages like Haskell and Elm build on HM but differ in features like strictness and support for monads. HM improves code legibility and correctness by linking types to program semantics without needing explicit type annotations.",
      "tags": [
        "for-later",
        "type-theory"
      ]
    },
    {
      "id": "01k15g468b9fm08jnn5tjnn4f8",
      "title": "Algorithms for Modern Processor Architectures",
      "url": "https://lemire.github.io/talks/2025/sea/sea2025.html#1",
      "savedAt": "2025-07-27T08:31:25.451000+00:00",
      "description": "This talk by Daniel Lemire covers algorithms designed for modern processors. It aims to improve software performance on current computer hardware. All related software is available on GitHub for easy access.",
      "tags": [
        "hardware",
        "for-later"
      ]
    },
    {
      "id": "01k15g3ep7c2p1s9p06dntwx8n",
      "title": "Cloudflare and the infinite sadness of migrations",
      "url": "https://surfingcomplexity.blog/2025/07/21/cloudflare-and-the-infinite-sadness-of-migrations/",
      "savedAt": "2025-07-27T08:31:01.319000+00:00",
      "description": "Cloudflare had a major outage because they used an old system that made risky global changes. Migrations, or moving from old to new systems, are hard and slow, which can cause reliability problems. Companies need to get better at doing migrations because running old and new systems together is also risky and complex.",
      "tags": [
        "for-later",
        "cs/networking"
      ]
    },
    {
      "id": "01k15fy1s48nyrpy7vs63js10h",
      "title": "How to draw lambda diagrams",
      "url": "https://risingentropy.com/how-to-draw-lambda-diagrams/",
      "savedAt": "2025-07-27T08:28:04.260000+00:00",
      "description": "Lambda diagrams are pictures that show how lambda expressions work using lines for variables and connections. You draw horizontal lines for variables and vertical lines to show how inputs connect to functions. These diagrams help visualize complex functions and beta reductions in lambda calculus clearly.",
      "tags": [
        "cs",
        "for-later"
      ]
    },
    {
      "id": "01k15frp1pvee8zb11wverx7gh",
      "title": "To The Programmer",
      "url": "https://blog.zdsmith.com/posts/combinatory-programming.html",
      "savedAt": "2025-07-27T08:25:08.405000+00:00",
      "description": "Combinators are functions that apply arguments to each other in specific ways. They help simplify code and make programming more efficient. Understanding and using common combinators can benefit programmers in creating concise and elegant programs.",
      "tags": [
        "cs",
        "for-later"
      ]
    },
    {
      "id": "01k15fr1c922gw22a1wve77ksz",
      "title": "Implementing a Functional Language with Graph Reduction",
      "url": "https://thma.github.io/posts/2021-12-27-Implementing-a-functional-language-with-Graph-Reduction.html",
      "savedAt": "2025-07-27T08:24:47.241000+00:00",
      "description": "This project implements a small functional language using graph reduction of combinators in Haskell. It translates lambda calculus expressions into combinators and represents them as graphs for efficient evaluation. The system supports recursion with the Y-combinator and plans to add parallelism and optimization.",
      "tags": [
        "for-later",
        "cs/pl-theory"
      ]
    },
    {
      "id": "01k15fqmy8s2cxh8hppyrtm41y",
      "title": "Monotonic and Wall Clock Time in the Go time package",
      "url": "https://victoriametrics.com/blog/go-time-monotonic-wall-clock/",
      "savedAt": "2025-07-27T08:24:34.504000+00:00",
      "description": "Operating systems expose a wall clock that can leap or slew with NTP and a monotonic clock that never runs backward. In Go, only time.Now (might) carries both readings, while values from time.Parse, time.Date, etc., are wall-clock-only—so naïve equality checks or time.Since on those can mislead when the system clock shifts.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k15fp891xpgn63hw0thac9hq",
      "title": "The Future is NOT Self-Hosted",
      "url": "https://www.drewlyton.com/story/the-future-is-not-self-hosted/",
      "savedAt": "2025-07-27T08:23:48.769000+00:00",
      "description": "Many people try self-hosting to control their digital data, but it is hard and not practical for most. Instead of owning our own small clouds, we should build community-owned, shared internet services. True freedom online comes from working together, not isolating ourselves.",
      "tags": [
        "for-later",
        "infrastructure"
      ]
    },
    {
      "id": "01k15fnj97ayxx5gx8548tq6yp",
      "title": "Rust running on every GPU",
      "url": "https://rust-gpu.github.io/blog/2025/07/25/rust-on-every-gpu/",
      "savedAt": "2025-07-27T08:23:26.247000+00:00",
      "description": "A new Rust project lets the same Rust code run on all major GPUs, including NVIDIA, AMD, Apple, and browsers. It compiles Rust directly to GPU languages like SPIR-V and CUDA, simplifying GPU programming and testing. Although still rough, this work shows cross-platform GPU computing with Rust is now possible.",
      "tags": [
        "for-later",
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01k15fn2qj170060t63axdw86h",
      "title": "It’s time for modern CSS to kill the SPA",
      "url": "https://www.jonoalderson.com/conjecture/its-time-for-modern-css-to-kill-the-spa/",
      "savedAt": "2025-07-27T08:23:10.322000+00:00",
      "description": "Modern CSS features like View Transitions let browsers handle smooth page navigation without heavy JavaScript or SPAs. Building websites as real pages with clean HTML and CSS is faster, simpler, and better for users. SPAs are now outdated solutions causing unnecessary complexity and poor performance.",
      "tags": [
        "web"
      ]
    },
    {
      "id": "01k15fke0j66pfm74kqq4dczba",
      "title": "Guia para implementar regras de especulação em sites mais complexos bookmark_borderbookmark Mantenha tudo organizado com as coleções Salve e categorize o conteúdo com base nas suas preferências.",
      "url": "https://developer.chrome.com/docs/web-platform/implementing-speculation-rules?hl=pt-br",
      "savedAt": "2025-07-27T08:22:16.337000+00:00",
      "description": "Antes de usar regras de especulação, é importante escolher como implementá-las e avaliar os custos para o usuário. Regras podem ser aplicadas de formas diferentes, como no HTML, JavaScript ou cabeçalhos HTTP, com vantagens e desafios. É fundamental prever quais páginas carregar antecipadamente para melhorar a experiência sem sobrecarregar o sistema.",
      "tags": [
        "web"
      ]
    },
    {
      "id": "01k15ffnxy70fyfdngxmptgeaj",
      "title": "Formal specs as sets of behaviors",
      "url": "https://surfingcomplexity.blog/2025/07/26/formal-specs-as-sets-of-behaviors/",
      "savedAt": "2025-07-27T08:20:13.374000+00:00",
      "description": "A formal specification defines a system by describing all correct behaviors as a set. Unlike a program, it doesn't list instructions but specifies which behaviors are allowed. This helps check if a behavior is correct by seeing if it belongs to the specification's set.",
      "tags": [
        "for-later",
        "math/formal-methods"
      ]
    },
    {
      "id": "01k0tx6wjjtx79wrh34g5pngye",
      "title": "technicalities: \"not rocket science\" (the story of monotone and bors)",
      "url": "https://graydon2.dreamwidth.org/1597.html",
      "savedAt": "2025-07-23T05:48:26.578000+00:00",
      "description": "The author created a tool called bors to ensure code is only merged if all tests pass, keeping the main codebase stable. This follows the simple rule of automatically maintaining a repository that never breaks. Despite being easy in theory, many projects don't use this method, so bors helps enforce it effectively.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "01k0twrpm5e9ze0b5gq7k4dny6",
      "title": "Mathematics for Computer Science",
      "url": "https://ocw.mit.edu/courses/6-1200j-mathematics-for-computer-science-spring-2024/video_galleries/lecture-videos/",
      "savedAt": "2025-07-23T05:40:41.733000+00:00",
      "description": "This course from MIT teaches math concepts for computer science. It covers topics like proofs, algorithms, probability, and cryptography. The materials include videos, notes, and problem sets for undergraduate students.",
      "tags": [
        "cs",
        "math"
      ]
    },
    {
      "id": "01k0q3pdjn966amgty0v07yydh",
      "title": "Migrating my NAS from CoreOS/Flatcar Linux to NixOS",
      "url": "https://michael.stapelberg.ch/posts/2025-07-13-nixos-nas-network-storage-config/",
      "savedAt": "2025-07-21T18:24:49.237000+00:00",
      "description": "The author explains how they moved their NAS from CoreOS/Flatcar Linux to NixOS, simplifying system management. They first used Docker on NixOS, then switched to native NixOS modules for better integration. The author recommends NixOS for declarative, automated system configuration and plans to convert more devices.",
      "tags": [
        "homelab",
        "tools/nix"
      ]
    },
    {
      "id": "01k0pnefsx9grp038rt5xjapeh",
      "title": "What part of Hindley-Milner do you not understand?",
      "url": "https://stackoverflow.com/questions/12532552/what-part-of-hindley-milner-do-you-not-understand",
      "savedAt": "2025-07-21T14:15:49.309000+00:00",
      "description": "The author finds the Hindley-Milner notation confusing and hard to understand. They recognize some symbols but not many, like \"⊢\" or the vinculum. They ask for guidance on where to start learning about these symbols.",
      "tags": [
        "for-later",
        "type-theory"
      ]
    },
    {
      "id": "01k0mejqh66je8bzcf548pf313",
      "title": "Reflections on OpenAI",
      "url": "https://calv.info/openai-reflections",
      "savedAt": "2025-07-20T17:37:19.398000+00:00",
      "description": "The author recently left OpenAI and shares their experience of its fast growth and unique culture. OpenAI is very ambitious, secretive, and focused on practical AI risks while aiming to build AGI. Launching Codex was intense but rewarding, and the author sees OpenAI as a key player in the race for AGI.",
      "tags": [
        "business",
        "engineering"
      ]
    },
    {
      "id": "01k0j93pvb5ar1je52h0fxkvv3",
      "title": "Programming Language Theory has a public relations problem",
      "url": "https://happyfellow.bearblog.dev/programming-language-theory-has-a-public-relations-problem/",
      "savedAt": "2025-07-19T21:23:15.435000+00:00",
      "description": "Programming Language Theory (PLT) is a beautiful but very hard field that many people find confusing and impractical. Its problems include complex ideas, unclear applications, and heavy use of abstract methods that make learning difficult. The author wishes for clearer teaching and honesty about PLT’s challenges and beauty to help more people appreciate it.",
      "tags": [
        "cs/pl-theory"
      ]
    },
    {
      "id": "01k0j8stfrk3ywbrtevmb9ze12",
      "title": "Basic facts about GPUs",
      "url": "https://damek.github.io/random/basic-facts-about-gpus/",
      "savedAt": "2025-07-19T21:17:51.479000+00:00",
      "description": "GPUs run many threads organized in blocks and warps, sharing fast on-chip memory to speed up computation. To boost performance, threads cooperate by loading data tiles into shared memory, reducing slow global memory access. Efficient GPU kernels balance memory use and compute power to avoid stalls and maximize throughput.",
      "tags": [
        "cs",
        "for-later",
        "hardware/gpu"
      ]
    },
    {
      "id": "01k0j8nxf2vgkb6d9jbrvv3fcd",
      "title": "NULLBITMAPGPT",
      "url": "https://buttondown.com/jaffray/archive/nullbitmapgpt/",
      "savedAt": "2025-07-19T21:15:43.457000+00:00",
      "description": "The author uses a database approach to build a Markov Chain that predicts the next word based on previous words in past emails. They show how to extract word pairs, count their frequencies, and generate new text using SQL queries. This method is simple, scalable, and demonstrates the power of thinking with databases.",
      "tags": [
        "llm",
        "cs/database"
      ]
    },
    {
      "id": "01k0hahtyb9kkkmseap0x7np06",
      "title": "Why your website should be under 14kB in size",
      "url": "https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/",
      "savedAt": "2025-07-19T12:29:12.523000+00:00",
      "description": "Keeping your website under 14kB can significantly improve loading speed, potentially saving users up to 612ms compared to larger pages. This is due to the TCP slow start algorithm, which limits the amount of data sent initially to avoid packet loss. A smaller website size helps ensure critical content loads quickly, enhancing user experience.",
      "tags": [
        "web",
        "cs/networking"
      ]
    },
    {
      "id": "01k0fdy442hesk5zb4p88xe737",
      "title": "Store tags after payloads",
      "url": "https://www.scattered-thoughts.net/writing/store-tags-after-payloads/",
      "savedAt": "2025-07-18T18:49:52.002000+00:00",
      "description": "Storing the tag after the payload in sum types can save a lot of memory by reducing wasted space due to alignment requirements. Most languages put the tag before the payload, causing larger struct sizes, but Swift uses the reversed order to optimize size. This layout trick helps nested sum types use less space without hurting performance.",
      "tags": [
        "cs/compilers"
      ]
    },
    {
      "id": "01k0fbntc7nemrx32mh1562gg1",
      "title": "Maybe writing speed actually is a bottleneck for programming",
      "url": "https://buttondown.com/hillelwayne/archive/maybe-writing-speed-actually-is-a-bottleneck-for/",
      "savedAt": "2025-07-18T18:10:22.726000+00:00",
      "description": "The author argues that writing code faster could greatly boost programmer productivity. Faster writing enables more experimentation, tooling, and better coding practices. Even small speed gains might help, despite reading and thinking also being important.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "01k0ctg5j9a5ys7dn3q81pnnxe",
      "title": "Caching is an Abstraction, not an Optimization",
      "url": "https://buttondown.com/jaffray/archive/caching-is-an-abstraction-not-an-optimization/",
      "savedAt": "2025-07-17T18:31:42.921000+00:00",
      "description": "Caching is not just about making software faster but about simplifying how data is managed across storage layers. It acts as an abstraction that hides complexity and allows programs to work with different storage types more cleanly. Although caching relies on heuristics and can have downsides, it remains a powerful tool that only fails when misused.",
      "tags": [
        "cs/system-design"
      ]
    },
    {
      "id": "01k0cre6p635j6rw2n2qfz2n2v",
      "title": "Zig's New Async I/O",
      "url": "https://kristoff.it/blog/zig-new-async-io/",
      "savedAt": "2025-07-17T17:55:41.382000+00:00",
      "description": "Zig's new async I/O lets the caller decide how input/output works, making code more flexible and reusable. It supports different execution models, from blocking to async, without forcing concurrency. This design helps programs run efficiently by using non-blocking system calls and enabling parallelism when possible.",
      "tags": [
        "cs/programming-languages/zig"
      ]
    },
    {
      "id": "01k0cp8re6wek29hy601nw243j",
      "title": "Working through ‘Writing A C Compiler’",
      "url": "https://jollygoodsw.wordpress.com/2025/03/13/working-through-writing-a-c-compiler/",
      "savedAt": "2025-07-17T17:17:45.797000+00:00",
      "description": "The author is working through the book *Writing a C Compiler* to build a real C compiler step by step. The book includes a helpful test suite and clear chapters that add features gradually. The author plans to blog about their progress and finds the book very valuable.",
      "tags": [
        "cs/compilers"
      ]
    },
    {
      "id": "01k0cngx6rq4zvc05pjavj641p",
      "title": "Type Theory in Computer Science, Linguistics, Logic",
      "url": "https://www.youtube.com/watch?v=TrYosPPCQAY",
      "savedAt": "2025-07-17T17:04:44.248000+00:00",
      "description": "Type theory is a system that organizes different kinds of things called types to make logic and mathematics clearer. It helps define how sentences and predicates work by assigning types to them, like truth values or functions. This theory is important in computer science, linguistics, and philosophy for understanding language and logic precisely.",
      "tags": [
        "math",
        "philosophy",
        "type-theory"
      ]
    },
    {
      "id": "01k0cn3hy6gtv6tjzpnxxmfx95",
      "title": "How Long Contexts Fail",
      "url": "https://www.dbreunig.com/2025/06/22/how-contexts-fail-and-how-to-fix-them.html",
      "savedAt": "2025-07-17T16:57:26.724000+00:00",
      "description": "Very long contexts in AI models can cause problems like repeating mistakes, getting distracted, and confusing information. These issues make agents perform worse even with bigger context windows. To succeed, agents need careful management of what information they use, not just more data.",
      "tags": [
        "llm"
      ]
    },
    {
      "id": "01k0cmqmmmwy5z4jvyck84grqh",
      "title": "How to Fix Your Context",
      "url": "https://www.dbreunig.com/2025/06/26/how-to-fix-your-context.html",
      "savedAt": "2025-07-17T16:50:56.276000+00:00",
      "description": "Long contexts in AI can cause errors like confusion and distraction. To fix this, break tasks into smaller parts, use multiple agents, and prune unnecessary information. Managing context well improves accuracy and efficiency in AI responses.",
      "tags": [
        "llm"
      ]
    },
    {
      "id": "01k0b7dyw1n73c6ey4j5y0tat5",
      "title": "The sound of inevitability",
      "url": "https://tomrenner.com/posts/llm-inevitabilism/",
      "savedAt": "2025-07-17T03:39:13.153000+00:00",
      "description": "Inevitabilism is the belief that certain futures, like AI taking over, cannot be avoided. Big tech leaders use this idea to push people to accept and adapt to AI as if it’s unstoppable. But we still have a choice about how to shape the future, and we should fight for the future we want.",
      "tags": [
        "philosophy"
      ]
    },
    {
      "id": "01k0akyw532zqjkyzdpqv0vbjh",
      "title": "A distributed systems reliability glossary",
      "url": "https://antithesis.com/resources/reliability_glossary/",
      "savedAt": "2025-07-16T21:58:55.907000+00:00",
      "description": "Distributed systems use different consistency models to manage how data is read and written across multiple processes. Some models prioritize availability and allow more anomalies, while others enforce strict order and correctness but require more coordination. Understanding these models helps design systems that balance reliability, performance, and consistency.",
      "tags": [
        "favorites",
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01k04nyk100b8j5php64jkskr8",
      "title": "How to bring data centre-like connectivity to your home with IPTTTH",
      "url": "https://www.daryllswer.com/how-to-bring-data-centre-like-connectivity-to-your-home-with-ipttth/",
      "savedAt": "2025-07-14T14:38:17.120000+00:00",
      "description": "The author describes setting up enterprise-level IP transit directly to their home in India using MPLS, bypassing usual ISPs. This setup is very expensive and complex, requiring coordination with multiple providers and handling technical issues. Despite challenges, it offers unique control and valuable insights into managing a high-grade home network.",
      "tags": [
        "cs/networking"
      ]
    },
    {
      "id": "01jzzw7tgvj10804xv88jkftr3",
      "title": "Inverse Triangle Inequality Jul 7, 2025",
      "url": "https://matklad.github.io/2025/07/07/inverse-triangle-inequality.html",
      "savedAt": "2025-07-12T17:51:59.003000+00:00",
      "description": "The triangle inequality shows the shortest path between two points is a direct line, and this idea applies in many areas like coding and string comparison. In software development, breaking big changes into small, independent steps helps make progress faster and reviews easier. Sometimes, doing a quick messy version first and then refining it carefully leads to better, clearer code.",
      "tags": [
        "cs",
        "favorites",
        "software-engineering"
      ]
    },
    {
      "id": "01jzzn8zr2s0fysqeqcycemxap",
      "title": "How NAT traversal works",
      "url": "https://tailscale.com/blog/how-nat-traversal-works",
      "savedAt": "2025-07-12T15:50:17.090000+00:00",
      "description": "NAT traversal helps devices connect directly even when behind routers that hide their addresses. It uses special techniques like STUN and port mapping to open paths through firewalls and NATs. Although tricky with multiple NAT layers, these methods often still enable connections without needing complex fixes.",
      "tags": [
        "for-later",
        "cs/networking"
      ]
    },
    {
      "id": "01jzzjzmt7g5rnbx94fpzq27pr",
      "title": "LLM Inference in Production",
      "url": "https://bentoml.com/llm/",
      "savedAt": "2025-07-12T15:10:13.831000+00:00",
      "description": "This handbook from bentoml.com explains how to deploy and optimize large language model (LLM) inference in production. It gathers clear, practical knowledge that is usually scattered and hard to find. Engineers can use it to make LLM inference faster, cheaper, and more reliable.",
      "tags": [
        "llm"
      ]
    },
    {
      "id": "01jzv4zrw1x75bpwbknnck7taf",
      "title": "An Introduction to Neurotransmitters (and How to Modulate Them)",
      "url": "https://desmolysium.com/neurotransmitters/",
      "savedAt": "2025-07-10T21:48:40.193000+00:00",
      "description": "The article explains the role of various neurotransmitters like serotonin, dopamine, and noradrenaline in regulating mood, motivation, and cognitive functions. It describes how these neurotransmitters interact with specific receptors and pathways in the brain to influence behaviors and emotions. Additionally, it discusses methods to modulate neurotransmitter levels, which can impact overall mental health and well-being.",
      "tags": [
        "biology"
      ]
    },
    {
      "id": "01jzs1ryt0v16c2afg1vqbn7cf",
      "title": "Writing a very simple JIT Compiler in about 1000 lines of C",
      "url": "https://kuterdinel.com/writing-a-very-simple-jit-compiler-in-about-1000-lines-of-c.html",
      "savedAt": "2025-07-10T02:14:02.304000+00:00",
      "description": "This article explains how to build a very simple just-in-time (JIT) compiler in about 1000 lines of C code. It covers parsing expressions, encoding x86 instructions, and generating machine code for basic operations. The author also gives tips on extending the compiler with more features and handling variables.",
      "tags": [
        "for-later",
        "cs/compilers"
      ]
    },
    {
      "id": "01jzqvsjeem74gkz3fcywexqvk",
      "title": "You Are The Compiler",
      "url": "https://funcall.blogspot.com/2025/06/you-are-compiler.html",
      "savedAt": "2025-07-09T15:10:16.526000+00:00",
      "description": "The compiler turns nested function calls into a sequence of calls and handles calling rules automatically. In Go, error handling and context passing are done manually by programmers, not the compiler. This makes code longer, error-prone, and breaks the natural nested call style.",
      "tags": [
        "cs/compilers"
      ]
    },
    {
      "id": "01jzqkz31bq1tzfrj7268ttybx",
      "title": "The Mathematical Functions Grimoire",
      "url": "https://fungrim.org/",
      "savedAt": "2025-07-09T12:53:28.747000+00:00",
      "description": "The Mathematical Functions Grimoire is an open source library of formulas and data about special functions. It has many entries, symbols, and topics that are easy to browse online. The data is designed to work well with computer algebra software.",
      "tags": [
        "math"
      ]
    },
    {
      "id": "01jznrh3vbeg1svw0vb18zj6hw",
      "title": "RE//verse 2025: Full-stack Reverse Engineering of the Original Microsoft Xbox (Markus Gaasedelen)",
      "url": "https://www.youtube.com/watch?v=hGlIkgmhZvc",
      "savedAt": "2025-07-08T19:34:44.843000+00:00",
      "description": "Markus Gaasedelen studied the original Xbox by exploring its hardware and software deeply. He learned by examining the motherboard, chips, and CPU, even building new hardware parts like an interposer. His work combined hardware hacking with software reverse engineering to understand the Xbox system fully.",
      "tags": [
        "for-later",
        "reverse-engineering"
      ]
    },
    {
      "id": "01jzgrz40yz2pacmmg835vt6mm",
      "title": "Logical Quantifiers in Software",
      "url": "https://buttondown.com/hillelwayne/archive/logical-quantifiers-in-software/",
      "savedAt": "2025-07-06T21:06:11.614000+00:00",
      "description": "Logical quantifiers like \"all\" and \"some\" help us express properties about sets and are useful in programming. They simplify code and can describe things like tests, database rules, and software behavior. Understanding quantifiers makes it easier to write clear and correct programs.",
      "tags": [
        "cs",
        "math/logic"
      ]
    },
    {
      "id": "01jzg2rh4tctcwdfa100egr996",
      "title": "Lies we tell ourselves to keep using Golang",
      "url": "https://fasterthanli.me/articles/lies-we-tell-ourselves-to-keep-using-golang",
      "savedAt": "2025-07-06T14:38:07.002000+00:00",
      "description": "Go is easy to learn but lets many errors slip through, making careful coding hard. Companies use Go because it has good tools and many existing projects, not always because it’s the best choice. Using Go can create complex problems and extra work that other languages might avoid.",
      "tags": [
        "for-later",
        "cs/programming-languages/go"
      ]
    },
    {
      "id": "01jzevftmv1wj210bjzy1zyagd",
      "title": "How to Network as an Introvert",
      "url": "https://aginfer.bearblog.dev/how-to-network-as-an-introvert/",
      "savedAt": "2025-07-06T03:11:47.355000+00:00",
      "description": "Networking as an introvert works best with simple steps that fit your style. Prepare before events, listen carefully, and make small, meaningful connections. Show confidence, be genuine, and follow up to build real relationships.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "01jzdqx5hhsppnmn0pmh8e07d2",
      "title": "A Smart Guide to Choosing the Right Antidepressant",
      "url": "https://desmolysium.com/antidepressants/",
      "savedAt": "2025-07-05T16:49:55.761000+00:00",
      "description": "Depression has many types and needs different treatments, not just one antidepressant for all. Antidepressants can help but have side effects and don’t fix long-term life issues alone. Other options like hormones, psychedelics, and lifestyle changes also play important roles in feeling better.",
      "tags": [
        "biohack",
        "self-improvement"
      ]
    },
    {
      "id": "01jz4jbemeznjj1j1n52hdz67b",
      "title": "From Python Programmer to Distributed Systems Researcher in 10 Years Without a PhD",
      "url": "https://emptysqua.re/blog/from-python-programmer-to-distributed-systems-researcher-in-10-years/",
      "savedAt": "2025-07-02T03:19:42.478000+00:00",
      "description": "The author started as a self-taught programmer interested in 3D graphics and later worked with Python and MongoDB. Over ten years, he learned about distributed systems by reading research papers and joining a research team, despite not having a PhD. Now, he is a senior research engineer contributing to distributed systems at MongoDB.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "01jz3813h3rf832c6rgt00qwhd",
      "title": "Queuing Theory on a Cocktail Napkin by Dan Slimmon | DC Systems 007",
      "url": "https://www.youtube.com/watch?v=tcfyDJgLOVc",
      "savedAt": "2025-07-01T15:00:03.235000+00:00",
      "description": "A queuing system has five key parts: servers, a queue, a way to decide order, arrivals, and processing. Queues are everywhere, and you cannot get rid of them, only move or manage them. Understanding queuing theory helps predict wait times and system behavior better.",
      "tags": [
        "cs",
        "math/queueing-theory"
      ]
    },
    {
      "id": "01jz11hdrhxpv7n4wg0g3s9fhe",
      "title": "Inference in Agda",
      "url": "https://raw.githack.com/effectfully/inference-in-agda/master/InferenceInAgda.html",
      "savedAt": "2025-06-30T18:28:09.105000+00:00",
      "description": "Agda uses unification to infer types by turning unknowns into metavariables and checking them. Haskell infers types too but gives errors if some types cannot be found, unlike Agda. Agda is more flexible and can defer type problems to later, allowing more implicit variables.",
      "tags": [
        "cs",
        "type-theory"
      ]
    },
    {
      "id": "01jyy9vsk02a90wre242pp9p10",
      "title": "Bloom Filters by Example",
      "url": "https://llimllib.github.io/bloomfilter-tutorial/",
      "savedAt": "2025-06-29T16:55:54.208000+00:00",
      "description": "A Bloom filter is a fast and memory-efficient data structure to check if an element is in a set. It uses hash functions to set bits in a bit vector to indicate presence. The size and number of hash functions affect the efficiency and error rate of a Bloom filter.",
      "tags": [
        "cs/database",
        "cs/data-structures"
      ]
    },
    {
      "id": "01jywsfa6bddd11k6hvp4nvres",
      "title": "My experience using financial commitments to overcome akrasia",
      "url": "https://www.lesswrong.com/posts/DRrAMiekmqwDjnzS5/my-experience-using-financial-commitments-to-overcome",
      "savedAt": "2025-06-29T02:50:13.579000+00:00",
      "description": "The author uses financial commitments to motivate himself and overcome procrastination. He sets small penalties for failing tasks, making habits easier to keep and plans better. This method helps him focus on important work and daily habits by reducing distractions and increasing accountability.",
      "tags": [
        "self-improvement"
      ]
    },
    {
      "id": "01jyvs9sttqx7gcz4smw5zm92w",
      "title": "My TRT Lite Protocol",
      "url": "https://desmolysium.com/my-trt-lite-protocol/",
      "savedAt": "2025-06-28T17:27:58.554000+00:00",
      "description": "The author increased testosterone and estradiol levels to improve quality of life and health. Daily testosterone injections with added HCG raised hormone levels while reducing side effects like hair loss. Balancing high testosterone with low DHT helped keep benefits without common TRT downsides.",
      "tags": [
        "biohack"
      ]
    },
    {
      "id": "01jyqv739j6q373qha2zbjh374",
      "title": "How to Think About Time in Programming",
      "url": "https://shanrauf.com/archive/how-to-think-about-time-in-programming",
      "savedAt": "2025-06-27T04:44:29.362000+00:00",
      "description": "UTC is a global time standard that helps keep clocks in sync worldwide. Timezones adjust UTC to match local sun positions, but their rules can change unpredictably. Because of leap seconds and shifting rules, handling time in programming is complex and requires up-to-date data.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "01jyqv6g36m15dszdc7f4rs9kf",
      "title": "Stateful workload operator: stateful systems on Kubernetes at LinkedIn",
      "url": "https://www.linkedin.com/blog/engineering/infrastructure/stateful-workload-operator-stateful-systems-on-kubernetes-at-linkedin",
      "savedAt": "2025-06-27T04:44:09.701000+00:00",
      "description": "LinkedIn is transitioning to Kubernetes for managing stateful applications and host lifecycle maintenance, moving away from their custom scheduler. They have developed a Stateful Workload Operator that simplifies lifecycle management by centralizing orchestration tasks, allowing teams to focus on application health. This new approach improves consistency and reduces operational overhead while ensuring seamless integration with Kubernetes and infrastructure layers.",
      "tags": []
    },
    {
      "id": "01jyqv277h9q23gv8v6hpecjpn",
      "title": "Learnings from building AI agents",
      "url": "https://www.cubic.dev/blog/learnings-from-building-ai-agents",
      "savedAt": "2025-06-27T04:41:49.553000+00:00",
      "description": "The AI code review agent was too noisy and gave many false positives at first. By making the AI explain its reasoning and using specialized smaller agents, the team cut false positives by 51%. This made code reviews clearer, faster, and more trusted by developers.",
      "tags": [
        "llm",
        "cs/ai"
      ]
    },
    {
      "id": "01jyqv020kp1nvm04tdwztq7pk",
      "title": "How much code does that proc macro generate?",
      "url": "https://nnethercote.github.io/2025/06/26/how-much-code-does-that-proc-macro-generate.html",
      "savedAt": "2025-06-27T04:40:38.674000+00:00",
      "description": "Rust proc macros can greatly increase code size and slow compile times. A new Rust compiler flag, -Zmacro-stats, helps measure how much code proc macros generate. Knowing this helps developers optimize macros and reduce compile time.",
      "tags": [
        "cs/programming-languages/rust"
      ]
    },
    {
      "id": "01jyetbd3xtm90b8yqnt76w66z",
      "title": "The Halting Problem is a terrible example of NP-Harder",
      "url": "https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/",
      "savedAt": "2025-06-23T16:36:12.029000+00:00",
      "description": "The halting problem is often used as an example of an NP-hard problem, but this is confusing and not ideal. There are problems harder than NP that are still decidable and easier to explain, like certain grid token movement puzzles. These problems show complexity beyond NP without jumping directly to undecidability like the halting problem.",
      "tags": [
        "cs/computation-theory"
      ]
    },
    {
      "id": "01jycsc61gfc17mycnrpwndrk5",
      "title": "What is cosh(List(Bool))? Or beyond algebra: analysis of data types.",
      "url": "https://cofault.com/aodt.html",
      "savedAt": "2025-06-22T21:40:40.111000+00:00",
      "description": "The text explores the mathematical structures of data types, particularly lists and trees, using algebraic expressions. It shows how lists can be represented with functions and how different types of collections, like bags and sets, have distinct combinatorial properties. The author concludes that there is a strong relationship between bags of rings and lists, suggesting deep connections in type theory.",
      "tags": [
        "cs/pl-theory"
      ]
    },
    {
      "id": "01jyby49qtc6vy4ww9swnx260j",
      "title": "Git Notes: git's coolest, most unloved feature",
      "url": "https://tylercipriani.com/blog/2022/11/19/git-notes-gits-coolest-most-unloved-feature/",
      "savedAt": "2025-06-22T13:44:30.202000+00:00",
      "description": "Git notes are powerful tools for adding metadata to commits in a Git repository. They can be used to track time spent, code reviews, and testing information. Despite being underutilized due to usability issues, Git notes have the potential to enhance collaboration and project history.",
      "tags": [
        "tools/git"
      ]
    },
    {
      "id": "01jyb4jr41yvsy961dcaca5j0x",
      "title": "Estrogen: A trip report",
      "url": "https://smoothbrains.net/posts/2025-06-15-estrogen.html",
      "savedAt": "2025-06-22T06:18:00.705000+00:00",
      "description": "Estrogen affects the brain by changing receptors linked to mood and perception, making people feel more embodied and less sensitive to sensory issues. For those with gender dysphoria, estrogen can reduce feelings of depersonalization and improve wellbeing. The author suggests estrogen acts like a mild psychedelic, reshaping body awareness and helping with psychological and sensory challenges.",
      "tags": [
        "biohack",
        "chemistry"
      ]
    },
    {
      "id": "01jyb43t40b3xpqtrspms0d5c9",
      "title": "Of Course ML Has Monads!",
      "url": "https://existentialtype.wordpress.com/2011/05/01/of-course-ml-has-monads/",
      "savedAt": "2025-06-22T06:09:51.232000+00:00",
      "description": "The article argues that while Haskell is known for its use of monads, ML can also implement them using its module system. Monads in ML are just a specific way to structure programs, and creating them involves library design rather than language limitations. The author suggests that while monads can be useful, they are not inherently necessary or better in ML compared to Haskell.",
      "tags": [
        "cs/functional-programming"
      ]
    },
    {
      "id": "01jyafbew7f72cqsdmxnqkh86b",
      "title": "How do Transistors Work?  How are Transistors Assembled Inside a CPU?",
      "url": "https://www.youtube.com/watch?v=_Pqfjer8-O4",
      "savedAt": "2025-06-22T00:07:01.767000+00:00",
      "description": "Transistors inside a CPU work like tiny switches that control electricity to perform logic operations. Many transistors connect to form standard cells, which are like Lego bricks building complex circuits. These cells combine to create the CPU's functions, using billions of transistors organized with layers of wires.",
      "tags": [
        "hardware",
        "electronics"
      ]
    },
    {
      "id": "01jy7qg9ynrzn3eentkt9fg8kk",
      "title": "Career advice, or something like it",
      "url": "https://brooker.co.za/blog/2025/06/20/career.html",
      "savedAt": "2025-06-20T22:31:45.877000+00:00",
      "description": "Avoid spending time in negative groups where people only complain. Focus on positive communities and people who inspire you. Use your energy to do good work and enjoy life outside of work.",
      "tags": [
        "career",
        "favorites"
      ]
    },
    {
      "id": "01jy7ehxc3b14evcefh6yndfcg",
      "title": "What I talk about when I talk about IRs",
      "url": "https://bernsteinbear.com/blog/irs/",
      "savedAt": "2025-06-20T19:55:21.347000+00:00",
      "description": "Compiler intermediate representations (IRs break down complex code into simpler parts to help optimization. Different IR styles, like stack-based or register-based, affect how instructions and data flow are handled. Advanced IRs can explicitly show data and control dependencies to improve analysis and transformation.",
      "tags": [
        "cs/compilers",
        "cs/programming-languages"
      ]
    },
    {
      "id": "01jy6sdy8nsx326w1zzngrhhah",
      "title": "Variables Pt. 2",
      "url": "https://makefiletutorial.com/",
      "savedAt": "2025-06-20T13:46:11.092000+00:00",
      "description": "Makefiles help decide which parts of a program need recompiling based on changed files. They use rules with targets and prerequisites to run commands only when needed. Makefiles also support features like automatic variables, wildcards, and including other files to manage complex projects efficiently.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "01jy5vk3cw0djxt9xrqkbsv2yy",
      "title": "We Can Just Measure Things",
      "url": "https://lucumr.pocoo.org/2025/6/17/measuring/",
      "savedAt": "2025-06-20T05:04:42.908000+00:00",
      "description": "Armin Ronacher reflects on a recent project where he and friends experimented with programming agents. He emphasizes the importance of measuring code quality and project health using these agents, as they can provide objective feedback without the emotional bias of human developers. Ronacher argues that better tools, documentation, and ecosystem stability benefit both agents and human programmers alike.",
      "tags": [
        "engineering"
      ]
    },
    {
      "id": "01jy5v30zn7y3q9myx7yj4wkty",
      "title": "More frontend web tricks",
      "url": "https://kaiwenwang.com/writing/more-frontend-web-tricks",
      "savedAt": "2025-06-20T04:55:56.148000+00:00",
      "description": "The author shares practical tips for improving website usability on different devices and browsers. They emphasize clear design, responsive layouts, and meaningful icons to enhance user experience. The text also discusses how marketing and presentation affect app success despite product quality.",
      "tags": [
        "web",
        "design"
      ]
    },
    {
      "id": "01jy5rc69j4a82eqy1beqre5z0",
      "title": "56 Responses to “Guess I’m A Rationalist Now”",
      "url": "https://scottaaronson.blog/?p=8908",
      "savedAt": "2025-06-20T04:08:30.769000+00:00",
      "description": "Scott Aaronson attended a Rationalist conference and realized he identifies as a Rationalist after many years. He explains why he hesitated before, including cultural differences and fear of judgment. Despite criticism, he sees the Rationalist community as vibrant, thoughtful, and growing.",
      "tags": [
        "philosophy/rationalism"
      ]
    },
    {
      "id": "01jy4tvnpr878n4e9wydhys0sg",
      "title": "Homomorphically Encrypting CRDTs",
      "url": "https://jakelazaroff.com/words/homomorphically-encrypted-crdts/",
      "savedAt": "2025-06-19T19:32:40.791000+00:00",
      "description": "Homomorphic encryption allows computers to perform operations on encrypted data without needing to decrypt it first. This article discusses building a homomorphically encrypted CRDT, which is a type of data structure, using a Rust library called THFE-rs. However, there are significant limitations, as operations with homomorphic encryption can be extremely slow and resource-intensive.",
      "tags": [
        "cs/distsys",
        "cs/security"
      ]
    },
    {
      "id": "01jy4t6exnxkt8c6gbqy0rzhad",
      "title": "In Praise of “Normal” Engineers",
      "url": "https://charity.wtf/2025/06/19/in-praise-of-normal-engineers/",
      "savedAt": "2025-06-19T19:21:05.717000+00:00",
      "description": "Great engineering teams succeed because normal engineers work well together, not just because of rare \"10x\" stars. Building strong teams and good systems helps everyone contribute and improve. The best companies help regular engineers grow into world-class talent over time.",
      "tags": [
        "career"
      ]
    },
    {
      "id": "01jy35ns5qxc7dw535f8ge4yq5",
      "title": "Monads are not like burritos",
      "url": "https://byorgey.github.io/blog/posts/2025/06/16/monads-are-not-burritos.html",
      "savedAt": "2025-06-19T04:03:13.207000+00:00",
      "description": "The author argues that the popular \"monads are burritos\" analogy is misleading and unhelpful for learning about monads. They explain that monads do not always \"contain\" values in a simple way like burritos, so the analogy breaks down. Despite being a joke, some people still take the analogy seriously, which causes confusion.",
      "tags": [
        "cs/functional-programming"
      ]
    },
    {
      "id": "01jy35ev8a91szx8cg5nqe5qnj",
      "title": "react/compiler/packages/babel-plugin-react-compiler/src/Inference/MUTABILITY_ALIASING_MODEL.md at main · facebook/react",
      "url": "https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/Inference/MUTABILITY_ALIASING_MODEL.md",
      "savedAt": "2025-06-19T03:59:25.962000+00:00",
      "description": "The mutability and aliasing model tracks which values change together and how those changes happen in code. It uses effects like Create, Mutate, Alias, and Capture to describe how data flows and mutates. This helps React understand and optimize updates by grouping related mutations into reactive scopes.",
      "tags": []
    },
    {
      "id": "01jy2wqs621mgcyt78qjz6n6db",
      "title": "Retries",
      "url": "https://justinblank.com/notebooks/retries.html",
      "savedAt": "2025-06-19T01:27:01.569000+00:00",
      "description": "Retries in web clients are commonly used to handle failures, but they can worsen overload conditions by increasing traffic. Circuit breakers can help, but they may not always work effectively in distributed systems where some requests succeed while others fail. Instead of just relying on retries, using strategies like token buckets and deadline propagation can improve performance during overload situations.",
      "tags": []
    },
    {
      "id": "01jy2vw6mz9fg22h3xe1dg6576",
      "title": "Building Effective AI Agents",
      "url": "https://www.anthropic.com/engineering/building-effective-agents",
      "savedAt": "2025-06-19T01:11:57.855000+00:00",
      "description": "Anthropic has learned from working with various teams to build effective AI agents using large language models (LLMs). They differentiate between workflows, which follow predefined paths, and agents that operate flexibly and autonomously. The article provides practical advice for developers on choosing the right approach and emphasizes the importance of simplicity and effective design in building these systems.",
      "tags": [
        "llm",
        "cs/ai"
      ]
    },
    {
      "id": "01jy2rye8mfd541h5azek261mv",
      "title": "Time Series Forecasting with Graph Transformers",
      "url": "https://kumo.ai/research/time-series-forecasting/",
      "savedAt": "2025-06-19T00:20:45.459000+00:00",
      "description": "This blog explains how to forecast time series data using graph transformers that consider connections between related data points. It shows how to build a model that uses both past data and graph information to predict future values. The post also compares simple regression forecasts with more detailed generative forecasts, highlighting their strengths.",
      "tags": [
        "cs/database"
      ]
    },
    {
      "id": "01jy2k5gqgyw183a09sm36x5s4",
      "title": "Graphical Linear Algebra",
      "url": "https://graphicallinearalgebra.net/",
      "savedAt": "2025-06-18T22:39:45.904000+00:00",
      "description": "Graphical Linear Algebra is a blog that explains linear algebra using diagrams and geometry. It offers many episodes covering topics like matrices, relations, and fractions in a visual way. The blog invites students and researchers to explore and contribute to this ongoing work.",
      "tags": [
        "math/linear-algebra"
      ]
    },
    {
      "id": "01jy2j4wrdhkp6yrnte55a6yn8",
      "title": "I wrote a compiler",
      "url": "https://blog.singleton.io/posts/2021-01-31-i-wrote-a-compiler/",
      "savedAt": "2025-06-18T22:21:56.877000+00:00",
      "description": "The author, who has a Computer Science degree, wrote a simple compiler called \"toybasic\" for a variant of BASIC on a rainy weekend. The compiler is written in Go and converts BASIC code into Go code, featuring a lexer, parser, and compiler stages. The project was both educational and enjoyable, allowing the author to revisit their first programming experiences.",
      "tags": [
        "cs/compilers"
      ]
    },
    {
      "id": "01jxzqhbvvrv6a1z1sybf76rp0",
      "title": "Double-Entry Ledgers: The Missing Primitive in Modern Software",
      "url": "https://www.pgrs.net/2025/06/17/double-entry-ledgers-missing-primitive-in-modern-software/",
      "savedAt": "2025-06-17T19:58:25.147000+00:00",
      "description": "Double-entry ledgers are often overlooked in modern software, but they can simplify complex systems by providing a clear structure for tracking changes over time. The author is developing pgledger, a PostgreSQL implementation, to encourage more developers to adopt this useful modeling technique. By using ledgers, applications can easily manage various transactions, track balances, and audit changes without adding unnecessary complexity.",
      "tags": [
        "cs/database"
      ]
    },
    {
      "id": "01jxr39613v05wz7xygh7qmsfe",
      "title": "ADRs.",
      "url": "https://www.beflagrant.com/blog/adrs",
      "savedAt": "2025-06-14T20:49:44.483000+00:00",
      "description": "Architecture Decision Records (ADRs) help document significant decisions made during a project, providing context, the decision itself, and its consequences. This approach clarifies why decisions were made and how they may impact future changes in the system. By using a standard format, ADRs make it easier for current and future team members to understand the reasoning behind architectural choices.",
      "tags": [
        "engineering"
      ]
    },
    {
      "id": "01jxqsw4q8036xcp3ywbyx95b1",
      "title": "Conformance Checking at MongoDB: Testing That Our Code Matches Our TLA+ Specs",
      "url": "https://emptysqua.re/blog/mongodb-conformance-checking/",
      "savedAt": "2025-06-14T18:05:19.976000+00:00",
      "description": "The author discusses a project to ensure that MongoDB's implementation matches its TLA+ specifications using a method called trace-checking. They faced challenges because the specifications were abstract and not aligned with the implementation, making it difficult to verify conformance. The author suggests that starting with closely aligned specs and implementations would improve the process.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01jxqqc3xenz4hr9abr3z61xse",
      "title": "How Long Must I Test?",
      "url": "https://emptysqua.re/blog/how-long-must-i-test/",
      "savedAt": "2025-06-14T17:21:37.710000+00:00",
      "description": "When testing for bugs in nondeterministic programs, it is important to run tests multiple times with different inputs to find rare issues. A new method called Probabilistic Concurrency Testing (PCT) efficiently identifies bugs by controlling thread scheduling. Many engineers lack knowledge about effective randomized testing, which can lead to missed bugs in distributed systems.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01jxkn2p7x1qej2xh2jz25w8mj",
      "title": "Notes on Managing ADHD",
      "url": "https://borretti.me/article/notes-on-managing-adhd",
      "savedAt": "2025-06-13T03:24:33.917000+00:00",
      "description": "The text provides strategies for managing ADHD, emphasizing the importance of using a todo list to form habits and stay organized. It suggests journaling for introspection and understanding procrastination patterns, while also recommending centralizing tasks to avoid distractions. Finally, it highlights the need to control the environment and minimize interruptions to enhance productivity.",
      "tags": [
        "favorites",
        "self-improvement"
      ]
    },
    {
      "id": "01jxadqyhhf43dkvqgxsh0dpmz",
      "title": "A Brief Tour of FLP Impossibility",
      "url": "https://www.the-paper-trail.org/post/2008-08-13-a-brief-tour-of-flp-impossibility/",
      "savedAt": "2025-06-09T13:23:12.049000+00:00",
      "description": "The paper \"Impossibility of Distributed Consensus with One Faulty Process\" shows that achieving consensus in an asynchronous system is impossible, even with reliable communication links. It proves that there will always be an initial configuration where no processor can decide on a value due to message delays or failures. This result highlights the limitations of consensus algorithms in distributed computing environments.",
      "tags": [
        "for-later",
        "cs/distsys"
      ]
    },
    {
      "id": "01jxa7tz9a4nqnbcw65m9zg0na",
      "title": "atl.wiki",
      "url": "https://atl.wiki/",
      "savedAt": "2025-06-09T11:39:59.658000+00:00",
      "description": "atl.wiki is a wiki created by the All Things Linux non-profit organization, offering resources and support for Linux users of all levels. Anyone can contribute by editing pages, improving content, and following the site's guidelines. For support or questions, users can connect through the Discord server or the contact options available on the site.",
      "tags": [
        "os/linux"
      ]
    },
    {
      "id": "01jx8ykd6s53xqbd6xexm7pe9h",
      "title": "Just fucking code.",
      "url": "https://www.justfuckingcode.com/",
      "savedAt": "2025-06-08T23:39:20.153000+00:00",
      "description": "Programming is not as hard as people make it seem, and relying too much on AI tools can hinder your skills. Many who call themselves developers lack basic coding knowledge and produce poor-quality work. To succeed, focus on understanding and writing code yourself instead of depending solely on AI.",
      "tags": [
        "cs"
      ]
    },
    {
      "id": "01jx88fh0jek066t70kygw4mcv",
      "title": "What's the big deal about Deterministic Simulation Testing?",
      "url": "https://notes.eatonphil.com/2024-08-20-deterministic-simulation-testing.html",
      "savedAt": "2025-06-08T17:12:44.306000+00:00",
      "description": "Deterministic Simulation Testing (DST) helps find bugs in distributed systems by controlling randomness and simulating interactions on a single thread. This method allows developers to test how their code behaves under various conditions while injecting faults to mimic real-world issues. Although DST is powerful, it requires careful setup and cannot test everything without mocking external systems.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01jx7xkmc7tmg5hgswc2xrg1v5",
      "title": "How can one write blazing fast yet useful compilers (for lazy pure functional languages)?",
      "url": "https://lobste.rs/s/e8abqn",
      "savedAt": "2025-06-08T14:02:44.487000+00:00",
      "description": "The author wants to create a fast compiler for a basic lazy statically-typed functional programming language, similar to Haskell. They aim for the compiler to handle large codebases quickly, ideally completing builds in milliseconds on a mid-range laptop. The author seeks advice on optimizing various compiler phases and has specific constraints like indentation-sensitive syntax and portable bootstrapping.",
      "tags": [
        "cs/compilers",
        "programming-languages"
      ]
    },
    {
      "id": "01jx7wjz4w1t8pqs1g3faw22yj",
      "title": "Self-Host & Tech Independence: The Joy of Building Your Own",
      "url": "https://www.ssp.sh/blog/self-host-self-independence/",
      "savedAt": "2025-06-08T13:44:54.172000+00:00",
      "description": "The article discusses the benefits of self-hosting and building your own tech, inspired by the author’s experiences with open-source projects and Linux. It highlights the joy and independence that come from creating personalized solutions instead of relying on big tech companies. Sharing knowledge and tools within the open-source community enhances learning and fosters collaboration among like-minded individuals.",
      "tags": [
        "homelab"
      ]
    },
    {
      "id": "01jx7t3p6w9y5bds34106tdp2s",
      "title": "a timeline -- V3.1",
      "url": "https://jeffreykegler.github.io/personal/timeline_v3",
      "savedAt": "2025-06-08T13:01:36.348000+00:00",
      "description": "This text outlines the development of parsing techniques from the early 20th century to 2004, highlighting key algorithms and milestones. It discusses how parsing has evolved from basic operator expression parsing to more complex methods like Knuth's LR parsing. The journey shows the ongoing challenges in creating efficient and practical parsers, as well as the influence of mathematical concepts on parsing theory.",
      "tags": [
        "cs/parsers"
      ]
    },
    {
      "id": "01jx5x84tacstgq2dbd1fp5nmy",
      "title": "Can We Rely On Timers For Distributed Algorithms?",
      "url": "https://emptysqua.re/blog/timers-distributed-algorithms/",
      "savedAt": "2025-06-07T19:17:59.242000+00:00",
      "description": "Timers in distributed algorithms can be trusted if a proper safety margin is applied to account for clock drift and inaccuracies. While there are concerns about timer reliability, especially in asynchronous systems, a bounded inaccuracy model allows for more efficient protocols. Overall, with careful design, timers can support consistent operations in distributed systems like Raft and MongoDB.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01jx2hs2226vneths184vtty4t",
      "title": "TigerBeetle 0.16.11",
      "url": "https://jepsen.io/analyses/tigerbeetle-0.16.11",
      "savedAt": "2025-06-06T11:59:47.266000+00:00",
      "description": "TigerBeetle is a resilient database system that can continue operating without data loss, even if some replicas fail. However, it has issues with high latencies during single-node failures and can produce indefinite errors due to its retry mechanism. Recent tests have revealed safety concerns and performance problems that need to be addressed.",
      "tags": [
        "cs/distsys"
      ]
    },
    {
      "id": "01jwyh2fnptf9mnnmv627cc08m",
      "title": "What Every Programmer Should Know about How CPUs Work • Matt Godbolt • GOTO 2024",
      "url": "https://www.youtube.com/watch?v=-HNpim5x-IE",
      "savedAt": "2025-06-04T22:30:29.814000+00:00",
      "description": "The talk explains how CPUs process instructions and utilize techniques like out-of-order execution and branch prediction to improve performance. It also highlights the role of compilers in optimizing code for better CPU efficiency. Understanding these concepts can help programmers write better and more efficient code.",
      "tags": [
        "cs",
        "hardware"
      ]
    },
    {
      "id": "01jwy3nhvqj46kq28jsqw2a8sr",
      "title": "How Scale Makes Distributed Systems Slower • Jonathan Magen • GOTO 2024",
      "url": "https://www.youtube.com/watch?v=GxTJ-3j9y0U",
      "savedAt": "2025-06-04T18:36:14.583000+00:00",
      "description": "Distributed systems can slow down when more resources are added due to the increased need for coordination. This coordination takes time and can complicate processes, leading to inefficiencies. Understanding which problems can be solved without coordination can help improve the performance of these systems.",
      "tags": [
        "cs/distsys"
      ]
    }
  ]
}