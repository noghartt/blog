---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import dayjs from 'dayjs';
import simpleGit, { type DefaultLogFields, type ListLogLine } from 'simple-git';
import path from 'path';

import Link from '../../../components/Link.astro';
import Layout from '../../../layout/Layout.astro';
import GoBackButton from '../../../components/GoBackButton.astro';
import { GITHUB_REPO_URL, SITE } from '../../../config';

type GitLogCommit = DefaultLogFields & ListLogLine;
interface Props {
  post: CollectionEntry<'blog'>;
  lastCommit: GitLogCommit | null;
}

export async function getStaticPaths() {
  const git = simpleGit();
  const posts = await getCollection('blog');

  const postsMapped = posts.map(async post => {
    const file = path.join(process.cwd(), 'src', 'content', 'blog', post.id);

    let lastCommit: GitLogCommit | null = null;
    try {
      const log = await git.log({ file });
      lastCommit = log.latest;
    } catch (err) {
      console.log(err);
    }

    return {
      params: {
        slug: post.slug,
      },
      props: {
        lastCommit,
        post: {
          ...post,
          data: {
            ...post.data,
            tags: post.data.tags || [],
          }
        },
      }
    };
  });

  return Promise.all(postsMapped);
}

const { post, lastCommit } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();

const date = dayjs(post.data.pubDate).format('YYYY-MM-DD HH:mm');

const tableOfContents = headings
  .filter((heading) => heading.depth === 2 || heading.depth === 3)
  .map((headings) => ({
    text: headings.text,
    url: `#${headings.slug}`,
    depth: headings.depth === 2 ? 1 : 2,
  }));

const readingTime = remarkPluginFrontmatter.readingTime;

---

<Layout
  ogImage={`/blog/${post.slug}/og.png`}
  head={{ title: `${post.data.title} | ${SITE.title}` }}
>
  <GoBackButton />

  <section class="content">
    <section class="header">
      <section>
        <h1>{post.data.title}</h1>
        <p>
          {date}
          -
          <span>
            {dayjs(lastCommit.date).format('YYYY-MM-DD HH:mm')}
            (<Link href={`${GITHUB_REPO_URL}/commit/${lastCommit.hash.slice(0, 7)}`} isExternal>{lastCommit.hash.slice(0, 7)}</Link>),
          </span>
          {readingTime ? (
            <span>
              {readingTime.text}
            </span>
          ) : null}
          <br />
          {(post.data.tags || []).map((tag, i) => (
            <span>
              <Link href={`/tag/${tag}`}>
                #{tag}
              </Link>{i < (post.data.tags || []).length - 1 ? ',' : ''}
            </span>
          ))}
       </p>
    </section>

    <article>
      {tableOfContents.length > 0
        ? (
          <details class="toc--wrapper" open>
            <summary>
              Table of Contents
            </summary>
            <section class="toc">
                <ul>
                  {tableOfContents.map(({ text, url, depth }) => (
                    <li style={{ marginLeft: `${depth * 16}px` }}>
                      <div>
                        <Link href={url}>
                          <p>{text}</p>
                        </Link>
                      </div>
                    </li>
                  ))}
                </ul>
            </section>
          </details>
        ): null}
      <Content />
    </article>
  </section>
</Layout>

<style is:global>
  .header {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-2x);
  }

  .content {
    position: relative;
    display: flex;
    gap: var(--spacing-4x);
    flex-direction: column;
  }

  .toc {
    gap: var(--spacing-2x);
    padding: var(--spacing-2x);
  }

  .toc--wrapper {
    background: #f5f5f5;
    padding: var(--spacing);
  }

  @media screen and (min-width: 1024px) {
    .toc--wrapper {
      position: absolute;
      top: 5px;
      left: -300px;
      width: 270px;
    }
  }

  .toc summary {
    cursor: pointer;
  }

  .toc summary h2 {
    display: inline;
  }

  .toc ul li p {
    text-align: left;
  }

  .toc ul {
    margin-left: 0;
  }

  .toc h2 {
    border-bottom: none;
  }

  article {
    display: flex;
    flex-direction: column;
    gap: var(--spacing);
  }

  article ul {
    display: flex;
    flex-direction: column;
    gap: var(--spacing);
    margin-left: var(--spacing-4x);
  }

  article ol li {
    list-style-type: decimal;
    margin-left: var(--spacing-4x);
  }

  article ul li {
    list-style-type: disc;
  }

  article code {
    border: 1px solid var(--color-primary);
    padding: 0 4px;
    text-wrap: wrap;
    word-break: break-all;
  }

  article img {
    width: 100%;
  }

  article blockquote {
    border-left: 2px solid var(--color-primary);
    padding: var(--spacing) var(--spacing-2x);
    background-color: #f5f5f5;
  }

  .tags {
    display: flex;
    column-gap: var(--spacing);
  }

  [data-rehype-pretty-code-title] {
    color: var(--color-white);
    padding: var(--spacing);
  }
  [data-rehype-pretty-code-figure] code {
    color: var(--color-white);
    padding: var(--spacing);
    font-size: var(--font-size-md);
    overflow-x: auto;
    background-color: var(--color-white);
    border: 1px solid var(--color-primary);
    border-radius: var(--border-radius);
    margin: var(--spacing) 0;
    white-space: pre-wrap;
    text-wrap: nowrap;
  }

  code {
    counter-reset: line;
  }

  code > [data-line]::before {
    counter-increment: line;
    content: counter(line);

    /* Other styling */
    display: inline-block;
    width: 1rem;
    margin-right: 2rem;
    text-align: right;
    color: gray;
  }

  code[data-line-numbers-max-digits="2"] > [data-line]::before {
    width: 2rem;
  }

  code[data-line-numbers-max-digits="3"] > [data-line]::before {
    width: 3rem;
  }

  /* TODO: Why KaTeX are duplicating the code. */
  .katex-html {
    display: none;
  }

  .table-wrapper {
    overflow-x: auto;
  }

  table {
    overflow-x: auto;
    border: 1px solid var(--color-primary);
    border-collapse: collapse;
  }

  table tr {
    border: 1px solid var(--color-primary);
  }

  table tr:last-child {
    border-bottom: none;
  }

  table tr:nth-child(2n) {
    background-color: rgba(0,0,0,0.1);
  }

  table th {
    font-weight: bold;
    background-color: var(--color-primary);
    color: var(--color-white);
  }

  table th,
  table td {
    padding: var(--spacing) var(--spacing-2x);
  }
</style>