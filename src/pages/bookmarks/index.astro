---
import dayjs from 'dayjs';
import { getCollection } from 'astro:content';

import Layout from "../../layout/Layout.astro";
import GoBackButton from '../../components/GoBackButton.astro';
import Link from "../../components/Link.astro";

const [bookmarksJson] = await getCollection('bookmarks');
const bookmarksData = bookmarksJson.data;

const groupByMonth = (bookmarks) => {
  const grouped = bookmarks.reduce((acc, bookmark) => {
    const month = dayjs(bookmark.savedAt).startOf('month').toISOString();
    if (!acc[month]) {
      acc[month] = [];
    }
    acc[month].push(bookmark);
    return acc;
  }, {});
  return grouped;
};

const sortByMonth = (bookmarks) =>
  Object.fromEntries(
    Object.entries(bookmarks)
      .sort(([a], [b]) => dayjs(a).isBefore(b, 'month') ? 1 : -1)
      .map(([month, bookmark]) => [dayjs(month).format('YYYY [/] MMMM'), bookmark])
  );

const bookmarksGroupedByMonth = groupByMonth(bookmarksData);
const bookmarksSorted = sortByMonth(bookmarksGroupedByMonth);

const tableOfContents = Object.keys(bookmarksSorted).map((month) => ({
  text: month,
  url: `#${month}`,
  depth: 1,
}));
---

<Layout>
  <div class="header">
    <GoBackButton />
    <Link href="/bookmarks/tags">
      Bookmarks categorized by tags
    </Link>
  </div>
  <section class="posts">
    <section>
      <h2>bookmarks.</h2>
      <p>Last update: {dayjs(bookmarksJson.lastUpdate).format('DD[/]MM[/]YYYY HH:mm')}</p>
    </section>
    <section class="description">
      <p>
        Feel free to follow this list via RSS too, you can find it <Link href='/bookmarks/rss.xml'>here</Link>.
      </p>
      <p>
        If you prefer, you ca also check the tags accordingly their labels <Link href='/bookmarks/tags'>here</Link>.
      </p>
      <p>
        Everything that I added here, come from my RSS feed. If you curios about the recommendations, you can check my OPML file at <Link href='/rss.opml'>here</Link>.
      </p>
    </section>
    <details class="toc" open>
      <summary>
        <h2>Table of Contents</h2>
      </summary>
      <ul>
        {tableOfContents.map(({ text, url, depth }) => (
          <li style={{ marginLeft: `${depth * 16}px` }}>
            <div>
              <Link href={url}>
                <p>{text}</p>
              </Link>
            </div>
          </li>
        ))}
      </ul>
    </details>
    <section class="bookmarks">
      {Object.entries(bookmarksSorted).map(([month, bookmarks]) => (
        <div class="description">
          <h3 id={month}>
            <a class="heading-link" href={`#${month}`}>
              {month}
            </a>
          </h3>
          <ul>
            {bookmarks.map((bookmark) => (
              <li>
                <Link href={bookmark.url} target="_blank" rel="noopener">
                  {bookmark.title}
                </Link>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </section>
  </section>
</Layout>

<style>
  .description {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-2x);
  }

  .header {
    display: flex;
    gap: var(--spacing-2x);
  }

  .toc {
    gap: var(--spacing-2x);
    background: #f5f5f5;
    padding: var(--spacing-2x);
  }

  .toc summary {
    cursor: pointer;
  }

  .toc summary h2 {
    display: inline;
    margin-left: var(--spacing);
  }

  .toc ul {
    /* TODO: The flexbox seems not working in Chrome. */
    margin-top: var(--spacing-2x);
  }

  .toc h2 {
    border-bottom: none;
  }

  .posts {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-4x);
  }

  .posts ul {
    display: flex;
    flex-direction: column;
    gap: var(--spacing);
  }

  .posts ul li {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    column-gap: var(--spacing-8x);
  }

  .posts :global(a) {
    flex: 1;
    overflow-wrap: anywhere;
  }

  @media screen and (max-width: 425px) {
    .posts ul {
      gap: var(--spacing-2x);
    }

    .posts ul li {
      flex-direction: column;
    }
  }

  .bookmarks {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-4x);
  }

  .description {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-2x);
  }
</style>


