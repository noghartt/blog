---
import dayjs from 'dayjs';
import { getCollection } from 'astro:content';

import Layout from "../../../layout/Layout.astro";
import GoBackButton from '../../../components/GoBackButton.astro';

import TreeNode from './_TreeNode.astro';
import Link from '../../../components/Link.astro';

const [bookmarksJson] = await getCollection('bookmarks');
const bookmarksData = bookmarksJson.data.data;

const groupByTag = (bookmarks: typeof bookmarksData): Record<string, typeof bookmarksData[]> => {
  const grouped = bookmarks.reduce((acc, bookmark) => {
    bookmark.tags.forEach((tag: string) => {
      if (!acc[tag]) {
        acc[tag] = [];
      }
      acc[tag].push(bookmark);
    });
    return acc;
  }, {});
  return grouped;
};

const tags = groupByTag(bookmarksData);

const bookmarksWithoutTags = bookmarksData.filter((bookmark) => bookmark.tags.length === 0);
tags['without-tags'] = bookmarksWithoutTags;

const tagsSorted = Object.entries(tags).sort(([tagA], [tagB]) =>
  tagA.localeCompare(tagB)
);

const tagsSortedAndCounted = tagsSorted.map(([tag, bookmarks]) => [tag, bookmarks.length]);

const organizeBookmarks = (bookmarks) => {
  const tree = {};

  bookmarks.forEach(([label, count]) => {
    const parts = label.split('/');
    let currentLevel = tree;

    parts.forEach((part, index) => {
      if (!currentLevel[part]) {
        currentLevel[part] = {
          originalLabel: parts.slice(0, index + 1).join('/'),
          count: 0,
          children: {},
        };
      }

      if (index === parts.length - 1) {
        currentLevel[part].count += count;
      }

      currentLevel = currentLevel[part].children;
    });
  });

  const computeCounts = (node) => {
    let totalCount = node.count;

    for (const child in node.children) {
      totalCount += computeCounts(node.children[child]);
    }

    node.count = totalCount;
    return totalCount;
  };

  for (const key in tree) {
    computeCounts(tree[key]);
  }

  return tree;
};

const tree = organizeBookmarks(tagsSortedAndCounted);

const sanitizeTag = (tag: string) => tag.replaceAll(/\//g, '-');
---

<Layout>
  <div class="header">
    <GoBackButton />
    <Link href="/bookmarks">
      Bookmarks
    </Link>
  </div>
  <section class="posts">
    <section>
      <h2>bookmarks.</h2>
      <p>Last update: {dayjs(bookmarksJson.lastUpdate).format('DD[/]MM[/]YYYY HH:mm')}</p>
      <p>
        There's a total of {bookmarksData.length} bookmarks.
      </p>
    </section>
    <ul>
      {Object.entries(tree).map(([nodeLabel, node]) => (
        <TreeNode
          node={node}
          label={node.originalLabel}
          href={nodeLabel}
          indentLevel={0}
        />
      ))}
    </ul>
  </section>
</Layout>

<style>
  .header {
    display: flex;
    gap: var(--spacing-2x);
  }

  .description {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-2x);
  }

  .posts {
     display: flex;
     flex-direction: column;
     gap: var(--spacing-2x);
   }

   ul {
     display: flex;
     flex-direction: column;
     gap: var(--spacing);
   }

   ul li:has(> ul):first-child {
     margin-top: var(--spacing);
   }
</style>

